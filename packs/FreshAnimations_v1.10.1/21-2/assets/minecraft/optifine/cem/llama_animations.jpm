{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 1, 0)",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing*1.2 * if(is_child, 0.6, 1)",
			"var.lsj": "limb_swing/if(is_child, 2, 1.3)",
			"var.b": "var.r +age/if(is_child, 40, 75)*pi*2",
			"var.swim": "var.r +limb_swing/6 +age/if(is_child, 13, 18)*pi*2",
			"var.run": "clamp(if( varb.fcc, var.run, limb_speed >= if(is_child, 0.4, 0.6), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.3, 1))",
			"var.walk": "clamp(1-var.run, 0, 1)",
			"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -19, 0, clamp( sin( var.r +age/(20*12) )*8 -5, 0, 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -14, 0, clamp( sin( var.r +age/(15*12) )*8 -5, 0, 1 ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "pi/2",
			"head2.rx": "-head.rx +torad(head_pitch)/1.5 -if(!is_on_ground&&is_in_water, torad(-5) +sin(var.swim)/10, -cos(var.ls*2)/19*clamp(limb_speed*4, 0, 1)*var.walk -(-cos(var.lsj)/12 -torad(5))*limb_speed*var.run ) +sin(var.b+torad(90))/70 +(torad(10)*limb_speed)",
			"head2.rz": "-head.rz -sin(var.ls)/40*clamp(limb_speed*4, 0, 1)*var.walk",
			"head2.ry": "-head.ry +cos(var.ls)/32*clamp(limb_speed*4, 0, 1)*var.walk +torad(var.hy)",
			"head2.tx": "clamp(-torad(var.hy)*2*if(is_ridden, 0, clamp(1-limb_speed*4, 0, 1)), torad(-2), torad(2)) * (1-0.5*var.child_scale)",
			"head2.ty": "-17 +if(!is_on_ground&&is_in_water, if(is_ridden, 0, 4) +sin(var.swim), -sin(torad(45)+var.ls*2)/2*clamp(limb_speed*4, 0, 1)*var.walk -(cos(+var.lsj -sin(var.lsj)/2)*3 +if(is_child, 0, 2) )*limb_speed*var.run ) -sin(var.b+torad(90))/4",
			"head2.tz": " -8 +if(!is_on_ground&&is_in_water, -sin(torad(-45)+var.swim)/2, (sin(-pi/4 +var.lsj -cos(var.lsj)/3) -1)*limb_speed*var.run)",
			"body_rotation.rx": "if(!is_on_ground&&is_in_water, torad(-10) +sin(var.swim)/10, -sin(var.ls*2)/16*clamp(limb_speed*4, 0, 1)*var.walk +(-sin(var.lsj)/8 +torad(5))*limb_speed*var.run ) +sin(var.b-torad(45))/60",
			"body_rotation.ry": "sin(var.ls)/20*clamp(limb_speed*2, 0, 1)*var.walk",
			"body_rotation.rz": "clamp(-torad(var.hy)/7*if(is_ridden, 0, clamp(1-limb_speed*4, 0, 1)), torad(-5), torad(5))",
			"body_rotation.tx": "0",
			"body_rotation.ty": "if(!is_on_ground&&is_in_water, sin(torad(-45)+var.swim)/2,                                  cos(torad(-45)+var.ls*2)/4*clamp(limb_speed*2, 0, 1)*var.walk +(sin(-pi/4 +var.lsj)   -1)*limb_speed*var.run ) -19",
			"body_rotation.tz": "if(!is_on_ground&&is_in_water, if(is_ridden, 0, -5)      , if(is_ridden, 1, -1)*limb_speed +cos(           var.ls  )/2*clamp(limb_speed*2, 0, 1)*var.walk +(cos(       var.lsj)*3 +if(is_child, 2, 3) )*limb_speed*var.run ) +2.2 +sin(var.b)/6",
			"render.leash_offset_x": "-(head2.tx                    )/16/if(is_child, 2, 1)",
			"render.leash_offset_y": "-(head2.ty +if(is_child, 8, 0))/16/if(is_child, 2, 1)",
			"render.leash_offset_z": "-(head2.tz -1                 )/16/if(is_child, 2, 1)"
		},
		{
			"leg1.rx": " sin(var.b)/60 +if(!is_on_ground&&is_in_water,  sin(var.swim)/2, ( (-cos(torad(20)+var.ls +cos(torad(20)+var.ls)/2.5 )/3 +torad( 10))*clamp(limb_speed*8, 0.4, 1) +clamp( sin(torad(20)+var.ls)/8, torad(-10), 0)*if(is_child, 1.5, 1)*clamp(limb_speed*8, 0, 1) )*var.walk +(-sin(pi/4 +var.lsj -sin(var.lsj)/3)/3 +torad(10) )*limb_speed*var.run ) -torad(5)",
			"leg2.rx": " sin(var.b)/60 +if(!is_on_ground&&is_in_water, -sin(var.swim)/2, ( ( cos(torad(20)+var.ls -cos(torad(20)+var.ls)/2.5 )/3 +torad( 10))*clamp(limb_speed*8, 0.4, 1) +clamp(-sin(torad(20)+var.ls)/8, torad(-10), 0)*if(is_child, 1.5, 1)*clamp(limb_speed*8, 0, 1) )*var.walk +(-sin(      var.lsj -sin(var.lsj)/3)/3 +torad(10) )*limb_speed*var.run ) -torad(5)",
			"leg3.rx": "-sin(var.b)/60 +if(!is_on_ground&&is_in_water, -sin(var.swim)/2, ( (-sin(          var.ls +sin(          var.ls)/2.5 )/3 +torad(-10))*clamp(limb_speed*8, 0.4, 1) +clamp( cos(          var.ls)/8, 0, torad( 10))*if(is_child, 1.5, 1)*clamp(limb_speed*8, 0, 1) )*var.walk +(-sin(pi/4 +var.lsj -sin(var.lsj)/3)/3 +torad( 5) )*limb_speed*var.run ) +torad(5)",
			"leg4.rx": "-sin(var.b)/60 +if(!is_on_ground&&is_in_water,  sin(var.swim)/2, ( ( sin(          var.ls -sin(          var.ls)/2.5 )/3 +torad(-10))*clamp(limb_speed*8, 0.4, 1) +clamp(-cos(          var.ls)/8, 0, torad( 10))*if(is_child, 1.5, 1)*clamp(limb_speed*8, 0, 1) )*var.walk +(-sin(      var.lsj -sin(var.lsj)/3)/3 +torad( 5) )*limb_speed*var.run ) +torad(5)",
			"leg1.ry": "torad( 5 )*clamp(1-limb_speed*8, 0, 1)",
			"leg2.ry": "torad(-5 )*clamp(1-limb_speed*8, 0, 1)",
			"leg3.ry": "torad(-10)*clamp(1-limb_speed*8, 0, 1)",
			"leg4.ry": "torad( 10)*clamp(1-limb_speed*8, 0, 1)",
			"leg1.rz": "if(!is_on_ground&&is_in_water, torad(-10), 0) +if(is_child,  torad(5), 0)",
			"leg2.rz": "if(!is_on_ground&&is_in_water, torad( 10), 0) +if(is_child, -torad(5), 0)",
			"leg3.rz": "if(!is_on_ground&&is_in_water, torad(-10), 0) +if(is_child,  torad(5), 0)",
			"leg4.rz": "if(!is_on_ground&&is_in_water, torad( 10), 0) +if(is_child, -torad(5), 0)",
			"leg1.tx": "( 3.3 +if(!is_on_ground&&is_in_water,  1, 0) ) * (1-0.5*var.child_scale)",
			"leg2.tx": "(-3.3 +if(!is_on_ground&&is_in_water, -1, 0) ) * (1-0.5*var.child_scale)",
			"leg3.tx": "( 2.5 +if(!is_on_ground&&is_in_water,  2, 0) ) * (1-0.5*var.child_scale)",
			"leg4.tx": "(-2.5 +if(!is_on_ground&&is_in_water, -2, 0) ) * (1-0.5*var.child_scale)",
			"leg1.ty": "( if(is_child, 25, 24) +if(!is_on_ground&&is_in_water, if(is_ridden, 0, 5) +cos(var.swim)*1.5, clamp( (-limb_speed +sin(torad(30)+var.ls)*if(is_child, 2, 1.5)*clamp(limb_speed*8, 0, 1) +0.25 )*var.walk +(-cos(pi/4 +var.lsj)*3 -2.5)*limb_speed*var.run, -6, 0)) ) * (1-0.5*var.child_scale) +if(is_child, 11.5, 0)*var.child_scale",
			"leg2.ty": "( if(is_child, 25, 24) +if(!is_on_ground&&is_in_water, if(is_ridden, 0, 5) -cos(var.swim)*1.5, clamp( (-limb_speed -sin(torad(30)+var.ls)*if(is_child, 2, 1.5)*clamp(limb_speed*8, 0, 1) +0.25 )*var.walk +(-cos(      var.lsj)*3 -2.5)*limb_speed*var.run, -6, 0)) ) * (1-0.5*var.child_scale) +if(is_child, 11.5, 0)*var.child_scale",
			"leg3.ty": "( if(is_child, 25, 24) +if(!is_on_ground&&is_in_water, if(is_ridden, 0, 3) -cos(var.swim)*1.5, clamp( (-limb_speed -cos(torad(10)+var.ls)*if(is_child, 2, 1.5)*clamp(limb_speed*8, 0, 1) +0.25 )*var.walk +(-cos(pi/4 +var.lsj)*3 -2.5)*limb_speed*var.run, -6, 0)) ) * (1-0.5*var.child_scale) +if(is_child, 11.5, 0)*var.child_scale",
			"leg4.ty": "( if(is_child, 25, 24) +if(!is_on_ground&&is_in_water, if(is_ridden, 0, 3) +cos(var.swim)*1.5, clamp( (-limb_speed +cos(torad(10)+var.ls)*if(is_child, 2, 1.5)*clamp(limb_speed*8, 0, 1) +0.25 )*var.walk +(-cos(      var.lsj)*3 -2.5)*limb_speed*var.run, -6, 0)) ) * (1-0.5*var.child_scale) +if(is_child, 11.5, 0)*var.child_scale",
			"leg1.tz": "( 5 +if(!is_on_ground&&is_in_water,  sin(var.swim)*6, (-cos(torad(20)+var.ls +cos(torad(20)+var.ls)/2.5 )*5 +2 )*clamp(limb_speed*8, 0.4, 1)*var.walk +(-sin(pi/4 +var.lsj -sin(var.lsj)/2)*5 +1)*limb_speed*var.run ) ) * (1-0.5*var.child_scale)",
			"leg2.tz": "( 5 +if(!is_on_ground&&is_in_water, -sin(var.swim)*6, ( cos(torad(20)+var.ls -cos(torad(20)+var.ls)/2.5 )*5 +2 )*clamp(limb_speed*8, 0.4, 1)*var.walk +(-sin(      var.lsj -sin(var.lsj)/2)*5 +1)*limb_speed*var.run ) ) * (1-0.5*var.child_scale)",
			"leg3.tz": "(-4 +if(!is_on_ground&&is_in_water, -sin(var.swim)*6, (-sin(          var.ls +sin(          var.ls)/2.5 )*5 -2 )*clamp(limb_speed*8, 0.4, 1)*var.walk +(-sin(pi/4 +var.lsj -sin(var.lsj)/2)*5 +1)*limb_speed*var.run ) ) * (1-0.5*var.child_scale)",
			"leg4.tz": "(-4 +if(!is_on_ground&&is_in_water,  sin(var.swim)*6, ( sin(          var.ls -sin(          var.ls)/2.5 )*5 -2 )*clamp(limb_speed*8, 0.4, 1)*var.walk +(-sin(      var.lsj -sin(var.lsj)/2)*5 +1)*limb_speed*var.run ) ) * (1-0.5*var.child_scale)",
			"leg1.sy": "if(is_child, 0.3, 1)",
			"leg2.sy": "if(is_child, 0.3, 1)",
			"leg3.sy": "if(is_child, 0.3, 1)",
			"leg4.sy": "if(is_child, 0.3, 1)"
		},
		{
			"snout.rx": "torad(-2 +2*sin((var.r+age)/if(is_child, 1, 1.5)) ) *clamp(-3 +sin(age/25+var.r)*4 -cos(age/43+var.r)*5, 0, 1)",
			"right_ear.rx": "sin(torad(-45)+var.b)/15 +sin(var.ls*2)/6*limb_speed*var.walk +(-sin(var.lsj)/5)*limb_speed*var.run +torad(head_pitch)/2 +torad( 45*clamp( (  sin(       pi/4 +(var.r+age/1.5)/2 ) +sin(       (var.r+age/1.5) )  ) *var.Rear -1 , 0 , 1 ) )",
			"left_ear.rx": " sin(torad(-45)+var.b)/15 +sin(var.ls*2)/6*limb_speed*var.walk +(-sin(var.lsj)/5)*limb_speed*var.run +torad(head_pitch)/2 +torad( 45*clamp( (  sin(       pi/4 +(var.r+age/1.5)/2 ) +sin(       (var.r+age/1.5) )  ) *var.Lear -1 , 0 , 1 ) )",
			"right_ear.ry": "torad(5) +clamp( torad(15)*limb_speed +torad(var.hy)/2, 0, torad( 80)) +torad( 60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.5)/2 ) +sin(-pi/8 +(var.r+age/1.5) )  ) *var.Rear -1 , 0 , 1 ) )",
			"left_ear.ry": "-torad(5) +clamp(-torad(15)*limb_speed +torad(var.hy)/2, torad(-80), 0) +torad(-60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.5)/2 ) +sin(-pi/8 +(var.r+age/1.5) )  ) *var.Lear -1 , 0 , 1 ) )"
		},
		{
			"brows.ty": "clamp(  sin(hurt_time/5*pi)/8*hurt_time +clamp(head_pitch/8, 0, 0.9), -1.5, 0.9)",
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/11)*6))*clamp(-32 +cos((var.r+age/11)/1.5)*40 +cos((var.r+age/11)/4)*40, 0, 1), 0, 1), 2 )",
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/800",
			"brows.tz": "(eyes.tz+4)/3",
			"r_pupil.ty": "1 +clamp(head_pitch/10, 0, 0.5)*(1-var.blink)",
			"l_pupil.ty": "r_pupil.ty",
			"r_pupil.sy": "clamp(1 +r_pupil.ty-1 -brows.ty, 0, 1-var.blink)",
			"l_pupil.sy": "r_pupil.sy",
			"r_pupil.visible": "r_pupil.sy!=0 && r_pupil.sx!=0",
			"l_pupil.visible": "l_pupil.sy!=0 && l_pupil.sx!=0"
		},
		{
			"chest_right.rx": "torad(90)",
			"chest_right.ry": "-body_rotation.rz",
			"chest_right.rz": " body_rotation.ry",
			"chest_left.rx": " torad(90)",
			"chest_left.ry": "-body_rotation.rz",
			"chest_left.rz": " body_rotation.ry",
			"chest_right.tx": " body_rotation.tx",
			"chest_right.ty": "-body_rotation.tz +7",
			"chest_right.tz": " body_rotation.ty +21",
			"chest_left.tx": " body_rotation.tx",
			"chest_left.ty": "-body_rotation.tz +7",
			"chest_left.tz": " body_rotation.ty +21",
			"chest_right_rotation.rx": "if(!is_on_ground&&is_in_water, torad(-4 ) +sin(var.swim)/20,  sin(torad(180)+var.ls*2)/6*limb_speed*var.walk -(abs(-sin(pi/4 +var.lsj/2))/2)*limb_speed*var.run ) +torad(-90) +body_rotation.ry",
			"chest_right_rotation.ry": "if(!is_on_ground&&is_in_water, torad( 10) -cos(var.swim)/10, -sin(torad( 90)+var.ls*2)/6*limb_speed*var.walk +(cos(var.lsj)/6 +torad(10))*limb_speed*var.run )",
			"chest_right_rotation.rz": "torad(-90)",
			"chest_right_rotation.tx": "-5.5",
			"chest_right_rotation.ty": "-19",
			"chest_right_rotation.tz": "4",
			"chest_left_rotation.rx": "if(!is_on_ground&&is_in_water, torad( 4 ) +sin(var.swim)/20,  sin(torad( 0 )+var.ls*2)/6*limb_speed*var.walk +(abs(-sin(pi/4 +var.lsj/2))/2)*limb_speed*var.run ) +torad(-90) +body_rotation.ry",
			"chest_left_rotation.ry": "if(!is_on_ground&&is_in_water, torad( 10) -cos(var.swim)/10, -sin(torad(-90)+var.ls*2)/6*limb_speed*var.walk +(cos(var.lsj)/6 +torad(10))*limb_speed*var.run )",
			"chest_left_rotation.rz": "torad(-90)",
			"chest_left_rotation.tx": "5.5",
			"chest_left_rotation.ty": "-19",
			"chest_left_rotation.tz": "4"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}