{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 1, 0)",
			"var.r": "random(id)*pi*4",
			"var.b": " var.r +age/if(is_child, 45, 80)*pi*2",
			"var.wb": "var.r +age/if(is_child, 45, 80)*pi*2",
			"var.ls": " var.r +limb_swing/if(is_child, 3, 1)/1.3",
			"var.wls": "var.r +limb_swing/if(is_child, 2, 1)",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
			"var.rtrident": "if(!is_in_water && is_aggressive && right_arm.rx<torad(-160), 1, 0)",
			"var.ltrident": "if(!is_in_water && is_aggressive &&  left_arm.rx<torad(-160), 1, 0)",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "sin(if(is_child,-pi/4, pi/4)+var.ls*2)/8*limb_speed +torad(10 +clamp(-10*limb_speed*3,-10, 0)) +sin(-pi/2+var.b)/40 +torad(head_pitch)/1.4 -(sin(pi*2*swing_progress)/3) +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
			"head.ry": "torad(var.hy)/1.2 +sin(limb_swing/2.5)*var.hurt",
			"head.rz": "   if(is_on_ground && is_in_water, sin(pi/4+var.wls  )/15*4*limb_speed                     , is_in_water, 0,   sin(pi/4+var.ls )/15 *limb_speed +torad(var.hy)/4)",
			"head.tx": "(  if(is_on_ground && is_in_water, sin(pi/4+var.wls  )/2 *4*limb_speed                     , is_in_water, 0, (-sin(     var.ls )    *limb_speed)/if(is_child, 1.5, 1) )  )*if(is_child, 1.5, 1) * (1-0.5*var.child_scale)",
			"head.ty": "( (if(is_on_ground && is_in_water, sin(pi*0.75+var.wls*2)*4*limb_speed/if(is_child, 1.5, 1), is_in_water, 0, if(is_child, -abs(sin(var.ls))*2.5 +limb_speed, sin(pi*0.75+var.ls*2)*1.5)*limb_speed ) +0.5 +sin(var.b)/4) +(sin(pi*swing_progress)*2) +( -sin(limb_swing/2)/2 -0.5 )*var.hurt  )*if(is_child, 1.5, 1) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"head.tz": "( -sin(var.b)/4 -1.8 +sin(-pi*swing_progress)*2 ) * (1-0.5*var.child_scale)",
			"body.rx": "torad(10) +sin(var.b)/40 +clamp( if(is_on_ground && is_in_water, 0, is_in_water, if(is_hurt, 0, pi/4*limb_speed*2), torad(5)*limb_speed), -pi/4, pi/4) +torad(clamp(-10*limb_speed*3, 0, 10)) +(sin(pi*swing_progress)/3) +torad( -3 -10*sin(limb_swing/2) )*var.hurt",
			"body.ry": "                             torad(var.hy)/6 +sin(pi/4+var.ls)/10*limb_speed +torad( 20*cos(limb_swing/3) )   *var.hurt",
			"body.rz": "head.rz +if(is_in_water, 0, -torad(var.hy)/4 -sin(pi/4+var.ls)/10*limb_speed)     -(    sin(limb_swing/2) )/22*var.hurt",
			"body.tx": "head.tx",
			"body.ty": "head.ty",
			"body.tz": "head.tz"
		},
		{
			"right_arm.rx": "if(var.rtrident==1, torad(-200) +torad(head_pitch), torad(-10) +torad(var.hy)/8 +if(is_on_ground&&is_in_water, -sin(var.wls)*limb_speed +clamp(-pi*0.75*4*limb_speed, -pi/2, 0), is_in_water, if(is_aggressive, torad(-70), 0) -sin(var.wb)/4*if(is_aggressive, -1, 1) +(-pi*0.75+head_pitch/20)*limb_speed, -sin(var.ls)/6*limb_speed +sin(var.ls*2)/6*limb_speed +clamp(torad(-120)*limb_speed*2, torad(-70), 0))) +sin(-pi/3+var.b)/20 -(sin(pi*swing_progress*2)) +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
			"left_arm.rx": " if(var.ltrident==1, torad(-200) +torad(head_pitch), torad(-10) -torad(var.hy)/8 +if(is_on_ground&&is_in_water,  sin(var.wls)*limb_speed +clamp(-pi*0.75*4*limb_speed, -pi/2, 0), is_in_water, if(is_aggressive, torad(-70), 0) +sin(var.wb)/4*if(is_aggressive, -1, 1) +(-pi*0.75+head_pitch/20)*limb_speed,  sin(var.ls)/6*limb_speed +sin(var.ls*2)/6*limb_speed +clamp(torad(-120)*limb_speed*2, torad(-70), 0))) +sin(-pi/3+var.b)/20 -(sin(pi*swing_progress*2)) +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
			"right_arm.ry": "if(var.rtrident==1, torad( 10)  +torad(var.hy)  , clamp(-(var.hy/65)*right_arm.rx, -pi/4, pi/4)) +if(is_on_ground&&is_in_water, 0, torad(-5 +25)*limb_speed) +sin( pi/2+var.b)/20 +(sin(-pi/2*swing_progress*2)/4)",
			"left_arm.ry": " if(var.ltrident==1, torad(-10)  +torad(var.hy)  , clamp(-(var.hy/65)* left_arm.rx, -pi/4, pi/4)) +if(is_on_ground&&is_in_water, 0, torad( 5 -25)*limb_speed) +sin(-pi/2+var.b)/20 -(sin(-pi/2*swing_progress*2)/4)",
			"right_arm.rz": "if(var.rtrident==1, torad(-30), if(is_on_ground&&is_in_water, torad( 10), is_in_water, if(is_aggressive, 0, torad( 20)) +sin(pi/2+var.wb)/4, torad( 5))) +clamp(-torad(head_pitch)/8, 0, pi/4) -(sin(pi*swing_progress))/2",
			"left_arm.rz": " if(var.ltrident==1, torad( 30), if(is_on_ground&&is_in_water, torad(-10), is_in_water, if(is_aggressive, 0, torad(-20)) +sin(pi/2+var.wb)/4, torad(-5))) +clamp( torad(head_pitch)/8,-pi/4, 0) +(sin(pi*swing_progress))/2",
			"right_arm.tx": "-5.2 * (1-0.5*var.child_scale) +body.tx",
			"left_arm.tx": "  5.2 * (1-0.5*var.child_scale) +body.tx",
			"right_arm.ty": "( 2.5 -limb_speed +sin(-pi/3+var.b)/5 ) * (1-0.5*var.child_scale) +body.ty",
			"left_arm.ty": " ( 2.5 -limb_speed +sin(-pi/3+var.b)/5 ) * (1-0.5*var.child_scale) +body.ty",
			"right_arm.tz": "( -sin(var.b)/4 -1.8 +torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*var.child_scale)",
			"left_arm.tz": " ( -sin(var.b)/4 -1.8 -torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*var.child_scale)"
		},
		{
			"right_leg.rx": "if(is_riding, -torad(85), sin(var.b)/40 +clamp(if(is_on_ground&&is_in_water, ( sin(var.wls)*4 +torad(20))*limb_speed, is_in_water,  sin(var.wb)/2 +if(is_hurt, -pi/6, pi/3)*(limb_speed*1.5),  sin(var.ls)/6 +sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +torad(20)*limb_speed), -pi/3, pi/3)) -torad(var.hy)/30 +(sin(-pi*swing_progress)/5) +torad(-40 -20*sin(limb_swing/2) )*var.hurt",
			"left_leg.rx": " if(is_riding, -torad(85), sin(var.b)/40 +clamp(if(is_on_ground&&is_in_water, (-sin(var.wls)*4 +torad(20))*limb_speed, is_in_water, -sin(var.wb)/2 +if(is_hurt, -pi/6, pi/3)*(limb_speed*1.5), -sin(var.ls)/6 -sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +torad(20)*limb_speed), -pi/3, pi/3)) +torad(var.hy)/30 +(sin(-pi*swing_progress)/5) +torad(-40 +20*sin(limb_swing/2) )*var.hurt",
			"right_leg.ry": "if(is_riding,  torad(20), torad( 5) +if(!is_on_ground&&is_in_water, torad( 10), 0))",
			"left_leg.ry": " if(is_riding, -torad(20), torad(-5) +if(!is_on_ground&&is_in_water, torad(-10), 0))",
			"right_leg.rz": "if(is_riding,          0, torad( 2) +if(!is_on_ground&&is_in_water, torad( 8 ), 0)) +torad(-sin(limb_swing/2) +5)*var.hurt",
			"left_leg.rz": " if(is_riding,          0, torad(-2) +if(!is_on_ground&&is_in_water, torad(-8 ), 0)) +torad( sin(limb_swing/2) -5)*var.hurt",
			"right_leg.tx": "( -2 -0.1 -sin(var.ls)*limb_speed ) * (1-0.5*var.child_scale)",
			"left_leg.tx": " (  2 +0.1 -sin(var.ls)*limb_speed ) * (1-0.5*var.child_scale)",
			"right_leg.ty": "( 0.2 +if(is_on_ground&&is_in_water, clamp(12 +(sin( pi/2+var.wls)*12 +4)*limb_speed, 0, 12), is_in_water, 12 +clamp(if(is_hurt, 0, -4*(limb_speed*2)), -4, 0), clamp(12 +(sin( pi/2+var.ls)*2)*clamp(limb_speed*2, 0, 1) +(limb_speed) +if(is_child, -2*limb_speed, 0), 0, 12.2)) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"left_leg.ty": " ( 0.2 +if(is_on_ground&&is_in_water, clamp(12 +(sin(-pi/2+var.wls)*12 +4)*limb_speed, 0, 12), is_in_water, 12 +clamp(if(is_hurt, 0, -4*(limb_speed*2)), -4, 0), clamp(12 +(sin(-pi/2+var.ls)*2)*clamp(limb_speed*2, 0, 1) +(limb_speed) +if(is_child, -2*limb_speed, 0), 0, 12.2)) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"right_leg.tz": "( if(is_on_ground&&is_in_water,  sin(var.wls)*8*limb_speed, is_in_water, clamp(if(is_hurt, 0, 8*(limb_speed*2)), -6, 8), clamp((sin( pi/2+var.ls)*6)*limb_speed +(3*limb_speed), -6, 1)) -0.2 +if(is_riding, 0, -sin(var.b)/3) +torad(var.hy)/2 +(sin(pi*swing_progress)*2) +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*var.child_scale)",
			"left_leg.tz": " ( if(is_on_ground&&is_in_water, -sin(var.wls)*8*limb_speed, is_in_water, clamp(if(is_hurt, 0, 8*(limb_speed*2)), -6, 8), clamp((sin(-pi/2+var.ls)*6)*limb_speed +(3*limb_speed), -6, 1)) -0.2 +if(is_riding, 0, -sin(var.b)/3) -torad(var.hy)/2 +(sin(pi*swing_progress)*2) +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*var.child_scale)"
		},
		{
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.tz": "eyes.tz+4",
			"l_pupil.tz": "eyes.tz+4",
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/9)*5 ))*clamp(-32 +cos((var.r+age/9)/1.5)*40 +cos((var.r+age/9)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "( (-1.5 -cos(limb_swing/3)/2)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child,-0.3, 0) +clamp( -4 +cos(var.r+age/77 )*20, 0, 1)/4 )*(1-var.blink) +var.blink",
			"var.pupil_y": "  (-1.5 -cos(limb_swing/3)/2)/9*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child,-0.1, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10  +(1-cos(var.hy/90*pi/2))/3 +clamp(head_pitch/120, -0.2, 0.5)",
			"var.pupil_x": "-var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )-2",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )+2",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"r_eye_glow.sy": "1-var.blink",
			"l_eye_glow.sy": "1-var.blink"
		}
	]
}