{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp( 90*sin(torad(head_yaw)), -90, 90 )",
			"var.testing": "0",
			"var.Nty": "neck.ty",
			"var.neckx": "round( (  neck.rx  -( 0.5235988 + head_pitch * 0.017453292  +if(limb_speed>0.2, cos(limb_swing * 0.8) * 0.15 * limb_speed, 0) ) -( torad(95) +sin(age)*0.05*0 )*if( body.rx == 0 && var.Nty > if(is_child, 11.110297, 4), (var.Nty-if(is_child, 11.110297, 4))/7, 0)  )*100*(1-var.testing) )/100",
			"var.rearing": "if( var.Nty < if(is_child, 11.110297, 4), -( var.Nty-if(is_child, 11.110297, 4) )/if(is_child, 4, 8)*(1-var.testing), 0 )",
			"var.eating": " if( var.Nty > if(is_child, 11.110297, 4),  ( var.Nty-if(is_child, 11.110297, 4) )/7                 *(1-var.testing), 0 )",
			"var.id": "random(id)*pi*4",
			"var.ls_offset": "if( varb.fcc, var.ls_offset, var.trot>0 || var.run>0, var.ls_offset + frame_time * limb_speed*if(is_ridden, 1.5, 1+0.5*var.run), var.ls_offset)",
			"var.ls": "-0.3 +( limb_swing*1.1 -var.ls_offset*if(is_child, 12, 4) )/if(is_child, 1.8, 1)",
			"var.Rt": "age/2 +limb_swing/20",
			"var.Bt": "var.id +age/if(is_child, 35, 70)*pi*2",
			"var.St": "var.id +age/if(is_child, 16, 20)*pi*2 +limb_swing/3",
			"var.Ct": "var.id +age/if(is_child, 1.5, 2) -cos( var.id +age/if(is_child, 1.5, 2) )/3",
			"var.It": "( var.id +age*if(is_child, 1.3, 1)*(0.7+0.3*random(id)) +sin( var.id +age*if(is_child, 1.3, 1)*(0.7+0.3*random(id))/33 )*9 )/18",
			"var.idle": "max( 0, 1-limb_speed * 6 )",
			"var.move": "min( 1,   limb_speed * 6 )",
			"var.run": " clamp( if( varb.fcc, var.run , limb_speed>=if(is_ridden, 0.8, if(is_child, 0.7, 0.99) ), var.run  +6 *frame_time, var.run  -6 *frame_time ), 0, max(0, 1 -var.swim) )",
			"var.trot": "clamp( if( varb.fcc, var.trot, limb_speed>=if(is_ridden, 0.6, 0.35                    ), var.trot +6 *frame_time, var.trot -6 *frame_time ), 0, max(0, 1 -var.swim -var.run) )",
			"var.walk": "max(0, 1 -var.swim -var.run )",
			"var.swiA": "clamp(if(varb.fcc, var.swiA, !is_riding&&!is_on_ground&&is_in_water, var.swiA +0.8 *frame_time, var.swiA -2 *frame_time ), 0, 1)",
			"var.swim": "clamp(-0.5 +var.swiA*2, 0, 1)",
			"var.t_rland": "clamp( if( varb.fcc, var.t_rland, var.rearing>0.2, 0, var.t_rland + frame_time * if(is_child, 2.4, 1.8 ) ), 0, 1 )",
			"var.rland": "sin( ( var.t_rland -pow( var.t_rland, 2 )/2 )*2*pi )",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*clamp( (1-hurt_time/10)*8, 0, 1)",
			"var.NAeat": "clamp( if( varb.fcc, var.NAeat, is_on_ground && body.rx==0 && var.Nty>if(is_child, 11.110297, 4) && var.rearing==0, var.NAeat +1.2 *frame_time, var.NAeat -1.2 *frame_time ), 0, max(0, var.walk -var.testing) )",
			"var.chew": "clamp( if( varb.fcc, var.chew, var.NAeat>0.8 || ( body.rx==0 && var.neckx!=0 && between( var.neckx, -0.05, 0.05 ) ), var.chew +2 *frame_time, var.chew -0.1 *frame_time ), 0, 1)",
			"var.Nidle": "( 0.3+0.7*(0.5-0.5*cos( clamp( -1 +sin(var.id +(age+limb_swing)/73 )*3, 0, 1 )*pi )) ) * (0.5-0.5*cos( clamp( 1 +sin(var.id +(age+limb_swing)/117 )*5, 0, max(0, 1-var.run) )*pi ))",
			"var.NAshake": "clamp( if( varb.fcc, var.NAshake,                 is_on_ground && (-436.8 +sin(var.id +(age+limb_swing)/400)*438)>0.8, var.NAshake +1.6 *frame_time, var.NAshake -0.8 *frame_time ), 0, max(0, 1 -0.7*var.run -var.rearing -var.Neat) )",
			"var.NAlfleg": "clamp( if( varb.fcc, var.NAlfleg, !is_in_water && is_on_ground && ( -78.8 +cos(var.id +(age+limb_swing)/130)*80 )>0.9, var.NAlfleg +2   *frame_time, var.NAlfleg -2   *frame_time ), 0, max(0, var.idle -var.rearing) )",
			"var.NArbleg": "clamp( if( varb.fcc, var.NArbleg, !is_in_water && is_on_ground && ( -78.8 -sin(var.id +(age+limb_swing)/130)*80 )>0.9, var.NArbleg +2   *frame_time, var.NArbleg -2   *frame_time ), 0, max(0, var.idle -var.rearing) )",
			"var.Neat": "0.5-0.5*cos( pow( var.NAeat, 2)*pi )",
			"var.Nshake": "0.5-0.5*cos( pow( var.NAshake, 3)*pi )",
			"var.Nlfleg": "0.5-0.5*cos( var.NAlfleg*pi )",
			"var.Nrbleg": "0.5-0.5*cos( var.NArbleg*pi )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"root.ty": "3 +if(is_ridden, 0, 8 )*var.swiA",
			"body.rx": "sin(-pi/4+var.Bt)/60*var.idle  +( cos(var.ls*2)/40*var.trot  -cos( var.ls*2 )/40*(1-var.trot) )*max(0.3, var.move)*var.walk  +(sin(var.ls)/20 -cos(var.ls)/16)*limb_speed*if(is_child, 2, 0.7)*(1-var.rearing/if(is_on_ground, 1.2, 3))*var.run  +sin(pi/4+var.St*2)/20*var.swim  +(-0.7 +sin( var.id +var.Rt )/25 )*var.rearing  +torad( 10*cos(var.t_rland*3)*var.rland )",
			"body.ry": "torad(var.hy)/30    +torad(-1  *cos(     var.id+age/3) )*var.Nrbleg",
			"body.rz": "  -cos(-pi/4+var.ls)/(25-5*var.trot)*max(0.3, var.move)*var.walk  -cos(var.St)/15*var.swim  +torad( 3*cos( var.id +var.Rt/2.5 ) )*var.rearing  +torad(-1.5*cos(pi/4+var.id+age/3) )*(var.Nrbleg-var.Nlfleg)",
			"body.tx": "(  -sin(var.ls)/16*var.move*var.walk  ) * if( is_child, 0.5, 1 )",
			"body.ty": "(  9.1  +sin(var.Bt)/6*var.idle  +( ( -sin(var.ls*2) +2)/3*max(0.3, var.move)*if(is_child, 2, 1)*(1-var.trot)  +( 0.1 +cos(pi/4 +var.ls*2 +sin(var.ls*2)/3 )/2 )*var.trot )*var.walk  +cos(-pi/3 +var.ls +sin(var.ls)/3 )*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75))*var.run  +(-4.7 -cos( var.id +var.Rt )/6)*var.rearing  +2*var.rland  ) * if( is_child, 0.5, 1 ) +if(is_child, 9.6, 0)",
			"body.tz": "(  sin(var.ls*2)/2*var.swim   +( 4 -sin( var.id +var.Rt )/4)*var.rearing  ) * if( is_child, 0.5, 1 )",
			"neck2.rx": "-body.rx +torad(30 +( 20*limb_speed +head_pitch/1.5*(1-0.7*var.rearing) )*(1-var.Neat)) +cos(var.Bt)/80  +sin(pi/4+var.ls*2)/20*max(0.3, var.move)*(1-var.trot*2.5)*var.walk  +cos(var.ls)/7*limb_speed*(1-0.7*var.rearing)*(1-var.rland)*var.run  +( torad(5) -sin(var.St*2)/26 )*var.swim  +( torad(-20) -cos( var.id +var.Rt )/25 )*var.rearing  +torad(20)*var.rland  +torad( 95*var.Neat  +3*sin(var.It*1.5 +sin(-pi/4+var.It/1.5)*2 )*var.Nidle*(1-var.Neat) +10*var.Nshake )",
			"neck2.ry": "clamp(torad(var.hy)/2, -pi/9, pi/9)*(1-var.shake/1.5)  +torad(3)*sin(-pi/7+var.It +sin(-pi/7+var.It*2)/2 )*(1-cos(var.It/2 +cos(var.It)/2) )*var.Nidle",
			"neck2.rz": "-body.rz  +( cos(var.id+age/1.2)/8 )*var.Nshake  +torad( 2*cos(clamp(0.5-sin(-pi/12+var.It)*0.7,0,1)*pi)*(0.8-cos(var.It/4+sin(var.It/4)))*var.Nidle )",
			"neck2.ty": "-18.7 +torad(head_pitch)/2*(1-var.Neat)  +sin(var.ls*2)/4*max(0.3, var.move)*var.walk  +(-2 +2*sin( var.t_rland*pi) )*var.rland  +2*var.Neat",
			"neck2.tz": " -6.7 +torad(-head_pitch )*(1-var.Neat) -3.5*var.Neat",
			"neck2.sx": "if(is_child, 1.15, 1)",
			"neck2.sy": "neck2.sx",
			"neck2.sz": "neck2.sx",
			"head2.rx": "( torad(-10) -sin(pi/6+var.ls)/8*(1-var.rland) )*limb_speed*(1-var.rearing*0.7)*var.run  -cos(var.St*2)/20*var.swim  +torad(-10-20*cos(var.t_rland*4))*var.rland  +torad(-20 -20*sin(var.Neat*pi*2) +3*cos(var.id +age/if(is_child, 1.5, 2)) )*var.Neat  +(1 +sin(pi/4+var.Ct))/90*min(1,var.chew*8)*if(random(id)>0.5,-1,1)  +torad(-1.5 +1.5*sin(var.It*1.5 +sin(var.It/1.5)/2 )*var.Nidle*(1-var.Neat)) -torad(10)*var.Nshake",
			"head2.ry": "clamp( torad(var.hy)/6, -pi/12, pi/12 )                               +torad(5)*cos(clamp(0.5-sin(var.It)*1.5,0,1)*pi)*var.Nidle  +( -sin(var.id+age/1.2)/3 +cos(var.id+age/1.2)/8 )*var.Nshake",
			"head2.rz": "(1 +sin( pi/6+var.Ct) )/90*min(1,var.chew*8)*if(random(id)>0.5,-1,1)  +torad(2)*cos(clamp(0.5-sin(var.It)*1.5,0,1)*pi)*var.Nidle*(1-var.Neat)            +( -sin(var.id+age/1.2)/3 )*var.Nshake",
			"head2.tx": "(  sin(var.id+age/1.2)/1.3 )*var.Nshake",
			"neck3.sy": "1 +clamp(-( head2.rx -torad(3*cos(var.id +age/if(is_child, 1.5, 2)))*var.Neat )/3, 0, 0.2)"
		},
		{
			"back_left_leg.rx": " -sin(var.Bt)/60*if(is_child,1.5,1)  +( ( (-sin(var.ls +sin(var.ls)/4.5 ) +torad(5) )*var.trot*if(is_child,0.7,1)  +cos(var.ls -cos(var.ls)/2.5              )*(1-var.trot)       )/1.8*max(0.3, var.move) +clamp( -cos(var.ls)/4*var.trot  -sin(var.ls)/4*(1-var.trot),-pi/9, 0)*(1+var.trot/2)/2*var.move )*if(is_on_ground, 1, (1-var.rearing))*var.walk  +( ( sin(     var.ls +sin(pi/4  +var.ls)/3*max(0,-5+var.move))/2 +clamp( cos(     var.ls)/4,-pi/9, 0))*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +( sin(var.St)/2 +clamp( cos(var.St)/3,-pi/9, 0) )                *var.swim                                                 +torad( -7*cos(var.t_rland)*var.rland )",
			"back_right_leg.rx": "-sin(var.Bt)/60*if(is_child,1.5,1)  +( ( ( sin(var.ls -sin(var.ls)/4.5 ) +torad(5) )*var.trot*if(is_child,0.7,1)  -cos(var.ls +cos(var.ls)/2.5              )*(1-var.trot)       )/1.8*max(0.3, var.move) +clamp(  cos(var.ls)/4*var.trot  +sin(var.ls)/4*(1-var.trot),-pi/9, 0)*(1+var.trot/2)/2*var.move )*if(is_on_ground, 1, (1-var.rearing))*var.walk  +( (-cos(pi/6+var.ls -cos(pi/2.4+var.ls)/3*max(0,-5+var.move))/2 +clamp( sin(pi/6+var.ls)/4,-pi/9, 0))*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +(-sin(var.St)/2 +clamp(-cos(var.St)/3,-pi/9, 0) )                *var.swim    -0.4*var.rearing/if(is_child, 2, 1)          +torad( -7*cos(var.t_rland)*var.rland ) +torad( -6*cos(var.id+age/3 -sin(var.id+age/3)/2)*var.Nrbleg )",
			"front_left_leg.rx": " sin(var.Bt)/60*if(is_child,1.5,1)  +( (                                  torad(5)  *var.trot*if(is_child,0.7,1)  +sin(var.ls -sin(var.ls)/(2.5+2*var.trot) )*if(is_child,0.7,1) )/1.8*max(0.3, var.move) +clamp(                          -cos(var.ls)/2             , 0, pi/6)*(1+var.trot/2)/2*var.move )*                    (1-var.rearing) *var.walk  +( (-cos(     var.ls -cos(pi/4  +var.ls)/3*max(0,-5+var.move))/2 +clamp(-sin(     var.ls)/4, 0, pi/9))*limb_speed*if(is_child, 1, 1.2)                     *(1-var.rearing)  )*var.run  +(-cos(var.St)/2 +clamp(-sin(var.St)/3, 0, pi/9) )*(1-var.rearing)*var.swim  +(-0.4 -sin( var.id +var.Rt )/2.5)*var.rearing +torad( 10*cos(var.t_rland)*var.rland ) +torad( 12*max(0, sin(var.id+age/3)*1.5 +0.4    )*var.Nlfleg )",
			"front_right_leg.rx": "sin(var.Bt)/60*if(is_child,1.5,1)  +( (                                  torad(5)  *var.trot*if(is_child,0.7,1)  -sin(var.ls +sin(var.ls)/(2.5+2*var.trot) )*if(is_child,0.7,1) )/1.8*max(0.3, var.move) +clamp(                           cos(var.ls)/2             , 0, pi/6)*(1+var.trot/2)/2*var.move )*                    (1-var.rearing) *var.walk  +( (-sin(pi/6+var.ls -sin(pi/2.4+var.ls)/3*max(0,-5+var.move))/2 +clamp( cos(pi/6+var.ls)/4, 0, pi/9))*limb_speed*if(is_child, 1, 1.2)                     *(1-var.rearing)  )*var.run  +( cos(var.St)/2 +clamp( sin(var.St)/3, 0, pi/9) )*(1-var.rearing)*var.swim  +(-0.4 +sin( var.id +var.Rt )/2.5)*var.rearing +torad( 10*cos(var.t_rland)*var.rland )",
			"back_left_leg.ry": "  body.ry -var.rearing/3.75*var.idle",
			"back_right_leg.ry": " body.ry",
			"front_left_leg.ry": " body.ry",
			"front_right_leg.ry": "body.ry",
			"back_left_leg.rz": "   torad( 0.6)       +torad(-5                )*var.swim  +torad(-2*cos( var.id +var.Rt/2.5 ) )*var.rearing",
			"back_right_leg.rz": "  torad(-0.6)       +torad( 5                )*var.swim  +torad(-2*cos( var.id +var.Rt/2.5 ) )*var.rearing",
			"front_left_leg.rz": " -torad(var.hy)/24  +torad(-5*(1-var.rearing))*var.swim  +var.rearing/7.5",
			"front_right_leg.rz": "-torad(var.hy)/24  +torad( 5*(1-var.rearing))*var.swim  -var.rearing/7.5",
			"back_left_leg.tx": "  (  2.8 +( 1            )*var.swim  +var.rearing/7.5                                   ) * if( is_child, 0.5, 1 )",
			"back_right_leg.tx": " ( -2.8 +(-1            )*var.swim                                                     ) * if( is_child, 0.5, 1 )",
			"front_left_leg.tx": " (  3   +( 1-var.rearing)*var.swim  +( 0.3 +cos( var.id +var.Rt/2.5 )/4 )*var.rearing  ) * if( is_child, 0.5, 1 )",
			"front_right_leg.tx": "( -3   +(-1+var.rearing)*var.swim  +(-0.3 +cos( var.id +var.Rt/2.5 )/4 )*var.rearing  ) * if( is_child, 0.5, 1 )",
			"back_left_leg.ty": "  (  23  +clamp( (-1.7*var.trot +( -cos(var.ls)*var.trot  -sin(var.ls)*(1-var.trot) )*2*var.move*(1-var.rearing) )*var.walk  +( -2.5*limb_speed                 +cos(     var.ls)*2*limb_speed*if(is_child,1.8,1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +(-2 +cos(var.St)*1.5                 )*var.swim                                          , -4, 0)                                                                        ) * if( is_child, 0.5, 1 ) +if(is_child, 3.75 +7.95, 0)",
			"back_right_leg.ty": " (  23  +clamp( (-1.7*var.trot +(  cos(var.ls)*var.trot  +sin(var.ls)*(1-var.trot) )*2*var.move*(1-var.rearing) )*var.walk  +( -2.5*limb_speed                 +sin(pi/6+var.ls)*2*limb_speed*if(is_child,1.8,1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +(-2 -cos(var.St)*1.5                 )*var.swim  +( sin(var.id+age/3)*2 -0.8 )*var.Nrbleg, -4, 0)                                                                        ) * if( is_child, 0.5, 1 ) +if(is_child, 3.75 +7.95, 0)",
			"front_left_leg.ty": " (  23  +clamp( (-1.7*var.trot +(                         cos(var.ls)              )*2*var.move*(1-var.rearing) )*var.walk  +( -2.5*limb_speed*(1-var.rearing) +sin(     var.ls)*2*limb_speed*if(is_child,1.8,1)*                    (1-var.rearing) )*var.run  +(-2 +sin(var.St)*1.5*(1-var.rearing) )*var.swim  +(-sin(var.id+age/3)*2 -0.8 )*var.Nlfleg, -4, 0) +(-13 +(-2-cos( var.id +var.Rt )*1.2)*if(is_child,1.5,1))*var.rearing  ) * if( is_child, 0.5, 1 ) +if(is_child, 3.75 +7.95, 0)",
			"front_right_leg.ty": "(  23  +clamp( (-1.7*var.trot +(                        -cos(var.ls)              )*2*var.move*(1-var.rearing) )*var.walk  +( -2.5*limb_speed*(1-var.rearing) -cos(pi/6+var.ls)*2*limb_speed*if(is_child,1.8,1)*                    (1-var.rearing) )*var.run  +(-2 -sin(var.St)*1.5*(1-var.rearing) )*var.swim                                          , -4, 0) +(-13 +(-2+cos( var.id +var.Rt )*1.2)*if(is_child,1.5,1))*var.rearing  ) * if( is_child, 0.5, 1 ) +if(is_child, 3.75 +7.95, 0)",
			"back_left_leg.tz": "  (  9    +( ( (-sin(var.ls +sin(var.ls)/4.5 ) +1/6.5 )*var.trot  +cos(var.ls -cos(var.ls)/2.5              )*(1-var.trot) )*if(is_child,7,6.5)*max(0.3, var.move)*if(is_on_ground, 1, (1-var.rearing)))*var.walk  +( sin(     var.ls +sin(pi/4  +var.ls)/3*max(0,-5+var.move))*6*limb_speed*if(is_child,1.2,1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +( sin(var.St)*6                 )*var.swim     +1.5*var.rearing                                                                                                   ) * if( is_child, 0.5, 1 )",
			"back_right_leg.tz": " (  9    +( ( ( sin(var.ls -sin(var.ls)/4.5 ) +1/6.5 )*var.trot  -cos(var.ls +cos(var.ls)/2.5              )*(1-var.trot) )*if(is_child,7,6.5)*max(0.3, var.move)*if(is_on_ground, 1, (1-var.rearing)))*var.walk  +(-cos(pi/6+var.ls -cos(pi/2.4+var.ls)/3*max(0,-5+var.move))*6*limb_speed*if(is_child,1.2,1)*if(is_on_ground, 1, (1-var.rearing)))*var.run  +(-sin(var.St)*6                 )*var.swim     -2.5*var.rearing                                      +( -cos(var.id+age/3 -sin(var.id+age/3)/2)*1.5 )*var.Nrbleg  ) * if( is_child, 0.5, 1 )",
			"front_left_leg.tz": " ( -9.3  +( (                                  1/6.5  *var.trot  +sin(var.ls -sin(var.ls)/(2.5+2*var.trot) )              )*if(is_child,7,6.5)*max(0.3, var.move)*                    (1-var.rearing) )*var.walk  +(-cos(     var.ls -cos(pi/4  +var.ls)/3*max(0,-5+var.move))*6*limb_speed*if(is_child,1.2,1)*                    (1-var.rearing) )*var.run  +(-cos(var.St)*6*(1-var.rearing) )*var.swim  +( -1 -sin( var.id +var.Rt )*2)*if(is_child,1.5,1)*var.rearing +max(0, sin(pi/4+var.id+age/3)/1.5 +0.4  )*var.Nlfleg  ) * if( is_child, 0.5, 1 )",
			"front_right_leg.tz": "( -9.3  +( (                                  1/6.5  *var.trot  -sin(var.ls +sin(var.ls)/(2.5+2*var.trot) )              )*if(is_child,7,6.5)*max(0.3, var.move)*                    (1-var.rearing) )*var.walk  +(-sin(pi/6+var.ls -sin(pi/2.4+var.ls)/3*max(0,-5+var.move))*6*limb_speed*if(is_child,1.2,1)*                    (1-var.rearing) )*var.run  +( cos(var.St)*6*(1-var.rearing) )*var.swim  +( -1 +sin( var.id +var.Rt )*2)*if(is_child,1.5,1)*var.rearing                                                        ) * if( is_child, 0.5, 1 )",
			"back_left_leg.sy": "  if(is_child, 1.35 -0.625, 1)",
			"back_right_leg.sy": " if(is_child, 1.35 -0.625, 1)",
			"front_left_leg.sy": " if(is_child, 1.35 -0.625, 1)",
			"front_right_leg.sy": "if(is_child, 1.35 -0.625, 1)",
			"back_left_leg.visible": "  true",
			"back_right_leg.visible": " true",
			"front_left_leg.visible": " true",
			"front_right_leg.visible": "true"
		},
		{
			"var.Ntail": "if( tail.ry!=0, 1, max( 0, var.Ntail -frame_time/1.8 ) )",
			"var.NearR": "if( varb.fcc, var.NearR, between( cos( var.id+age/210 +cos( (var.id+age/210)*1.3 )*6 /( sin( (var.id+age/210)*1.7 )+5 ) ), -0.01, 0.01 ), 1, max( 0, var.NearR -frame_time*2 ) )",
			"var.NearL": "if( varb.fcc, var.NearL, between( sin( var.id+age/180 +sin( (var.id+age/180)*1.3 )*6 /( cos( (var.id+age/180)*1.7 )+5 ) ), -0.01, 0.01 ), 1, max( 0, var.NearL -frame_time*2 ) )",
			"tail2.rx": "-body.rx +cos(var.Bt)/30  +torad( 10 +40*pow(limb_speed,2) )  +sin(pi/4+var.ls*2)/16*max(0.3, var.move)*var.walk  -sin(var.ls-pi/4)/5 *limb_speed*var.run  +( torad(15) -cos(var.St    )/8  )*var.swim  +torad(-7 +3*cos(-pi/4 +var.id +var.Rt    ) )*var.rearing +torad( 30*sin(var.t_rland*5)*var.rland ) +torad( 15 +25*sin(age/1.5) )*sin(pow(var.Ntail,3)*pi)",
			"tail2.ry": "                                                             -cos(     var.ls  )/12*max(0.3, var.move)*var.walk  -cos(var.ls/1.2 )/12*limb_speed*var.run  +(           -sin(var.St/1.2)/12 )*var.swim  +torad(    5*sin(-pi/4 +var.id +var.Rt/1.5) )*var.rearing",
			"tail2.rz": "-body.rz                                                     +sin(-pi/4+var.ls )/16*max(0.3, var.move)*var.walk      +sin(var.id+age/2)*max(0, sin(var.id+age/30)/30 )  +torad( 40*sin(age/3) )*sin(pow(var.Ntail,3)*pi)",
			"tail2.ty": "-19.5 +(cos(var.ls)/2*limb_speed )*var.run",
			"mane2.ry": "           ( sin(var.id+age/1.2)/4 )*var.Nshake",
			"mane3.ry": "-head2.ry +( sin(var.id+age/1.2)/4 )*var.Nshake",
			"mane3.rz": "           ( sin(var.id+age/1.2)/3 )*var.Nshake",
			"mane3.tx": "-head2.ry*3",
			"mane3.sy": "1 +0.1*var.Nshake",
			"right_ear2.rx": "torad( 10                                     +25*sin(     age*1.2)*sin(pow(var.NearR,3)*pi)*(1-var.Nshake)*var.walk )  +( -sin(pi/4+var.Bt)/20  +sin(-pi/3+var.ls*2)/4*limb_speed*var.walk*(1-var.trot)  +( cos(pi/4 +var.ls*2 )/9 )*var.trot  +(sin(var.ls)/3*limb_speed)*var.run )*(1-var.rearing) -sin( pi/6 +var.id +var.Rt )/6*var.rearing  +torad( 3*sin( var.Ct ) )*var.Neat +torad(-40*cos(var.t_rland*8)*var.rland )",
			"left_ear2.rx": " torad( 10                                     -40*cos(     age*1.2)*sin(pow(var.NearL,3)*pi)*(1-var.Nshake)*var.walk )  +( -sin(pi/4+var.Bt)/20  +sin(-pi/3+var.ls*2)/4*limb_speed*var.walk*(1-var.trot)  +( cos(pi/4 +var.ls*2 )/9 )*var.trot  +(sin(var.ls)/3*limb_speed)*var.run )*(1-var.rearing) -sin(       var.id +var.Rt )/6*var.rearing  +torad( 3*sin( var.Ct ) )*var.Neat +torad(-40*cos(var.t_rland*8)*var.rland )",
			"right_ear2.ry": "torad( clamp(torad( 12 +var.hy/2), -20, 80 )  -70*sin(pi/6+age*1.2)*sin(pow(var.NearR,3)*pi)*(1-var.Nshake)*var.walk )    +torad(  50*var.Neat  +25*var.Nshake )",
			"left_ear2.ry": " torad( clamp(torad(-12 +var.hy/2), -80, 20 )  +70*cos(pi/6+age*1.2)*sin(pow(var.NearL,3)*pi)*(1-var.Nshake)*var.walk )    +torad( -50*var.Neat  -25*var.Nshake )",
			"right_ear2.rz": "torad(-15  +3*sin( var.Ct )*var.Neat  -10*cos(var.t_rland*3)*var.rland )  +( torad(-8) +cos(-pi/4+var.id+age/1.2)/1.2 )*var.Nshake",
			"left_ear2.rz": " torad( 15  -3*sin( var.Ct )*var.Neat  +10*cos(var.t_rland*3)*var.rland )  +( torad( 8) +cos(-pi/4+var.id+age/1.2)/1.2 )*var.Nshake",
			"snout2.rz": "    (  -1 +sin(-pi/6 +var.Ct          ) )/14*min(1,var.chew*8)*if(random(id)>0.5, -1, 1)",
			"snout2.ty": "-3 +(  0.1*sin( var.Ct +cos(var.Ct)/2 ) )   *min(1,var.chew*8)",
			"snout2.sy": " 1 -( 0.4 -1.3*sin( pi/4 +var.Ct      ) )/20*min(1,var.chew*8)"
		},
		{
			"var.Nblink": "pow( clamp( (1.5 -abs(sin(var.id+age/10)*6))*clamp(-32 +cos((var.id+age/10)/1.5)*40 +cos((var.id+age/10)/4)*40, 0, 1), 0.5*var.Nshake, 1 ), 2 )",
			"var.eye_top": "1 +( -1 +clamp(head_pitch/120, -0.2, 0.4)*clamp(sin(var.id+age/130)*8,0,1) +sin(hurt_time/1.5)*1.5*var.hurt +max(0,-3 +death_time/2) )*(1-var.Nblink)",
			"var.pupil_y": "-( head2.rx +body.rx +neck2.rx-torad(30) ) +0.53 +clamp(torad(head_pitch*1.5), -0.8, 2)*(1-var.Neat)  +sin(hurt_time/1.5)*0.7*var.hurt  -clamp(-24 +sin(var.id+age/100)*40, 0, 1)/10 +torad(65)*var.Neat",
			"var.pupil_x": "(head2.ry+neck2.ry) -var.hy/90 +clamp(sin(var.id+age/27) +sin(var.id+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.id+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.id+age/187)*60*4, 0, 1)",
			"right_eye.tx": "-3 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"left_eye.tx": "-right_eye.tx",
			"r_pupil.tz": "right_eye.tx+3",
			"l_pupil.tz": "right_eye.tx+3",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 2 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+0.6, 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+0.6, 1 )",
			"r_pupil.sy": "clamp(1 +var.pupil_y-0.5 +r_eye_white.sy-1, 0, clamp( r_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"l_pupil.sy": "clamp(1 +var.pupil_y-0.5 +l_eye_white.sy-1, 0, clamp( l_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.3, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.3, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"headpiece_snout.rz": "    (  -1 +sin(-pi/6 +var.Ct          ) )/14*min(1,var.chew*8)*if(random(id)>0.5, -1, 1)/2",
			"headpiece_snout.ty": "-3 +(  0.1*sin( var.Ct +cos(var.Ct)/2 ) )   *min(1,var.chew*8)",
			"right_saddle.rx": "-body.rx/1.2 +torad(20)*limb_speed +(sin(var.ls)/6*limb_speed)*var.run +(-sin(var.ls/2)/10*limb_speed)*var.walk",
			"left_saddle.rx": "right_saddle.rx",
			"right_saddle.rz": "clamp( ( 0.2 -sin(-pi/3 +var.ls -cos(var.ls)/3) )/6*limb_speed*var.run, 0, pi/2 )",
			"left_saddle.rz": "-right_saddle.rz",
			"right_rein2.rx": "-body.rx -neck2.rx -head2.rx +torad(head_pitch)/1.5 +(-cos(-pi/3 +var.ls)/8*limb_speed)*var.run +(-sin(var.ls)/40*var.move)*var.walk +torad(10)*limb_speed -torad(20)*var.rearing",
			"left_rein2.rx": "right_rein2.rx",
			"right_rein2.ry": "torad( 4) -torad(var.hy)/4",
			"left_rein2.ry": " torad(-4) -torad(var.hy)/4",
			"right_rein2.rz": "torad(-5) +max(0,-torad(var.hy)/4)",
			"left_rein2.rz": " torad( 5) +min(0,-torad(var.hy)/4)",
			"right_rein3.rz": "( sin(-pi/4 +var.ls )*0.6 -0.2 )*limb_speed*var.run +(-sin(var.ls)/40*var.move)*var.walk +sin(limb_swing+var.Rt/2)*max(0, sin(limb_swing+(var.Rt/20))/30 ) +(sin(var.Rt/1.5)/2*var.rearing)",
			"left_rein3.rz": "-right_rein3.rz",
			"right_rein2.visible": "is_ridden",
			"left_rein2.visible": " is_ridden",
			"headpiece_neck.rx": "neck2.rx",
			"headpiece_neck.ry": "neck2.ry",
			"headpiece_neck.rz": "neck2.rz",
			"headpiece_neck.tx": "neck2.tx",
			"headpiece_neck.ty": "neck2.ty",
			"headpiece_neck.tz": "neck2.tz",
			"headpiece_neck.sx": "neck2.sx",
			"headpiece_neck.sy": "neck2.sy",
			"headpiece_neck.sz": "neck2.sz",
			"headpiece_head.rx": "head2.rx",
			"headpiece_head.ry": "head2.ry",
			"headpiece_head.rz": "head2.rz",
			"headpiece_head.tx": "head2.tx",
			"headpiece_head.ty": "head2.ty",
			"headpiece_head.tz": "head2.tz"
		},
		{
			"right_chest2.visible": "right_chest.visible",
			"left_chest2.visible": "left_chest.visible",
			"right_chest2.rx": "-body.rx/2  +( 1+sin(-pi/6 +var.ls*2) )/8*limb_speed*var.walk  +( 0.1-0.07*cos(var.ls) )*limb_speed*var.run  +sin(var.St)/20*var.swim  +cos( pi/8 +var.id +var.Rt )/15*var.rearing",
			"left_chest2.rx": "right_chest2.rx",
			"right_chest2.rz": "clamp( (-0.2 +cos(pi/4 +var.ls +sin(-pi/3 +var.ls)/2) )/8*limb_speed*var.run, -0.05, pi/2 )",
			"left_chest2.rz": "-right_chest2.rz",
			"right_chest2.ty": "-21.25  +( ( sin(pi/4 +var.ls*2 +sin(var.ls*2)/3 )/2 )*var.trot  +sin(-pi/3 +var.ls*2 +sin(-pi/3 -pi/2+var.ls*2)/2 )/2*limb_speed*(1-var.trot) )*var.walk  +( sin( var.ls +cos(-pi/3 +var.ls)/3)/1.5*limb_speed )*var.run",
			"left_chest2.ty": " -21.25  +( ( sin(pi/4 +var.ls*2 +sin(var.ls*2)/3 )/2 )*var.trot  +sin(-pi/3 +var.ls*2 +sin(-pi/3 -pi/2+var.ls*2)/2 )/2*limb_speed*(1-var.trot) )*var.walk  +( sin( var.ls +cos(-pi/3 +var.ls)/3)/1.5*limb_speed )*var.run"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}