{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "if( varb.fcc, var.hy, clamp(head_yaw,-90,90)*min(1,frame_time*9) +var.hy*max(0,1-frame_time*9) )",
			"var.testing": "0",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r +age/if(is_child, 18, 40)*pi",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*max(0, (1-hurt_time/10)*8 ) -cos(death_time/6)*clamp(death_time/2, 0, 1)",
			"var.swim": "var.r +age/if(is_child, 11, 15)*pi +limb_swing/4",
			"var.digging": "clamp(if(body.ty>1 && !is_in_water && is_on_ground, min(20, var.digging +0.2 *frame_time*20), max(0, var.digging -0.2 *frame_time*20)), 0, 1)",
			"var.jump": "   clamp(if(age>8&& !is_in_water && !is_on_ground && !is_riding, min(20, var.jump +0.5 *frame_time*20), max(0, var.jump -0.5 *frame_time*20)), 0, 1)",
			"var.walk": "min(0.35, min(0.5, 16*limb_speed))",
			"var.nov1": "clamp( if( is_in_water || !is_on_ground, 0, (0.5-0.5*cos( clamp((-185.3 +sin(var.r +age/340)*186)*1.4, 0, 1)*pi )) ), 0, 1 )",
			"var.nov2": "(0.5-0.5*cos( clamp(-2 +sin(var.r +age/60)*3, 0, 1-var.nov1)*pi ))*(1-var.digging)",
			"var.look": " clamp(if(head_pitch!=0, min(20, var.look +0.2 *frame_time*20), max(0, var.look -0.2 *frame_time*20)), 0, 1-var.nov1)",
			"var.Lear": "clamp( cos(          var.r +age/1.5/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/1.5/(20*12) )*8 -5 , 0 , 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/1.5/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/1.5/(15*12) )*8 -5 , 0 , 1 ) )",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.rotation": "if( varb.fcc, var.rotation, age<9 || is_riding, var.roty,                                                                  var.roty*min(1,frame_time*9 ) +var.rotation*max(0,1-frame_time*9 ) )",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9,           var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,                                  pos_y,                                       pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.flopposy": "if( varb.fcc, var.flopposy, age<9 || is_riding, pos_y-var.pre_bodyposy/10*(1-var.jump),    (pos_y-var.pre_bodyposy/10*(1-var.jump))*min(1,frame_time*16) +var.flopposy*max(0,1-frame_time*16) )",
			"var.tilt": "clamp( var.position-pos_y, -pi/4, pi/4 )*(1-var.digging)",
			"var.flop": "clamp( var.flopposy-(pos_y-var.pre_bodyposy/10*(1-var.jump)), -pi/4, pi/4 )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"root.ry": "var.rotation-rot_y",
			"body.rx": "if(!is_riding&&!is_on_ground&&is_in_water, torad(-5 +sin(pi/3+var.swim +cos(pi/3+var.swim)/2)*3 ), body.rx*(1-var.testing) +torad( -1+sin(pi/4+var.b) +3*var.nov1 +head_pitch/7 )) +torad(-8 -5*sin(limb_swing/1.5) )*var.hurt +var.tilt/1.5*var.jump +torad(if(is_child, -3, 0))",
			"body.ry": "body.ry*(1-var.testing) +torad(var.hy)/16 +sin(-pi/4+var.r+age/16)/8*var.nov2",
			"body.rz": "if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim)/40, body.rz*(1-var.testing) +(-cos(var.r+age/1.5)/32 )*var.nov1 ) +sin(limb_swing/2.5)/6*var.hurt",
			"body.tx": "body.tx*(1-var.testing) -sin(-pi/4+var.r+age/16)*1.4*var.nov2",
			"body.ty": "if(!is_riding&&!is_on_ground&&is_in_water, 6, body.ty*(1-var.testing) +5*var.testing +sin(var.b +cos(var.b)/3 )/2 ) +(-1 -1*sin(limb_swing/1.5) )*var.hurt +if(is_child, -0.7, 0)",
			"body.tz": "body.tz*(1-var.testing)",
			"coat.sx": "1 +clamp( var.flop/2, -0.05, 0.2)/2",
			"coat.sz": "1 +clamp( var.flop/2, -0.03, 0.2)/2",
			"coat.sy": "1 +clamp(-var.flop/2, -0.2 , 0.1)/1.3"
		},
		{
			"head2.rx": "if(!is_riding&&!is_on_ground&&is_in_water, torad(if(is_child, -5, 3) -sin(var.swim)*7 ), clamp( (head.rx-torad(head_pitch))/1.5*(1-var.testing) +torad(head_pitch),-pi/4, pi/4) -body.rx -(nose.sy-1)/40 -torad( 10*var.nov1 ) ) +torad( 20 +10*sin(limb_swing/1.5) )*var.hurt +torad(-10)*var.nov2 +var.tilt/3*var.jump",
			"head2.ry": "clamp( head.ry*(1-var.testing)     +torad( (sin( clamp(sin(       var.r +age/(30+20*random(id)))*5, -1, 1)*pi/2 ))*20*var.look +var.hy*var.testing),-pi/3, pi/3)*clamp(1-var.nov1-var.nov2, 0, 1)    -( sin(pi/9+var.r+age/1.5)/4 )*var.nov1 +sin(limb_swing/2.5)/3*var.hurt +sin(var.r+age/16 +sin(var.r+age/8)/3)/3*var.nov2",
			"head2.rz": "head.rz*(1-var.testing) -body.rz   +torad( (sin( clamp(sin(-pi/40+var.r +age/(30+20*random(id)))*5, -1, 1)*pi/2 ))*10*var.look -head_pitch/2*(sin(var.hy/180*pi)) +var.hy/6 )                        -( sin(     var.r+age/1.5)/2 )*var.nov1                                 +sin(var.r+age/16 +sin(var.r+age/8)/3)/4*var.nov2",
			"head2.tx": "head.tx*(1-var.testing)    +clamp( -body.tx -var.hy/30,-2, 2) -sin(-pi/4+var.r+age/16)*1.4*var.nov2",
			"head2.ty": "head.ty*(1-var.testing)-19 +9.5*var.testing -body.ty/2 +if(!is_riding&&!is_on_ground&&is_in_water, -3, 0) +head_pitch/45 +if(is_child, -3, 0)",
			"head2.tz": "head.tz*(1-var.testing)   -19.5*var.testing -body.tz +clamp( (cos(var.hy/180*pi)-1)*3, -3, 3)",
			"head2.sx": "if(is_child, 1.25, 1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx",
			"nose2.sy": "1 +(nose.sy-1)/2"
		},
		{
			"left_ear2.rx": " clamp(  left_ear.rx -(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty)) -head2.rx/1.5 +torad( -10*clamp( (  sin(       pi/4 +(var.r+age/1.5)/2 ) +sin(       (var.r+age/1.5) )  ) *var.Lear -1 , 0 , 1 ) ), -pi/4, pi/4)",
			"right_ear2.rx": "clamp( right_ear.rx +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty)) -head2.rx/1.5 +torad( -10*clamp( (  sin(       pi/4 +(var.r+age/1.5)/2 ) +sin(       (var.r+age/1.5) )  ) *var.Rear -1 , 0 , 1 ) ), -pi/4, pi/4)",
			"left_ear2.ry": "  left_ear.ry +torad(-2 )",
			"right_ear2.ry": "right_ear.ry +torad( 2 )",
			"left_ear2.rz": " clamp( -head2.rz*(1-var.nov1) + left_ear.rz/2 +torad( if(!is_riding&&!is_on_ground&&is_in_water, -16, -2 ) ) +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty)) -var.flop +torad( -20*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.5)/2 ) +sin(-pi/8 +(var.r+age/1.5) )  ) *var.Lear -1 , 0 , 1 ) ) +( cos(pi/9+var.r+age/1.5)/2 )*var.nov1, -pi/1.2, 0 )",
			"right_ear2.rz": "clamp( -head2.rz*(1-var.nov1) +right_ear.rz/2 +torad( if(!is_riding&&!is_on_ground&&is_in_water,  16,  2 ) ) +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty)) +var.flop +torad(  20*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.5)/2 ) +sin(-pi/8 +(var.r+age/1.5) )  ) *var.Rear -1 , 0 , 1 ) ) +( cos(pi/9+var.r+age/1.5)/2 )*var.nov1,  0, pi/1.2 )",
			"left_ear2.ty": " -6.8",
			"right_ear2.ty": "-6.8",
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/11)*6))*clamp(-32 +cos((var.r+age/11)/1.5)*40 +cos((var.r+age/11)/4)*40, 0, 1), clamp( death_time, 0, 1), 1), 2)",
			"left_eye.tx": "6.5 +clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) )-3, 0, 128 )/400",
			"right_eye.tx": "-left_eye.tx",
			"left_eye.ty": "-1 -sin(hurt_time/1.5)/2*var.hurt*(1-var.blink)",
			"right_eye.ty": "left_eye.ty",
			"left_eye.sy": "( 1 -2*sin(hurt_time/1.5)*var.hurt )*(1-var.blink)",
			"right_eye.sy": "left_eye.sy",
			"left_eye.visible": "  left_eye.sy>0",
			"right_eye.visible": "right_eye.sy>0"
		},
		{
			"front_left_leg.rx": "  if(!is_riding&&!is_on_ground&&is_in_water, torad(-10 +sin(pi/2+var.swim+pi/6 +cos(pi/2+var.swim+pi/6)/2)*30 ),   front_left_leg.rx*(1-var.testing) +torad( -(sin(var.b)+1) +30*todeg(  front_left_leg.rz/90)*(1-var.testing) +(  front_left_leg.tz+15)*if(is_child, 1, 4)*(1-var.testing) +sin(-pi/4+var.r+age/16)*5*var.nov2 +var.hy/13) ) +torad(-20)*var.jump",
			"front_right_leg.rx": " if(!is_riding&&!is_on_ground&&is_in_water, torad(-10 +sin(pi/2+var.swim-pi/6 +cos(pi/2+var.swim-pi/6)/2)*30 ),  front_right_leg.rx*(1-var.testing) +torad( -(sin(var.b)+1) -30*todeg( front_right_leg.rz/90)*(1-var.testing) +( front_right_leg.tz+15)*if(is_child, 1, 4)*(1-var.testing) -sin(-pi/4+var.r+age/16)*5*var.nov2 -var.hy/13) ) +torad(-20)*var.jump",
			"middle_left_leg.rx": " if(!is_riding&&!is_on_ground&&is_in_water, torad(     sin(pi/4+var.swim+pi/6 +cos(pi/4+var.swim+pi/6)/2)*20 ),  middle_left_leg.rx*(1-var.testing) +torad( -(sin(var.b)+1) -10*todeg( middle_left_leg.rz/90)*(1-var.testing) +( middle_left_leg.tz   )*if(is_child, 0, 4)*(1-var.testing) +sin(-pi/4+var.r+age/16)*5*var.nov2 ) )",
			"middle_right_leg.rx": "if(!is_riding&&!is_on_ground&&is_in_water, torad(     sin(pi/4+var.swim-pi/6 +cos(pi/4+var.swim-pi/6)/2)*20 ), middle_right_leg.rx*(1-var.testing) +torad( -(sin(var.b)+1) +10*todeg(middle_right_leg.rz/90)*(1-var.testing) +(middle_right_leg.tz   )*if(is_child, 0, 4)*(1-var.testing) -sin(-pi/4+var.r+age/16)*5*var.nov2 ) )",
			"back_left_leg.rx": "   if(!is_riding&&!is_on_ground&&is_in_water, torad( 10 +sin(     var.swim+pi/9 +cos(     var.swim+pi/9)/2)*30 ),    back_left_leg.rx*(1-var.testing) +torad(  (sin(var.b)+1) -40*todeg(   back_left_leg.rz/90)*(1-var.testing) +(   back_left_leg.tz-15)*if(is_child, 1, 5)*(1-var.testing) +sin(-pi/4+var.r+age/16)*5*var.nov2 +var.hy/13) ) +torad( 20)*var.jump",
			"back_right_leg.rx": "  if(!is_riding&&!is_on_ground&&is_in_water, torad( 10 +sin(     var.swim-pi/9 +cos(     var.swim-pi/9)/2)*30 ),   back_right_leg.rx*(1-var.testing) +torad(  (sin(var.b)+1) +40*todeg(  back_right_leg.rz/90)*(1-var.testing) +(  back_right_leg.tz-15)*if(is_child, 1, 5)*(1-var.testing) -sin(-pi/4+var.r+age/16)*5*var.nov2 -var.hy/13) ) +torad( 20)*var.jump",
			"front_left_leg.ry": "  if(!is_riding&&!is_on_ground&&is_in_water, 0,   front_left_leg.ry +torad( 10*(1-var.walk)*(1+todeg(  front_left_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"front_right_leg.ry": " if(!is_riding&&!is_on_ground&&is_in_water, 0,  front_right_leg.ry +torad(-10*(1-var.walk)*(1-todeg( front_right_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"middle_left_leg.ry": " if(!is_riding&&!is_on_ground&&is_in_water, 0,  middle_left_leg.ry +torad(  4*(1-var.walk)*(1+todeg( middle_left_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"middle_right_leg.ry": "if(!is_riding&&!is_on_ground&&is_in_water, 0, middle_right_leg.ry +torad(- 4*(1-var.walk)*(1-todeg(middle_right_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"back_left_leg.ry": "   if(!is_riding&&!is_on_ground&&is_in_water, 0,    back_left_leg.ry +torad(  4*(1-var.walk)*(1+todeg(   back_left_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"back_right_leg.ry": "  if(!is_riding&&!is_on_ground&&is_in_water, 0,   back_right_leg.ry +torad(- 4*(1-var.walk)*(1-todeg(  back_right_leg.rz/90)) ) )*(1-var.testing) +torad(var.hy)/16",
			"front_left_leg.rz": "  if(!is_riding&&!is_on_ground&&is_in_water, torad(-10 +cos(pi/2+var.swim+pi/6 +sin(pi/2+var.swim+pi/6)/3)*20 ),   front_left_leg.rz*(1-var.testing) ) -sin(-pi/4+var.r+age/16)/5*var.nov2 +torad(-var.hy/10 )",
			"front_right_leg.rz": " if(!is_riding&&!is_on_ground&&is_in_water, torad( 10 -cos(pi/2+var.swim-pi/6 +sin(pi/2+var.swim-pi/6)/3)*20 ),  front_right_leg.rz*(1-var.testing) ) -sin(-pi/4+var.r+age/16)/5*var.nov2 +torad(-var.hy/10 )",
			"middle_left_leg.rz": " if(!is_riding&&!is_on_ground&&is_in_water, torad(-20 +cos(pi/3+var.swim+pi/6 +sin(pi/3+var.swim+pi/6)/3)*10 ),  middle_left_leg.rz*(1-var.testing) ) -sin(-pi/4+var.r+age/16)/8*var.nov2 ",
			"middle_right_leg.rz": "if(!is_riding&&!is_on_ground&&is_in_water, torad( 20 -cos(pi/3+var.swim-pi/6 +sin(pi/3+var.swim-pi/6)/3)*10 ), middle_right_leg.rz*(1-var.testing) ) -sin(-pi/4+var.r+age/16)/8*var.nov2",
			"back_left_leg.rz": "   if(!is_riding&&!is_on_ground&&is_in_water, torad(-10 -cos(     var.swim      -sin(     var.swim     )/3)*20 ),    back_left_leg.rz*(1-var.testing) )                                     +torad( var.hy/10 )",
			"back_right_leg.rz": "  if(!is_riding&&!is_on_ground&&is_in_water, torad( 10 +cos(     var.swim      +sin(     var.swim     )/3)*20 ),   back_right_leg.rz*(1-var.testing) )                                     +torad( var.hy/10 )",
			"front_left_leg.tx": "    front_left_leg.tx*(1-var.testing) +8*var.testing -1 -sin(-pi/4+var.r+age/16)/5*9*var.nov2 +(-var.hy/70 )",
			"front_right_leg.tx": "  front_right_leg.tx*(1-var.testing) -8*var.testing +1 -sin(-pi/4+var.r+age/16)/5*9*var.nov2 +(-var.hy/70 )",
			"middle_left_leg.tx": "  middle_left_leg.tx*(1-var.testing) +8*var.testing    -sin(-pi/4+var.r+age/16)/8*9*var.nov2",
			"middle_right_leg.tx": "middle_right_leg.tx*(1-var.testing) -8*var.testing    -sin(-pi/4+var.r+age/16)/8*9*var.nov2",
			"back_left_leg.tx": "      back_left_leg.tx*(1-var.testing) +8*var.testing -1                                       +( var.hy/70 )",
			"back_right_leg.tx": "    back_right_leg.tx*(1-var.testing) -8*var.testing +1                                       +( var.hy/70 )",
			"front_left_leg.ty": "  if(!is_riding&&!is_on_ground&&is_in_water, 15,   front_left_leg.ty*(1-var.testing) +15*var.testing ) +( var.tilt*10 +if(is_child, 0, 2.5) )*var.jump",
			"front_right_leg.ty": " if(!is_riding&&!is_on_ground&&is_in_water, 15,  front_right_leg.ty*(1-var.testing) +15*var.testing ) +( var.tilt*10 +if(is_child, 0, 2.5) )*var.jump",
			"middle_left_leg.ty": " if(!is_riding&&!is_on_ground&&is_in_water, 16,  middle_left_leg.ty*(1-var.testing) +15*var.testing ) +(              if(is_child, 0, 2.5) )*var.jump",
			"middle_right_leg.ty": "if(!is_riding&&!is_on_ground&&is_in_water, 16, middle_right_leg.ty*(1-var.testing) +15*var.testing ) +(              if(is_child, 0, 2.5) )*var.jump",
			"back_left_leg.ty": "   if(!is_riding&&!is_on_ground&&is_in_water, 17,    back_left_leg.ty*(1-var.testing) +15*var.testing ) +(-var.tilt*10 +if(is_child, 0, 2.5) )*var.jump",
			"back_right_leg.ty": "  if(!is_riding&&!is_on_ground&&is_in_water, 17,   back_right_leg.ty*(1-var.testing) +15*var.testing ) +(-var.tilt*10 +if(is_child, 0, 2.5) )*var.jump",
			"front_left_leg.tz": "    front_left_leg.tz*(1+0.5*var.walk)*(1-var.testing) -15*var.testing +7.5*var.walk +1 +(sin(var.b)+1)/6 -sin(-pi/4+var.r+age/16)/1.3*var.nov2 +(-var.hy/100 ) +( (1-cos(var.tilt*pi/2))*3 +var.tilt*7 )*var.jump",
			"front_right_leg.tz": "  front_right_leg.tz*(1+0.5*var.walk)*(1-var.testing) -15*var.testing +7.5*var.walk +1 +(sin(var.b)+1)/6 +sin(-pi/4+var.r+age/16)/1.3*var.nov2 +( var.hy/100 ) +( (1-cos(var.tilt*pi/2))*3 +var.tilt*7 )*var.jump",
			"middle_left_leg.tz": "  middle_left_leg.tz*(1+0*var.walk)  *(1-var.testing)                                  +(sin(var.b)+1)/6 -sin(-pi/4+var.r+age/16)/1.3*var.nov2                   +(                           var.tilt*7 )*var.jump",
			"middle_right_leg.tz": "middle_right_leg.tz*(1+0*var.walk)  *(1-var.testing)                                  +(sin(var.b)+1)/6 +sin(-pi/4+var.r+age/16)/1.3*var.nov2                   +(                           var.tilt*7 )*var.jump",
			"back_left_leg.tz": "      back_left_leg.tz*(1+0.5*var.walk)*(1-var.testing) +15*var.testing -7.5*var.walk -1 -(sin(var.b)+1)/6 -sin(-pi/4+var.r+age/16)/1.3*var.nov2 +(-var.hy/100 ) +(-(1-cos(var.tilt*pi/2))*3 +var.tilt*7 )*var.jump",
			"back_right_leg.tz": "    back_right_leg.tz*(1+0.5*var.walk)*(1-var.testing) +15*var.testing -7.5*var.walk -1 -(sin(var.b)+1)/6 +sin(-pi/4+var.r+age/16)/1.3*var.nov2 +( var.hy/100 ) +(-(1-cos(var.tilt*pi/2))*3 +var.tilt*7 )*var.jump"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_bodyposy": "body.ty",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}