{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.testing": "0",
			"var.thrust": "( tentacle1.rx/0.7853982*(1-var.testing) +( max(0,sin(time/5 -sin(time/5)/2 )*30+15) )/45*var.testing )*max(0,1-death_time/6)",
			"var.id": "random(id)*pi*4",
			"var.Bt": "( time - death_time/1.5 )*if(is_child,1.5,1) * ( 1-0.25*random(id) )  +sin( (( time - death_time/1.5 )*if(is_child,1.5,1) * ( 1-0.25*random(id) ))/5 )*2*var.land",
			"var.land": "clamp(if( varb.fcc, var.land, !is_in_water || !is_alive, var.land +2 *frame_time, var.land -2 *frame_time ), 0, 1 )",
			"var.water": "max( 0, 1 -var.land )*if(is_child, 1.2, 1)",
			"var.moving": "clamp( if( varb.fcc, var.moving, limb_speed>0.05, var.moving +2 *frame_time, var.moving -frame_time *0.3 ), 0, 1 )",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
			"var.scared": "clamp( if( varb.fcc, var.scared, is_hurt && hurt_time<3 || limb_speed==1, var.scared +2 *frame_time, var.scared -frame_time *0.05 ), 0, max(0, 1-death_time ) )",
			"var.Abend": "clamp( if( varb.fcc, var.Abend, var.thrust<0.6 && var.thrust_prev <= var.thrust, var.Abend +1 *frame_time, var.Abend -1 *frame_time ), min(1,death_time/6), 1 )",
			"var.bend": "( 0.5-0.5*cos( pow( var.Abend, 2)*pi ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.ry": "torad( ( 70*sin(var.id+var.Bt/70)  )*var.water  +( 10*sin(var.id+var.Bt/7) )*var.land  )",
			"body.ty": "6 +( sin(var.id+var.Bt/16)  +4*cos(-pi/4+var.bend*pi/1.5)*var.thrust*(1+0.5*min(1,var.scared*6))*(0.2+0.8*var.moving) )*var.water  -3*var.land",
			"body.tx": "   ( cos(var.id+var.Bt/32)                                                                                            )*var.water",
			"body.tz": "   (-sin(var.id+var.Bt/16)                                                                                            )*var.water",
			"tentacles.sy": "if(is_child, 0.88, 1) +0.4*limb_speed*if(is_child,1.5,1)  +( ( 0.2 -0.3*sin(-pi/3+var.bend*pi) )*var.thrust*(1+0.5*min(1,var.scared*6))*(0.2+0.8*var.moving) )*var.water",
			"tentacles.sx": "if(is_child, 0.88, 1) -0.2*limb_speed*if(is_child,1.5,1)",
			"tentacles.sz": "if(is_child, 0.88, 1) -0.2*limb_speed*if(is_child,1.5,1)",
			"head.ry": "torad(                                                                  30*sin(var.id+var.Bt/2.5)*var.hurt  )",
			"head.rx": "torad( ( 6*cos(pi/4+var.id+var.Bt/16) -30*limb_speed )*var.water       +20*sin(var.id+var.Bt/1.5)*var.hurt  )",
			"head.rz": "torad( (-6*cos(     var.id+var.Bt/32)                )*var.water  +( 7*sin(-pi/5+var.id+var.Bt/7) )*var.land  )",
			"head.ty": "-18",
			"head.sy": "1 +0.15*limb_speed*if(is_child,1.5,1)  +( -(0.2 -0.3*sin(-pi/3+var.bend*pi    ) )*var.thrust/2*(1+0.5*min(1,var.scared*6))*(1+var.moving)/2  )*var.water  -0.2 *hurt_time/6",
			"head.sx": "1 -0.1 *limb_speed*if(is_child,1.5,1)  +(  (0.2 -0.3*sin(-pi/4+var.bend*pi/1.3) )*var.thrust/2                            *(1+var.moving)/2  )*var.water  +0.15*hurt_time/6",
			"head.sz": "1 -0.1 *limb_speed*if(is_child,1.5,1)  +(  (0.2 -0.3*sin(-pi/4+var.bend*pi/1.3) )*var.thrust/2                            *(1+var.moving)/2  )*var.water  +0.15*hurt_time/6"
		},
		{
			"var.rotation_x": "torad( if(is_child,-12,-5) +( ( 50-50*cos(var.thrust*pi/2 +sin(var.thrust*pi/2)/1.7) ) -90*sin(pi/5+var.thrust*pi/1.5)*var.thrust*var.bend )*(1+0.5*min(1,var.scared*6))*(0.5+0.5*var.moving)*var.water  )",
			"anim_tentacle1.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(135) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle2.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(315) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle3.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(270) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle4.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(225) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle5.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(180) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle6.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad( 45) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle7.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad(  0) +var.id+var.Bt/3) )*var.land  )",
			"anim_tentacle8.rx": "var.rotation_x  +torad(  ( 5 +10*sin( torad( 90) +var.id+var.Bt/3) )*var.land  )",
			"var.rotation_z": "torad(  ( -5*( 1-sin(var.id+var.Bt/6) )*( 1-cos(var.id+var.Bt/70) )  )*var.water  )",
			"anim_tentacle1.rz": "var.rotation_z",
			"anim_tentacle2.rz": "var.rotation_z",
			"anim_tentacle3.rz": "var.rotation_z",
			"anim_tentacle4.rz": "var.rotation_z",
			"anim_tentacle5.rz": "var.rotation_z",
			"anim_tentacle6.rz": "var.rotation_z",
			"anim_tentacle7.rz": "var.rotation_z",
			"anim_tentacle8.rz": "var.rotation_z"
		},
		{
			"var.translate_z": "if(is_child, 1.5, 0) +( -0.1 +(1 -1.5*cos(pi/4+var.bend*pi/1.7))*sin(var.thrust*pi/2)*(1+0.5*min(1,var.scared*6))  )*var.water",
			"anim_tentacle1.tz": "var.translate_z",
			"anim_tentacle2.tz": "var.translate_z",
			"anim_tentacle3.tz": "var.translate_z",
			"anim_tentacle4.tz": "var.translate_z",
			"anim_tentacle5.tz": "var.translate_z",
			"anim_tentacle6.tz": "var.translate_z",
			"anim_tentacle7.tz": "var.translate_z",
			"anim_tentacle8.tz": "var.translate_z",
			"var.translate_y": "(  (-0.2 +2*sin(var.thrust*pi/1.5)*sin(-pi/6+var.bend*pi/1.2) )*(1+0.5*min(1,var.scared*6))  )*var.water",
			"anim_tentacle1.ty": "-var.translate_y                   +0.3*limb_speed",
			"anim_tentacle2.ty": "-var.translate_y +2.5*sin(head.rx) +0.6*limb_speed",
			"anim_tentacle3.ty": "-var.translate_y +5  *sin(head.rx) +1.3*limb_speed",
			"anim_tentacle4.ty": "-var.translate_y +2.5*sin(head.rx) +0.6*limb_speed",
			"anim_tentacle5.ty": "-var.translate_y                   +0.3*limb_speed",
			"anim_tentacle6.ty": "-var.translate_y -2.5*sin(head.rx) +0.1*limb_speed",
			"anim_tentacle7.ty": "-var.translate_y -5  *sin(head.rx) -0.5*limb_speed",
			"anim_tentacle8.ty": "-var.translate_y -2.5*sin(head.rx) +0.1*limb_speed"
		},
		{
			"var.blink": "pow( clamp( (1.5 -abs(sin(var.id+var.Bt/10)*5))*clamp(-32 +cos((var.id+var.Bt/8)/1.5)*40 +cos((var.id+var.Bt/8)/4)*40, 0, 1), clamp(-sin(var.Bt*pi/5)/4*var.hurt +2*death_time, 0, 1), 1 ), 2 )",
			"var.eye_top": "2 +( -2 +clamp(-4+sin(var.id+var.Bt/130)*6,0,0.5) -0.5*(0.5-0.5*cos( min(1,var.scared*9)*pi ))  +sin(var.Bt*pi/5)*var.hurt  )*(1-var.blink)",
			"var.pupil_y": "-0.5 -(head.rx+body.rx) +var.eye_top/2  +clamp( sin(var.id+var.Bt/70 )*20 -10, 0, 1 )*(1-min(1,var.scared*9))  +clamp(-24 +sin(var.id+var.Bt/100)*40, 0, 1)/10",
			"var.pupil_x": "      head.ry  -head_yaw/40   +clamp(sin(var.id+var.Bt/27) +sin(var.id+var.Bt/16), -0.1, 0.1)*clamp(-20*2 -cos(var.id+var.Bt/125)*30*2, 0, 1)*clamp(59*4 -sin(var.id+var.Bt/187)*60*4, 0, 1)",
			"right_eye.tz": "-6 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 1, 128 )/1000",
			"left_eye.tz": "right_eye.tz",
			"r_pupil.tz": "right_eye.tz+6",
			"l_pupil.tz": "right_eye.tz+6",
			"right_eye.sx": "1 +clamp(-1 +var.blink*2, 0, 1)/2",
			"left_eye.sx": " 1 +clamp(-1 +var.blink*2, 0, 1)/2",
			"r_eye_white.sy": "clamp(2 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )",
			"l_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+1, 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+1, 1 )",
			"r_pupil.sy": "clamp(1 +var.pupil_y-1 +r_eye_white.sy-0.5, 0, clamp( r_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"l_pupil.sy": "clamp(1 +var.pupil_y-1 +l_eye_white.sy-0.5, 0, clamp( l_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"r_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"r_eyelid.ty": "-r_eye_white.sy+1",
			"l_eyelid.ty": "r_eyelid.ty",
			"r_eyelid.sy": "1-r_eye_white.sy",
			"l_eyelid.sy": "1-l_eye_white.sy",
			"r_eyelid.visible": "r_eyelid.sy>=0",
			"l_eyelid.visible": "l_eyelid.sy>=0"
		},
		{
			"var.thrust_prev": "var.thrust",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}