{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r +age/if(is_child, 45, 80)*pi*2",
			"var.ls": "var.r +limb_swing/1.4/if(is_child, 3, 1)",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
			"var.aggroA": "clamp(if(right_arm.rx<torad(-115) && left_arm.rx<torad(-115) || between(swing_progress, 0.01, 0.6), min(20, var.aggroA +0.08 *frame_time*20), max(0, var.aggroA -0.1 *frame_time*20)), 0, 1)",
			"var.aggro": "(0.5-0.5*cos( var.aggroA*pi ))",
			"var.att": "clamp(if(is_aggressive, min(20, var.att +0.1 *frame_time*20), max(0, var.att -0.1 *frame_time*20)), 0, 1)",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "sin(pi/2+var.ls*2)/8*limb_speed +torad(if(is_child, -5, 10) +clamp(-10*limb_speed*3, -10, -10*var.aggro) )*random(id)*(1-var.aggro) +sin(-pi/2+var.b)/40 +torad(head_pitch)/1.4 -sin(swing_progress*pi*2)/3 +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
			"head.ry": "torad(var.hy)/1.2 +sin(limb_swing/2.5)*var.hurt",
			"head.rz": " sin(pi/4+var.ls)/15*limb_speed +torad(var.hy)/4",
			"head.tx": "(-sin(    var.ls)   *limb_speed /if(is_child, 1.5, 1) ) * (1-0.5*if(is_child,1,0))",
			"head.ty": "( 0.5 +(sin(var.b)/4 -sin(torad(if(is_child||limb_speed>=0.6, -45, 45))+var.ls*2 +if(is_child||limb_speed>=0.6, 0, -cos(var.ls*2)/3))*1.5*limb_speed)/if(is_child, 1.5, 1) +if(is_child, -limb_speed, 0) +sin(pi*swing_progress)*2 +( -sin(limb_swing/2)/2 -0.5 )*var.hurt ) * (1-0.5*if(is_child,1,0)) +if(is_child, 12, 0)*if(is_child,1,0)",
			"head.tz": "( (if(is_child, 0.9, -1.8) -sin(var.b)/4 +sin(-pi*swing_progress)*2)/if(is_child, 1.5, 1) +if(limb_speed>=0.6, 0, -cos(var.ls*2 )*limb_speed) ) * (1-0.5*if(is_child,1,0))",
			"body.rx": "torad(if(is_child, -5, 10)) +sin(var.b)/40*if(is_child, -0.8, 1) +torad(5)*limb_speed +sin(pi*swing_progress)/3 +torad( -3 -10*sin(limb_swing/2) )*var.hurt",
			"body.ry": "sin(pi/4+var.ls)/10*limb_speed +torad(var.hy)/6     +torad( 20*cos(limb_swing/3) )*var.hurt",
			"body.rz": "head.rz -torad(var.hy)/4 -sin(pi/4+var.ls)/10*limb_speed -( sin(limb_swing/2) )/22*var.hurt",
			"body.tx": "head.tx",
			"body.ty": "head.ty*if(is_child, 1.3, 1) +if(is_child, -3.75, 0)*if(is_child,1,0)",
			"body.tz": "head.tz"
		},
		{
			"right_arm.rx": "torad(if(is_child, -70, -10)) +torad(var.hy)/8 +sin(var.ls)/if(is_child, 4, 6)*limb_speed +sin(torad(if(is_child||limb_speed>=0.6, 45, 135))+var.ls*2)/if(is_child, 4, 6)*limb_speed +torad( clamp(-120*limb_speed*2*(1-var.aggro) -70*var.aggro -10*var.att, if(is_child, -40, -80), 0 )) +sin(var.b-pi/3)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
			"left_arm.rx": " torad(if(is_child, -70, -10)) -torad(var.hy)/8 -sin(var.ls)/if(is_child, 4, 6)*limb_speed +sin(torad(if(is_child||limb_speed>=0.6, 45, 135))+var.ls*2)/if(is_child, 4, 6)*limb_speed +torad( clamp(-120*limb_speed*2*(1-var.aggro) -70*var.aggro -10*var.att, if(is_child, -40, -80), 0 )) +sin(var.b-pi/3)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
			"right_arm.ry": "clamp(-(var.hy/65)*right_arm.rx, -pi/4, pi/4)*var.aggro +torad(-5 +25*limb_speed) +sin( pi/2+var.b)/20 +sin(-pi/2*swing_progress*2)/4 +torad(-10)*var.att",
			"left_arm.ry": " clamp(-(var.hy/65)* left_arm.rx, -pi/4, pi/4)*var.aggro +torad( 5 -25*limb_speed) +sin(-pi/2+var.b)/20 -sin(-pi/2*swing_progress*2)/4 +torad( 10)*var.att",
			"right_arm.rz": "if(is_in_water, torad( 15), torad( 2)) +clamp(-torad(head_pitch)/8, 0, pi/4) -(sin(pi*swing_progress))/2",
			"left_arm.rz": " if(is_in_water, torad(-15), torad(-2)) +clamp( torad(head_pitch)/8,-pi/4, 0) +(sin(pi*swing_progress))/2",
			"right_arm.tx": "-5.1 * (1-0.5*if(is_child,1,0)) +body.tx",
			"left_arm.tx": "  5.1 * (1-0.5*if(is_child,1,0)) +body.tx",
			"right_arm.ty": "( 2.5 -limb_speed +sin(-pi/3+var.b)/5 ) * (1-0.5*if(is_child,1,0)) +body.ty",
			"left_arm.ty": " ( 2.5 -limb_speed +sin(-pi/3+var.b)/5 ) * (1-0.5*if(is_child,1,0)) +body.ty",
			"right_arm.tz": "( -sin(var.b)/4 +if(is_child, -0.5, -1.8) -cos(var.ls*2 )*if(limb_speed>=0.6, 0, limb_speed) +torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*if(is_child,1,0))",
			"left_arm.tz": " ( -sin(var.b)/4 +if(is_child, -0.5, -1.8) -cos(var.ls*2 )*if(limb_speed>=0.6, 0, limb_speed) -torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*if(is_child,1,0))"
		},
		{
			"right_leg.rx": "if(is_riding, -torad(85), sin(var.b)/40 +sin(var.ls)/6 +sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +clamp(-cos(pi/6+var.ls)/3*clamp(limb_speed*1.5, 0, 1), 0, pi/6) +torad(7)*limb_speed +if(is_child, torad(2), 0)) -torad(var.hy)/30 +sin(-pi*swing_progress)/6 +torad(-40 -20*sin(limb_swing/2) )*var.hurt",
			"left_leg.rx": " if(is_riding, -torad(85), sin(var.b)/40 -sin(var.ls)/6 -sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +clamp( cos(pi/6+var.ls)/3*clamp(limb_speed*1.5, 0, 1), 0, pi/6) +torad(7)*limb_speed +if(is_child, torad(2), 0)) +torad(var.hy)/30 +sin(-pi*swing_progress)/6 +torad(-40 +20*sin(limb_swing/2) )*var.hurt",
			"right_leg.ry": "if(is_riding,  torad(20), torad( 5)) +if(is_child, torad( 15)*clamp(1-limb_speed*3, 0, 1), 0)",
			"left_leg.ry": " if(is_riding, -torad(20), torad(-5)) +if(is_child, torad(-15)*clamp(1-limb_speed*3, 0, 1), 0)",
			"right_leg.rz": "if(is_riding,          0, torad( 2)) +if(is_child,  sin(var.b)/100, 0) +torad(-sin(limb_swing/2) +5)*var.hurt",
			"left_leg.rz": " if(is_riding,          0, torad(-2)) +if(is_child, -sin(var.b)/100, 0) +torad( sin(limb_swing/2) -5)*var.hurt",
			"right_leg.tx": "( -2 +(-sin(var.ls)*limb_speed)/if(is_child, 1.5, 1) ) * (1-0.5*if(is_child,1,0))",
			"left_leg.tx": " (  2 +(-sin(var.ls)*limb_speed)/if(is_child, 1.5, 1) ) * (1-0.5*if(is_child,1,0))",
			"right_leg.ty": "( 12.2 +clamp( sin(pi/2+var.ls)*4*limb_speed +(head.ty-if(is_child, 12, 0)*if(is_child,1,0))*limb_speed*2, -4, 0) ) * (1-0.5*if(is_child,1,0)) +if(is_child, 12, 0)*if(is_child,1,0)",
			"left_leg.ty": " ( 12.2 +clamp(-sin(pi/2+var.ls)*4*limb_speed +(head.ty-if(is_child, 12, 0)*if(is_child,1,0))*limb_speed*2, -4, 0) ) * (1-0.5*if(is_child,1,0)) +if(is_child, 12, 0)*if(is_child,1,0)",
			"right_leg.tz": "( clamp((sin( pi/2+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1) +if(is_child, -0.5, -0.2) +if(is_riding, 0, -sin(var.b)/3) +torad(var.hy)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*if(is_child,1,0))",
			"left_leg.tz": " ( clamp((sin(-pi/2+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1) +if(is_child, -0.5, -0.2) +if(is_riding, 0, -sin(var.b)/3) -torad(var.hy)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*if(is_child,1,0))"
		},
		{
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.tz": "eyes.tz+4",
			"l_pupil.tz": "eyes.tz+4",
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/9)*5 ))*clamp(-32 +cos((var.r+age/9)/1.5)*40 +cos((var.r+age/9)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "( (-1.5 -cos(limb_swing/3)/2)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child,-0.3, 0) +clamp( -4 +cos(var.r+age/77 )*20, 0, 1)/4 )*(1-var.blink) +var.blink",
			"var.pupil_y": "  (-1.5 -cos(limb_swing/3)/2)/9*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child,-0.1, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10  +(1-cos(var.hy/90*pi/2))/3 +clamp(head_pitch/120, -0.2, 0.5)",
			"var.pupil_x": "-var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )-2",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )+2",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}