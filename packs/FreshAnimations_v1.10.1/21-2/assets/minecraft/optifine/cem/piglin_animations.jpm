{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 1, 0)",
			"var.head_rx": "if( varb.fcc, var.head_rx, head.rx )",
			"var.right_arm_rx": "if( varb.fcc, var.right_arm_rx, right_arm.rx )",
			"var.left_arm_rx": " if( varb.fcc,  var.left_arm_rx,  left_arm.rx )",
			"var.right_arm_ry": "if( varb.fcc, var.right_arm_ry, right_arm.ry )",
			"var.left_arm_ry": " if( varb.fcc,  var.left_arm_ry,  left_arm.ry )",
			"var.right_arm_rz": "if( varb.fcc, var.right_arm_rz, right_arm.rz )",
			"var.left_arm_rz": " if( varb.fcc,  var.left_arm_rz,  left_arm.rz )",
			"var.right_leg_rx": "if( varb.fcc, var.right_leg_rx, right_leg.rx )",
			"var.left_leg_rx": " if( varb.fcc,  var.left_leg_rx,  left_leg.rx )",
			"var.crossbow": "                                                                          if(equals( var.left_arm_ry -torad(40), var.right_arm_ry +torad(40), torad(30)), 1, 0 )",
			"var.melee_r": "if(jacket.ry==0 && var.crossbow!=1 && ((var.right_arm_rx-sin(swing_progress*pi)*1.8) -if(var.right_arm_rx>torad(80),  var.left_leg_rx/1.4, 0))<torad(-80), 1, 0 )",
			"var.melee_l": "if(jacket.ry==0 && var.crossbow!=1 && (( var.left_arm_rx-sin(swing_progress*pi)*1.8) -if( var.left_arm_rx>torad(80), var.right_leg_rx/1.4, 0))<torad(-80), 1, 0 )",
			"var.inspect_r": "                                                                 if(var.crossbow!=1 && var.head_rx-torad(head_pitch)!=0 && var.right_arm_ry<=torad(-20), 1, 0 )",
			"var.inspect_l": "                                                                 if(var.crossbow!=1 && var.head_rx-torad(head_pitch)!=0 &&  var.left_arm_ry>=torad( 20), 1, 0 )",
			"var.dance": "                                                                                            if( var.left_arm_rz<=torad(-45) && var.right_arm_rz>=torad( 45), 1, 0 )",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing/if(is_child, 2.4, 1.6)",
			"var.b": "var.r +age/if(is_child, 6, 10)",
			"var.sniff": "clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(-head_pitch +clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), -1, 1)",
			"var.Lear": "clamp( cos(          var.r +age/1.2/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/1.2/(20*12) )*8 -5 , 0 , 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/1.2/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/1.2/(15*12) )*8 -5 , 0 , 1 ) )",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,                        pos_y,                                       pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "if(var.inspect_r==1||var.inspect_l==1, torad(25), torad(head_pitch) +clamp(torad(var.hy)/4, 0, torad(20)) +clamp(-torad(var.hy)/4, 0, torad(20)) ) -sin(pi*2*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0.5) +cos(time/7*pi*2)/4*var.dance +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"head.ry": "if(var.inspect_l==1, torad(-20), 0)         +if(var.melee_l==1,      -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +if(var.inspect_r==1||var.inspect_l==1, sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(torad(var.hy)/1.2, -pi/2     , pi/2     ) ) -sin(time/7*pi)/2*var.dance",
			"head.rz": "                                             if(var.melee_l==1,      -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +if(var.inspect_r==1||var.inspect_l==1, sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(torad(var.hy)/4  , -torad(20), torad(20)) ) +sin(time/7*pi)/3*var.dance +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"head.tx": "( if(var.melee_r==1, 0.5 +sin(pi*swing_progress), var.melee_l==1, -0.5 -sin(pi*swing_progress)  , sin(pi*swing_progress)  ) +sin(var.ls) *limb_speed/1.2 -cos(time/7*pi)*2*var.dance ) * (1-0.5*var.child_scale)",
			"head.ty": "( 0.5 +sin(var.b)/3 +sin(pi*swing_progress)*2*if(var.melee_r==1||var.melee_l==1, 1, 0.5) +(-sin(torad(90)+var.ls*2)/1.5*clamp(limb_speed*2, 0, 1))*clamp(sin(limb_speed*pi*1.5), 0, if(is_child, 0, 1)) +(sin(torad(135)+var.ls*2 -cos(torad(135)+var.ls*2)/3))*1.3*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1) +(0.3 +cos(time/7*pi*2) )*var.dance ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"head.tz": "(-0.5 +clamp(-0.5+limb_speed*3, -0.5, 0.3) -2.7*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) -sin(var.b)/3 -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 4, 2) +if(var.melee_r==1||var.melee_l==1, 2, 0) +if(var.inspect_r==1||var.inspect_l==1, 2.5, 0) +if(is_child, 1, 1*var.dance) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) ) * (1-0.5*var.child_scale)",
			"body.rx": "torad(5) +sin(var.b)/30 +torad(15)*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) +torad(head_pitch)/10                       +if(var.melee_r==1||var.melee_l==1, torad(-10)                            +sin(pi*swing_progress)/2,  sin(pi*swing_progress)/3*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) +if(var.inspect_r==1||var.inspect_l==1, torad(-13), 0) -torad(10)*if(is_child, 1, var.dance) -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"body.ry": "         if(var.melee_r==1||var.melee_l==1||is_riding, 0, clamp(torad(-15 )+limb_speed, torad(-15 ), 0)*if(is_child, 0, 1-var.dance)) +if(var.melee_r==1, torad(30)            -sin(pi*swing_progress)  ,var.melee_l==1, torad(-20)                            +sin(pi*swing_progress)  , -sin(pi*swing_progress)/3*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) -sin(var.ls)/2 *limb_speed/1.2 +clamp(torad(var.hy)/6, -torad(15), torad(15)) +sin(time/7*pi)/4*var.dance",
			"body.rz": "head.rz +if(var.melee_r==1||var.melee_l==1||is_riding, 0, clamp(torad(-1.5)+limb_speed, torad(-1.5), 0)*if(is_child, 0, 1-var.dance)) +if(var.melee_r==1, torad( 5)*limb_speed -sin(pi*swing_progress)/9,var.melee_l==1, torad(-5)*limb_speed +sin(pi*swing_progress)/9, -sin(pi*swing_progress)/6*if(var.melee_r==1||var.melee_l==1, 1, 0.5)) +sin(var.ls)/10*limb_speed/1.2*if(var.melee_r==1||var.melee_l==1, 0, var.inspect_r==1||var.inspect_l==1||var.dance==1, 1, clamp(2-limb_speed*2, -1, 1)) +if(var.inspect_r==1||var.inspect_l==1, -sin(var.r+age/10 +sin(torad(45)+var.r+age/5)/2)/8*if(var.inspect_r==1, -1, 1), clamp(-torad(var.hy)/4, -torad(20), torad(20))) +( -sin(time/7*pi)/3 -cos(time/7*pi)/6 )*var.dance -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"body.tx": "head.tx +( cos(time/7*pi)*var.dance ) * (1-0.5*var.child_scale)",
			"body.ty": "head.ty +( -0.1 +(-(sin(torad(135)+var.ls*2 -cos(torad(135)+var.ls*2)/3)) +sin(torad(160)+var.ls*2 -cos(torad(160)+var.ls*2)/3) )*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1) ) * (1-0.5*var.child_scale)",
			"body.tz": "head.tz +0.5 * (1-0.5*var.child_scale)"
		},
		{
			"right_arm.rx": "if(var.crossbow==1, var.right_arm_rx +cos(torad(-45)+var.ls*2)/10 *limb_speed +torad(-8), torad(15)*limb_speed +if(var.melee_r==1||var.melee_l==1, (sin(pi*swing_progress)*if(var.melee_r==1, 2, 1)), clamp(torad(-20)+if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), torad(-20), 0)*if(is_child, 0, 1-var.dance) -sin(pi*swing_progress*2)                                       ) +if(var.melee_r==1, torad(-120) +torad(-25)*limb_speed +clamp(-torad(var.hy)/2,  -torad(45), torad(45)) -sin(var.ls)/if(is_child, 1, if(limb_speed>=0.6, 4, 1))*limb_speed/1.2, if(is_riding, if(var.melee_l==1, torad(-45), 0), -sin(torad(30)+var.ls)/if(is_child, 1, 1.4)*limb_speed/if(var.inspect_r==1, 3*-1, 1  ) )) +if(var.inspect_r==1, torad(-30), var.inspect_l==1, torad(30), clamp( torad(var.hy)/8, -torad(10), torad(10)) ) ) +( torad(-20) -sin(time/7*pi)/3 )*var.dance +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"left_arm.rx": " if(var.crossbow==1,  var.left_arm_rx +cos(torad(-45)+var.ls*2)/10 *limb_speed           , torad(15)*limb_speed +if(var.melee_r==1||var.melee_l==1, (sin(pi*swing_progress)*if(var.melee_r==1, 1, 2)), clamp(torad( 10)-if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), 0, torad( 10))*if(is_child, 0, 1-var.dance) +sin(pi*swing_progress)/if(var.melee_r==1||var.melee_l==1, 1, 3)) +if(var.melee_l==1, torad(-120) +torad(-25)*limb_speed +clamp(-torad(var.hy)/2,  -torad(45), torad(45)) +sin(var.ls)/if(is_child, 1, if(limb_speed>=0.6, 4, 1))*limb_speed/1.2, if(is_riding, if(var.melee_l==1, 0, torad(-45)),  sin(torad(30)+var.ls)/if(is_child, 1, 1.4)*limb_speed/if(var.inspect_l==1, 3*-1, 1  ) )) +if(var.inspect_l==1, torad(-60),                              clamp(-torad(var.hy)/8, -torad(10), torad(10)) ) ) +( torad(-20) +sin(time/7*pi)/3 )*var.dance +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"right_arm.ry": "if(var.crossbow==1, var.right_arm_ry                                                                                    +torad(-3),                       if(var.melee_r==1||var.melee_l==1, 0,                                                    clamp(torad(-30)+if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), torad(-30), 0)*if(is_child, 0, 1-var.dance) +torad(40)*sin(pi*swing_progress)                     ) +if(var.melee_r==1, torad( 10 ) +torad( 25)*limb_speed +clamp( torad(var.hy)/1.5, -torad(60), torad(60)), if(var.melee_l==1, torad(-30),                                                                 if(is_riding, if(var.melee_l==1, 0, torad( 30)), 0)) +(-sin(    var.ls)/4 +torad(-15) )     *limb_speed/if(var.inspect_r==1, 3.5 , 1.2) )  +if(var.inspect_r==1, torad(-8 ),var.inspect_l==1, clamp(torad(30)-limb_speed*3, 0, torad(30)), 0) +sin(var.b+torad(90))/16 -sin(pi/2*swing_progress*2)/2*if(var.melee_r==1, clamp(limb_speed*2, 1, 2), -1) ) +clamp(torad( 20)-limb_speed, 0, torad( 20))*if(is_child, 1, var.dance)",
			"left_arm.ry": " if(var.crossbow==1,  var.left_arm_ry                                                                                    +torad( 3),                       if(var.melee_r==1||var.melee_l==1, 0,                                                    clamp(torad( 10)-if(var.inspect_r==1||var.inspect_l==1, 0, limb_speed), 0, torad( 10))*if(is_child, 0, 1-var.dance)                                                       ) +if(var.melee_l==1, torad(-10 ) +torad(-25)*limb_speed +clamp( torad(var.hy)/1.5, -torad(60), torad(60)), if(var.melee_r==1, torad( 30),                                                                 if(is_riding, if(var.melee_l==1, torad( 30), 0), 0)) +(-sin(    var.ls)/4 +torad( 15) )     *limb_speed/if(var.inspect_l==1, 3.5 , 1.2) )  +if(var.inspect_l==1, torad( 8 ),                                                               0) +sin(var.b-torad(90))/16 +sin(pi/2*swing_progress*2)/2*if(var.melee_r==1, -1, clamp(limb_speed*2, 1, 2)) ) +clamp(torad(-20)+limb_speed, torad(-20), 0)*if(is_child, 1, var.dance)",
			"right_arm.rz": "if(var.crossbow==1, var.right_arm_rz, torad( 10) -torad(head_pitch)/14 +if(var.melee_r==1, torad(-30), -sin(var.ls)/5*limb_speed/if(var.inspect_r==1, 3.5, 1.2)) +if(var.melee_l==1, -sin(pi*swing_progress  )/2, sin(pi*swing_progress)/4                                       ) ) +if(var.inspect_r==1, -sin(var.r+age/10 -cos((age/1.5+limb_swing)/5)/2)/3, 0 ) +if(var.dance==1, torad( 80) -0.8*limb_speed, 0) +sin(time/7*pi +cos(time/7*pi)/2)/2*var.dance -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"left_arm.rz": " if(var.crossbow==1,  var.left_arm_rz, torad(-10) +torad(head_pitch)/14 +if(var.melee_l==1, torad( 30), -sin(var.ls)/5*limb_speed/if(var.inspect_l==1, 3.5, 1.2)) +if(var.melee_l==1, -sin(pi*swing_progress*2)/4,-sin(pi*swing_progress)/if(var.melee_r==1||var.melee_l==1, 2, 4)) ) +if(var.inspect_l==1,  sin(var.r+age/10 -cos((age/1.5+limb_swing)/5)/2)/3, 0 ) +if(var.dance==1, torad(-80) +0.8*limb_speed, 0) +sin(time/7*pi -cos(time/7*pi)/2)/2*var.dance +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"right_arm.tx": "body.tx +(-5 +if(var.crossbow==1, 0.3 +clamp(-var.hy/10,  0, 2), if(var.melee_r==1, -1, var.melee_l==1, sin(var.ls)*limb_speed*1.2 +limb_speed  , 0) +sin(pi*swing_progress)*if(var.melee_r==1, 2, 0) ) +if(var.inspect_r==1, clamp(0.8-limb_speed*2, 0, 0.8),var.inspect_l==1,                               0, 0) -1*var.dance ) * (1-0.5*var.child_scale)",
			"left_arm.tx": " body.tx +( 5 +if(var.crossbow==1, 0.3 +clamp(-var.hy/10, -2, 0), if(var.melee_l==1,  1, var.melee_r==1, sin(var.ls)*limb_speed*2 -limb_speed*1.5, 0) -sin(pi*swing_progress)*if(var.melee_l==1, 2, 0) ) +if(var.inspect_r==1, clamp(0.5-limb_speed*2, 0, 0.5),var.inspect_l==1, clamp( 1 -limb_speed*4, 0,  1 ), 0) +1*var.dance ) * (1-0.5*var.child_scale)",
			"right_arm.ty": "body.ty +( 2.2 +sin(var.b-torad(60))/4 +if(var.melee_r==1, -1 -1*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, sin(pi*swing_progress), 0) +if(var.inspect_r==1, 1, 0) -sin(time/7*pi)*2*var.dance ) * (1-0.5*var.child_scale)",
			"left_arm.ty": " body.ty +( 2.2 +sin(var.b-torad(60))/4 +if(var.melee_l==1, -1 -1*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, sin(pi*swing_progress), 0) +if(var.inspect_l==1, 1, 0) +sin(time/7*pi)*2*var.dance ) * (1-0.5*var.child_scale)",
			"right_arm.tz": "(-2*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) -sin(var.ls)*4*limb_speed/1.2 -sin(var.b)/4 +clamp( torad(var.hy), -3, 3) +if(var.crossbow==1, -1 +clamp( var.hy/15, -1, 0), if(var.melee_r==1,  2 -sin(pi*swing_progress)*6,var.melee_l==1, limb_speed*2 +sin(pi*swing_progress)*3, clamp(-2+limb_speed*8, -2, 0)*if(is_child, 0, 1-var.dance) -sin(pi*swing_progress)*2)                                                          ) +if(var.inspect_l==1, 3, 0) +( 0.5 +sin(time/7*pi) )*var.dance +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) ) * (1-0.5*var.child_scale)",
			"left_arm.tz": " (-2*if(is_child, limb_speed, clamp(-1+limb_speed*2, 0, 1)) -torad(head_pitch) +sin(var.ls)*4*limb_speed/1.2 -sin(var.b)/4 +clamp(-torad(var.hy), -3, 3) +if(var.crossbow==1, -1 +clamp(-var.hy/15, -1, 0),+if(var.melee_r==1, -1 +sin(pi*swing_progress)*3,var.melee_l==1, 1.5          -sin(pi*swing_progress)*6, clamp( 1-limb_speed*2,  0, 1)*if(is_child, 0, 1-var.dance) +sin(pi*swing_progress)*2) +if(!(var.melee_r==1||var.melee_l==1)&&is_riding, -3, 0) ) +if(var.inspect_r==1, 2, 0) +( 0.5 -sin(time/7*pi) )*var.dance +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) ) * (1-0.5*var.child_scale)"
		},
		{
			"right_leg.rx": "torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +(torad(2)+sin(torad( 20)+var.b)/42) +( sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp(-torad(var.hy)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +(-sin(time/7*pi)/15 +torad(8) )*var.dance",
			"left_leg.rx": " torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(  5)-limb_speed  , 0, torad(  5))*(1-var.dance) +(torad(2)+sin(torad(-20)+var.b)/35) +(-sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp( torad(var.hy)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +( sin(time/7*pi)/15 +torad(8) )*var.dance",
			"right_leg.ry": "torad( 5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad( 20), clamp(torad( 15)-limb_speed  , 0, torad( 15))*if(is_child, 1  , 0          )) +if(var.melee_r==1, torad( 20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), torad(-10), 0) +clamp(torad( 10)-limb_speed*2, 0, torad( 10))*var.dance",
			"left_leg.ry": " torad(-5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad(-20), clamp(torad(-30)+limb_speed*2, torad(-30), 0)*if(is_child, 0.5, 1-var.dance)) +if(var.melee_l==1, torad(-20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), 0, torad( 10)) +clamp(torad(-10)+limb_speed*2, torad(-10), 0)*var.dance",
			"right_leg.rz": "                                        if(is_riding, 0         , clamp(torad(2.5)-limb_speed  , 0, torad(2.5))*(1-var.dance) +torad( 3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, -sin(pi*swing_progress)/8  +sin(var.ls)/3*limb_speed +torad(10)*limb_speed, var.melee_l==1, sin(pi*swing_progress)/8                            +torad( 3)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
			"left_leg.rz": "                                         if(is_riding, 0         , clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +torad(-3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, torad(-3)*limb_speed                                                      , var.melee_l==1, sin(pi*swing_progress)/8 +sin(var.ls)/3*limb_speed +torad(-10)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
			"right_leg.tx": "(-2 +clamp(-0.25+limb_speed,-0.25, 0) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0))                                                      ) +cos(time/7*pi)*var.dance ) * (1-0.5*var.child_scale)",
			"left_leg.tx": " ( 2 +clamp( 0.25-limb_speed, 0, 0.25) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0)) +sin(torad(-20)+var.b)/6*if(is_child, 0, 1-var.dance)) +cos(time/7*pi)*var.dance ) * (1-0.5*var.child_scale)",
			"right_leg.ty": "( 0.1 +clamp(12 +cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( (-sin(var.ls) +(body.ty-if(is_child, 12, 0)*var.child_scale))*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"left_leg.ty": " ( 0.1 +clamp(12 -cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( ( sin(var.ls) +(body.ty-if(is_child, 12, 0)*var.child_scale))*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"right_leg.tz": "(-0.1 +clamp( 3 +cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp( torad(var.hy)/2, -pi/4, pi/4) -sin(torad( 20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1, clamp(-2+limb_speed*4, -2, 0), clamp(-1.5+limb_speed*6, -1.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) +sin(time/7*pi)*0.8*var.dance ) * (1-0.5*var.child_scale)",
			"left_leg.tz": " (-0.1 +clamp( 3 -cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp(-torad(var.hy)/2, -pi/4, pi/4) -sin(torad(-20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1,                            0 , clamp(-0.5+limb_speed*2, -0.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) -sin(time/7*pi)*0.8*var.dance ) * (1-0.5*var.child_scale)"
		},
		{
			"nose.ty": "     -2 +sin(     pi/2+(var.r+age)) /10*var.sniff",
			"tusks.ty": "    -2 -sin(pi/4+pi/2+(var.r+age)) /10*var.sniff",
			"nose.rx": "  (-0.5 +sin(     pi/3+(var.r+age)))/17*var.sniff",
			"tusks.rx": "-(-0.5 +sin(pi/4+pi/2+(var.r+age)))/17*var.sniff",
			"right_ear2.rx": "torad( -5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.melee_r==1||var.melee_l==1, 0, 1) ) ) +if(var.inspect_r==1||var.inspect_l==1, torad(-10), -torad(head_pitch)/3) +sin(pi*swing_progress*2)/2*if(var.melee_r==1||var.melee_l==1, 1, 0.3) +cos(torad(45)+time/7*pi)/2*var.dance +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"left_ear2.rx": " torad( -5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.melee_r==1||var.melee_l==1, 0, 1) ) ) +if(var.inspect_r==1||var.inspect_l==1, torad(-10), -torad(head_pitch)/3) +sin(pi*swing_progress*2)/2*if(var.melee_r==1||var.melee_l==1, 1, 0.3) -cos(torad(45)+time/7*pi)/2*var.dance +clamp( -(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"right_ear2.ry": "torad( 8 )",
			"left_ear2.ry": "-torad( 8 )",
			"right_ear2.rz": "clamp(torad( 20 +45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.melee_r==1||var.melee_l==1, 0, 1) ) ) +cos(var.b)/16 -sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) +sin(pi*swing_progress*2)*if(var.melee_r==1||var.melee_l==1, 1, 0.5) -cos(torad(45)+time/7*pi)/2*var.dance +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 +(var.position-pos_y)*2, -torad(17), pi/2), 0,  pi)",
			"left_ear2.rz": " clamp(torad(-20 -45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.melee_r==1||var.melee_l==1, 0, 1) ) ) -cos(var.b)/16 +sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) -sin(pi*swing_progress*2)*if(var.melee_r==1||var.melee_l==1, 1, 0.5) -cos(torad(45)+time/7*pi)/2*var.dance +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 -(var.position-pos_y)*2, -pi/2, torad(17)), -pi, 0)"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1), 2 )",
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.sy": "1-var.blink",
			"l_pupil.sy": "1-var.blink",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}