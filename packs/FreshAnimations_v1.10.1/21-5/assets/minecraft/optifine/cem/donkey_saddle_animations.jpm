{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp( 90*sin(torad(head_yaw)), -90, 90 )",
			"var.testing": "0",
			"var.Nty": "neck.ty",
			"var.neckx": "round( (  neck.rx  -( 0.5235988 + head_pitch * 0.017453292  +if(limb_speed>0.2, cos(limb_swing * 0.8) * 0.15 * limb_speed, 0) ) -( torad(95) +sin(age)*0.05*0 )*if( body.rx == 0 && var.Nty > if(is_child, 11.110297, 4), (var.Nty-if(is_child, 11.110297, 4))/7, 0)  )*100*(1-var.testing) )/100",
			"var.rearing": "if( var.Nty < if(is_child, 11.110297, 4), -( var.Nty-if(is_child, 11.110297, 4) )/if(is_child, 4, 8)*(1-var.testing), 0 )",
			"var.eating": " if( var.Nty > if(is_child, 11.110297, 4),  ( var.Nty-if(is_child, 11.110297, 4) )/7                 *(1-var.testing), 0 )",
			"var.id": "random(id)*pi*4",
			"var.ls_offset": "if( varb.fcc, var.ls_offset, var.trot>0 || var.run>0, var.ls_offset + frame_time * limb_speed*if(is_ridden, 1.5, 1+0.5*var.run), var.ls_offset)",
			"var.ls": "-0.3 +( limb_swing*1.1 -var.ls_offset*if(is_child, 12, 4) )/if(is_child, 1.8, 1)",
			"var.Rt": "age/2 +limb_swing/20",
			"var.Bt": "var.id +age/if(is_child, 35, 70)*pi*2",
			"var.St": "var.id +age/if(is_child, 16, 20)*pi*2 +limb_swing/3",
			"var.Ct": "var.id +age/if(is_child, 1.5, 2) -cos( var.id +age/if(is_child, 1.5, 2) )/3",
			"var.It": "( var.id +age*if(is_child, 1.3, 1)*(0.7+0.3*random(id)) +sin( var.id +age*if(is_child, 1.3, 1)*(0.7+0.3*random(id))/33 )*9 )/18",
			"var.idle": "max( 0, 1-limb_speed * 6 )",
			"var.move": "min( 1,   limb_speed * 6 )",
			"var.run": " clamp( if( varb.fcc, var.run , limb_speed>=if(is_ridden, 0.8, if(is_child, 0.7, 0.99) ), var.run  +6 *frame_time, var.run  -6 *frame_time ), 0, max(0, 1 -var.swim) )",
			"var.trot": "clamp( if( varb.fcc, var.trot, limb_speed>=if(is_ridden, 0.6, 0.35                    ), var.trot +6 *frame_time, var.trot -6 *frame_time ), 0, max(0, 1 -var.swim -var.run) )",
			"var.walk": "max(0, 1 -var.swim -var.run )",
			"var.swiA": "clamp(if(varb.fcc, var.swiA, !is_riding&&!is_on_ground&&is_in_water, var.swiA +0.8 *frame_time, var.swiA -2 *frame_time ), 0, 1)",
			"var.swim": "clamp(-0.5 +var.swiA*2, 0, 1)",
			"var.t_rland": "clamp( if( varb.fcc, var.t_rland, var.rearing>0.2, 0, var.t_rland + frame_time * if(is_child, 2.4, 1.8 ) ), 0, 1 )",
			"var.rland": "sin( ( var.t_rland -pow( var.t_rland, 2 )/2 )*2*pi )",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*clamp( (1-hurt_time/10)*8, 0, 1)",
			"var.NAeat": "clamp( if( varb.fcc, var.NAeat, is_on_ground && body.rx==0 && var.Nty>if(is_child, 11.110297, 4) && var.rearing==0, var.NAeat +1.2 *frame_time, var.NAeat -1.2 *frame_time ), 0, max(0, var.walk -var.testing) )",
			"var.chew": "clamp( if( varb.fcc, var.chew, var.NAeat>0.8 || ( body.rx==0 && var.neckx!=0 && between( var.neckx, -0.05, 0.05 ) ), var.chew +2 *frame_time, var.chew -0.1 *frame_time ), 0, 1)",
			"var.Nidle": "( 0.3+0.7*(0.5-0.5*cos( clamp( -1 +sin(var.id +(age+limb_swing)/73 )*3, 0, 1 )*pi )) ) * (0.5-0.5*cos( clamp( 1 +sin(var.id +(age+limb_swing)/117 )*5, 0, max(0, 1-var.run) )*pi ))",
			"var.NAshake": "clamp( if( varb.fcc, var.NAshake,                 is_on_ground && (-436.8 +sin(var.id +(age+limb_swing)/400)*438)>0.8, var.NAshake +1.6 *frame_time, var.NAshake -0.8 *frame_time ), 0, max(0, 1 -0.7*var.run -var.rearing -var.Neat) )",
			"var.NAlfleg": "clamp( if( varb.fcc, var.NAlfleg, !is_in_water && is_on_ground && ( -78.8 +cos(var.id +(age+limb_swing)/130)*80 )>0.9, var.NAlfleg +2   *frame_time, var.NAlfleg -2   *frame_time ), 0, max(0, var.idle -var.rearing) )",
			"var.NArbleg": "clamp( if( varb.fcc, var.NArbleg, !is_in_water && is_on_ground && ( -78.8 -sin(var.id +(age+limb_swing)/130)*80 )>0.9, var.NArbleg +2   *frame_time, var.NArbleg -2   *frame_time ), 0, max(0, var.idle -var.rearing) )",
			"var.Neat": "0.5-0.5*cos( pow( var.NAeat, 2)*pi )",
			"var.Nshake": "0.5-0.5*cos( pow( var.NAshake, 3)*pi )",
			"var.Nlfleg": "0.5-0.5*cos( var.NAlfleg*pi )",
			"var.Nrbleg": "0.5-0.5*cos( var.NArbleg*pi )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"root.ty": "3 +if(is_ridden, 0, 8 )*var.swiA",
			"body.rx": "sin(-pi/4+var.Bt)/60*var.idle  +( cos(var.ls*2)/40*var.trot  -cos( var.ls*2 )/40*(1-var.trot) )*max(0.3, var.move)*var.walk  +(sin(var.ls)/20 -cos(var.ls)/16)*limb_speed*if(is_child, 2, 0.7)*(1-var.rearing/if(is_on_ground, 1.2, 3))*var.run  +sin(pi/4+var.St*2)/20*var.swim  +(-0.7 +sin( var.id +var.Rt )/25 )*var.rearing  +torad( 10*cos(var.t_rland*3)*var.rland )",
			"body.ry": "torad(var.hy)/30    +torad(-1  *cos(     var.id+age/3) )*var.Nrbleg",
			"body.rz": "  -cos(-pi/4+var.ls)/(25-5*var.trot)*max(0.3, var.move)*var.walk  -cos(var.St)/15*var.swim  +torad( 3*cos( var.id +var.Rt/2.5 ) )*var.rearing  +torad(-1.5*cos(pi/4+var.id+age/3) )*(var.Nrbleg-var.Nlfleg)",
			"body.tx": "(  -sin(var.ls)/16*var.move*var.walk  ) * if( is_child, 0.5, 1 )",
			"body.ty": "(  9.1  +sin(var.Bt)/6*var.idle  +( ( -sin(var.ls*2) +2)/3*max(0.3, var.move)*if(is_child, 2, 1)*(1-var.trot)  +( 0.1 +cos(pi/4 +var.ls*2 +sin(var.ls*2)/3 )/2 )*var.trot )*var.walk  +cos(-pi/3 +var.ls +sin(var.ls)/3 )*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75))*var.run  +(-4.7 -cos( var.id +var.Rt )/6)*var.rearing  +2*var.rland  ) * if( is_child, 0.5, 1 ) +if(is_child, 9.6, 0)",
			"body.tz": "(  sin(var.ls*2)/2*var.swim   +( 4 -sin( var.id +var.Rt )/4)*var.rearing  ) * if( is_child, 0.5, 1 )",
			"neck2.rx": "-body.rx +torad(30 +( 20*limb_speed +head_pitch/1.5*(1-0.7*var.rearing) )*(1-var.Neat)) +cos(var.Bt)/80  +sin(pi/4+var.ls*2)/20*max(0.3, var.move)*(1-var.trot*2.5)*var.walk  +cos(var.ls)/7*limb_speed*(1-0.7*var.rearing)*(1-var.rland)*var.run  +( torad(5) -sin(var.St*2)/26 )*var.swim  +( torad(-20) -cos( var.id +var.Rt )/25 )*var.rearing  +torad(20)*var.rland  +torad( 95*var.Neat  +3*sin(var.It*1.5 +sin(-pi/4+var.It/1.5)*2 )*var.Nidle*(1-var.Neat) +10*var.Nshake )",
			"neck2.ry": "clamp(torad(var.hy)/2, -pi/9, pi/9)*(1-var.shake/1.5)  +torad(3)*sin(-pi/7+var.It +sin(-pi/7+var.It*2)/2 )*(1-cos(var.It/2 +cos(var.It)/2) )*var.Nidle",
			"neck2.rz": "-body.rz  +( cos(var.id+age/1.2)/8 )*var.Nshake  +torad( 2*cos(clamp(0.5-sin(-pi/12+var.It)*0.7,0,1)*pi)*(0.8-cos(var.It/4+sin(var.It/4)))*var.Nidle )",
			"neck2.ty": "-18.7 +torad(head_pitch)/2*(1-var.Neat)  +sin(var.ls*2)/4*max(0.3, var.move)*var.walk  +(-2 +2*sin( var.t_rland*pi) )*var.rland  +2*var.Neat",
			"neck2.tz": " -6.7 +torad(-head_pitch )*(1-var.Neat) -3.5*var.Neat",
			"neck2.sx": "if(is_child, 1.15, 1)",
			"neck2.sy": "neck2.sx",
			"neck2.sz": "neck2.sx",
			"head2.rx": "( torad(-10) -sin(pi/6+var.ls)/8*(1-var.rland) )*limb_speed*(1-var.rearing*0.7)*var.run  -cos(var.St*2)/20*var.swim  +torad(-10-20*cos(var.t_rland*4))*var.rland  +torad(-20 -20*sin(var.Neat*pi*2) +3*cos(var.id +age/if(is_child, 1.5, 2)) )*var.Neat  +(1 +sin(pi/4+var.Ct))/90*min(1,var.chew*8)*if(random(id)>0.5,-1,1)  +torad(-1.5 +1.5*sin(var.It*1.5 +sin(var.It/1.5)/2 )*var.Nidle*(1-var.Neat)) -torad(10)*var.Nshake",
			"head2.ry": "clamp( torad(var.hy)/6, -pi/12, pi/12 )                               +torad(5)*cos(clamp(0.5-sin(var.It)*1.5,0,1)*pi)*var.Nidle  +( -sin(var.id+age/1.2)/3 +cos(var.id+age/1.2)/8 )*var.Nshake",
			"head2.rz": "(1 +sin( pi/6+var.Ct) )/90*min(1,var.chew*8)*if(random(id)>0.5,-1,1)  +torad(2)*cos(clamp(0.5-sin(var.It)*1.5,0,1)*pi)*var.Nidle*(1-var.Neat)            +( -sin(var.id+age/1.2)/3 )*var.Nshake",
			"head2.tx": "(  sin(var.id+age/1.2)/1.3 )*var.Nshake"
		},
		{
			"snout2.rz": "    (  -1 +sin(-pi/6 +var.Ct          ) )/14*min(1,var.chew*8)*if(random(id)>0.5, -1, 1)/2",
			"snout2.ty": "-3 +(  0.1*sin( var.Ct +cos(var.Ct)/2 ) )   *min(1,var.chew*8)",
			"right_saddle.rx": "-body.rx/1.2 +torad(20)*limb_speed +(sin(var.ls)/6*limb_speed)*var.run +(-sin(var.ls/2)/10*limb_speed)*var.walk",
			"left_saddle.rx": "right_saddle.rx",
			"right_saddle.rz": "clamp( ( 0.2 -sin(-pi/3 +var.ls -cos(var.ls)/3) )/6*limb_speed*var.run, 0, pi/2 )",
			"left_saddle.rz": "-right_saddle.rz",
			"right_rein2.rx": "-body.rx -neck2.rx -head2.rx +torad(head_pitch)/1.5 +(-cos(-pi/3 +var.ls)/8*limb_speed)*var.run +(-sin(var.ls)/40*var.move)*var.walk +torad(10)*limb_speed -torad(20)*var.rearing",
			"left_rein2.rx": "right_rein2.rx",
			"right_rein2.ry": "torad( 4) -torad(var.hy)/4",
			"left_rein2.ry": " torad(-4) -torad(var.hy)/4",
			"right_rein2.rz": "torad(-5) +max(0,-torad(var.hy)/4)",
			"left_rein2.rz": " torad( 5) +min(0,-torad(var.hy)/4)",
			"right_rein3.rz": "( sin(-pi/4 +var.ls )*0.6 -0.2 )*limb_speed*var.run +(-sin(var.ls)/40*var.move)*var.walk +sin(limb_swing+var.Rt/2)*max(0, sin(limb_swing+(var.Rt/20))/30 ) +(sin(var.Rt/1.5)/2*var.rearing)",
			"left_rein3.rz": "-right_rein3.rz",
			"right_rein2.visible": "is_ridden",
			"left_rein2.visible": " is_ridden"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}