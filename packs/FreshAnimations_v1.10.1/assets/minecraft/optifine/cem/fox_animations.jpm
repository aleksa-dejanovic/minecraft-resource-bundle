{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.head_rx": "if( varb.fcc, var.head_rx, head.rx )",
			"var.head_ry": "if( varb.fcc, var.head_ry, head.ry )",
			"var.head_rz": "if( varb.fcc, var.head_rz, head.rz )",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r+age/if(is_child, 5, 10)",
			"var.ls": "limb_swing/if(is_child, 1.5, 1)",
			"var.swim": "var.r +age/if(is_child, 1.4, 2.1)",
			"var.run": "clamp(if(limb_speed>=if(is_child, 0.4, 0.85), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.2, 1))",
			"var.walk": "clamp(1-var.run, 0, 1)",
			"var.sleep": "if(body.rz!=0, 1, 0)",
			"var.count_sleep": "clamp(if(varb.fcc, var.count_sleep, var.sleep==1 && head_pitch==0 && var.hy==0, min(20, var.count_sleep +0.01 *frame_time*20), max(0, var.count_sleep -0.1 *frame_time*20)), 0, 1)",
			"var.pounce": "if(body.rx>pi/2, 1, 0)",
			"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head2.rx": "-if(!is_on_ground&&is_in_water, torad(10), (-sin(torad(-90)+var.ls)/8*limb_speed)*var.run ) +if(is_on_ground||is_in_water, -body.rx +torad(head_pitch)/1.3, torad(-90)) +if(var.sleep==1, torad(88) +cos(torad(45)+var.b)/40, is_sitting, if(is_on_ground, 0, torad(60)), 0)",
			"head2.ry": " if(!is_on_ground&&is_in_water, 0, (sin(torad(5) +var.ls)/10*limb_speed)*var.walk ) +if(var.sleep==1, if(is_child, torad(-10), torad(-22)), var.pounce==1, -body.ry*2, 0) +torad(var.hy)*if(is_sitting, 0.7, 0) -torad(var.hy)/20",
			"head2.rz": "-if(!is_on_ground&&is_in_water, 0, if(var.sleep==1, if(is_child, torad(-85), torad(-80)), 0)*var.walk ) +body.ry -torad(var.hy)/if(is_sitting, 3, 1.5)",
			"head2.tx": "if(var.sleep==1, if(is_child, 3, 1), 0)",
			"head2.tz": " 4.5  +if(is_child, 1.2, 0) +if(!is_on_ground&&is_in_water, -1, sin(torad(-45)+var.ls)*limb_speed*var.run ) +if(var.sleep==1, if(is_child, -0.5, 0), var.pounce==1, -1.5 +sin(var.b+torad(45))/4, is_sitting, -0.5, sin(var.b+torad(45))/4 +1)",
			"head2.ty": "-13.5 +if(is_child, 0.5, 0) +if(!is_on_ground&&is_in_water,  1, is_sitting, if(is_child, -3, -0.5) +sin(var.b+torad(45))/4, 0)",
			"head2.sx": "if(is_child, 1.5, 1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx",
			"body_rotation.rx": "if(!is_on_ground&&is_in_water, sin(limb_swing+age/2)/10, sin(torad(180+22.5)+var.ls)/6*limb_speed*var.run ) +if(var.sleep==1, 0, sin(var.b-torad(90))/60)",
			"body_rotation.ry": "if(!is_on_ground&&is_in_water,  0                      , sin(torad( 45)+var.ls)/10*limb_speed*var.walk )",
			"body_rotation.rz": "if(!is_on_ground&&is_in_water,  0                      , sin(torad( 45)+var.ls)/20*limb_speed*var.walk ) -torad(var.hy)/5",
			"body_rotation.tx": "if(var.sleep==1, -1 +sin(var.b)/8, 0)",
			"body_rotation.ty": "-7.5 +if(is_sitting, 1 +sin(var.b)/8, 0)",
			"body_rotation.tz": "if(!is_on_ground&&is_in_water, -2                      , sin(torad(-90)+var.ls)*limb_speed*var.run -limb_speed*var.walk ) +3 +if(var.sleep==1, 2, is_sitting, -2, sin(var.b)/6)",
			"head.rx": "head2.rx+body.rx                       +body_rotation.rx",
			"head.ry": "head2.ry+if(var.pounce==1,body.ry*2,0) +body_rotation.ry",
			"head.rz": "head2.rz-body.ry                       +body_rotation.rz",
			"head.tx": "(  head2.tx/if(is_child,1.5,1)   +if( var.pounce==1, body.ry*8/if(is_child,1.5,1), 0 ) ) * (1-0.5*var.child_scale)",
			"head.ty": "( -head2.tz/if(is_child,1.5,1) +if(is_child, 43.5/2 -0.7, 19.5 ) +if(is_sitting, sin(var.b+torad(45))/4 -if(is_child, 5.5, 4.6), var.sleep==1, if(is_child, 3.6, 4.6 ), var.pounce==1, body.rx*1.3, 0 )/if(is_child,1.5,1) ) * (1-0.5*var.child_scale)",
			"head.tz": "( -head2.ty/if(is_child,1.5,1) -if(is_child, 15.5/2 +6  , 16.5 ) +if(is_sitting, sin(var.b+torad(45))/3 +if(is_child,-1.5, 1  ), 0 )/if(is_child,1.5,1) ) * (1-0.5*var.child_scale)"
		},
		{
			"leg1.rx": "if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)/2, sin(torad( 0 )+var.ls)*limb_speed*var.run +sin(torad(-90)+var.ls)*limb_speed*var.walk ) +if(is_sitting, torad(-85), 0) -sin(var.b)/60 -torad(var.hy)/10",
			"leg2.rx": "if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)/2, sin(torad(-45)+var.ls)*limb_speed*var.run +sin(torad( 90)+var.ls)*limb_speed*var.walk ) +if(is_sitting, torad(-85), 0) -sin(var.b)/60 +torad(var.hy)/10",
			"leg3.rx": "if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)/2, sin(torad( 90)+var.ls)*limb_speed*var.run +sin(torad(180)+var.ls)*limb_speed*var.walk ) +if(body.rx> torad(90), torad(-30), is_sitting, torad(-5) +sin(var.b)/40, sin(var.b)/60) -torad(var.hy)/10",
			"leg4.rx": "if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)/2, sin(torad(135)+var.ls)*limb_speed*var.run +sin(torad( 0 )+var.ls)*limb_speed*var.walk ) +if(body.rx> torad(90), torad(-30), is_sitting, torad(-5) +sin(var.b)/40, sin(var.b)/60) +torad(var.hy)/10",
			"leg1.ry": "torad( 5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5 +if(is_sitting,  torad(5), 0)",
			"leg2.ry": "torad(-5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5 +if(is_sitting, -torad(5), 0)",
			"leg3.ry": "torad(-5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5     +if(var.pounce==1, torad( 30), 0)",
			"leg4.ry": "torad( 5)*clamp(1-limb_speed*4, 0, 1) +torad(var.hy)/5     +if(var.pounce==1, torad(-30), 0)",
			"leg1.rz": "if(!is_on_ground&&is_in_water, torad( 5), var.pounce==1, torad( 20), is_sitting, torad( 10), 0) +if(is_sitting, -torad(var.hy)/16, torad(var.hy)/8)",
			"leg2.rz": "if(!is_on_ground&&is_in_water, torad(-5), var.pounce==1, torad(-20), is_sitting, torad(-10), 0) +if(is_sitting, -torad(var.hy)/16, torad(var.hy)/8)",
			"leg3.rz": "if(!is_on_ground&&is_in_water, torad( 5), var.pounce==1, torad( 20), is_sitting, torad(-5 ), -torad(5)) -torad(var.hy)/8",
			"leg4.rz": "if(!is_on_ground&&is_in_water, torad(-5), var.pounce==1, torad(-20), is_sitting, torad( 5 ),  torad(5)) -torad(var.hy)/8",
			"leg1.tx": "(-2.1 +if(var.pounce==1, -2, is_sitting, -1.5,  0  ) ) * (1-0.5*var.child_scale)",
			"leg2.tx": "( 2.1 +if(var.pounce==1,  2, is_sitting,  1.5,  0  ) ) * (1-0.5*var.child_scale)",
			"leg3.tx": "(-1.9 +if(var.pounce==1, -3, is_sitting,  0.7,  0.5) ) * (1-0.5*var.child_scale)",
			"leg4.tx": "( 1.9 +if(var.pounce==1,  3, is_sitting, -0.7, -0.5) ) * (1-0.5*var.child_scale)",
			"leg1.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad( 90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(  90)+var.ls)*2)*limb_speed*var.run +(sin(torad( 0 )+var.ls)*2.5*limb_speed)*var.walk, -6, 0)) +if(is_sitting, -1, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"leg2.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad(-90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(  45)+var.ls)*2)*limb_speed*var.run +(sin(torad(180)+var.ls)*2.5*limb_speed)*var.walk, -6, 0)) +if(is_sitting, -1, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"leg3.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad(-90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad( 180)+var.ls)*2)*limb_speed*var.run +(sin(torad(-90)+var.ls)*2.5*limb_speed)*var.walk, -6, 0))                        ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"leg4.ty": "( 24 +if(!is_on_ground&&is_in_water, 1 +sin(torad( 90)+limb_swing+age/2)*1.5, clamp((-1.5 +sin(torad(-135)+var.ls)*2)*limb_speed*var.run +(sin(torad( 90)+var.ls)*2.5*limb_speed)*var.walk, -6, 0))                        ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"leg1.tz": "( 7 +if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)*2, sin(torad( 0 )+var.ls)*6*limb_speed*var.run +sin(torad(-90)+var.ls)*6*limb_speed*var.walk ) +if(                   is_sitting, -10 , 0) ) * (1-0.5*var.child_scale)",
			"leg2.tz": "( 7 +if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)*2, sin(torad(-45)+var.ls)*6*limb_speed*var.run +sin(torad( 90)+var.ls)*6*limb_speed*var.walk ) +if(                   is_sitting, -10 , 0) ) * (1-0.5*var.child_scale)",
			"leg3.tz": "(    if(!is_on_ground&&is_in_water, -sin(limb_swing+age/2)*2, sin(torad( 90)+var.ls)*6*limb_speed*var.run +sin(torad(180)+var.ls)*6*limb_speed*var.walk ) +if(var.pounce==1, -2, is_sitting, -3.5, 0) ) * (1-0.5*var.child_scale)",
			"leg4.tz": "(    if(!is_on_ground&&is_in_water,  sin(limb_swing+age/2)*2, sin(torad(135)+var.ls)*6*limb_speed*var.run +sin(torad( 0 )+var.ls)*6*limb_speed*var.walk ) +if(var.pounce==1, -2, is_sitting, -3.5, 0) ) * (1-0.5*var.child_scale)"
		},
		{
			"tail2.rx": "if(!is_on_ground&&is_in_water, torad(10) -body_rotation.rx/2, (sin(torad(90)+var.ls)/3 +sin(torad(180+22.5)+var.ls)/6)*limb_speed*var.run +sin(torad(45)+var.ls)/10*limb_speed*var.walk )     +if(var.sleep==1, torad(-150), var.pounce==1, torad(30) -torad(30)*limb_speed, is_sitting, torad(-20) -body_rotation.rx, torad(-30) +torad(30)*limb_speed) +if(var.sleep==1, 0, -cos(var.b)/20)",
			"tail2.ry": "if(!is_on_ground&&is_in_water, 0                            ,                                                                              sin(torad(90)+var.ls)/6 *limb_speed*var.walk ) +if(!is_on_ground&&is_in_water, 0, var.pounce==1, 0                              , is_sitting, torad( 50 ), torad(var.hy)/6)",
			"tail2.rz": "if(                                                                                                                    var.sleep==1,      -cos(var.b)/40, var.pounce==1, -body.ry*3, is_sitting, torad(-120), torad(var.hy)/5) +if(head_pitch==0, -torad(var.hy)*limb_speed, 0)",
			"tail2.tx": "if(                                                                                                                    var.sleep==1, -1                                              , var.pounce==1, 0         , is_sitting, 0, torad(var.hy))",
			"tail2.ty": "if(                                                                                                                    var.sleep==1, 0.5                                             , var.pounce==1, 0         , is_sitting, 1, 0) -1.5",
			"tail2.tz": "if(!is_on_ground&&is_in_water, -2 +sin(limb_swing+age/2)/3, var.sleep==1, -1, var.pounce==1, 0, is_sitting, 1, (sin(torad(-90)+var.ls) +sin(torad(180+22.5)+var.ls)/2)*limb_speed*var.run -limb_speed*var.walk +sin(var.b)/6) +3"
		},
		{
			"snout.rx": "(torad(-3)+sin(var.r+age*1.5)/20) *clamp(-1.5 +sin(var.r+age/10)*4 -cos(var.r+age/23)*4, if(head_pitch!=0, 1, 0), 1)",
			"right_ear.rx": "torad( 5 +60*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Rear -1 , 0 , 1-var.pounce ) +head_pitch/4 -20*limb_speed ) +if(var.sleep==1, torad(30) +sin(var.b)/30, 0)",
			"left_ear.rx": " torad( 5 +60*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Lear -1 , 0 , 1-var.pounce ) +head_pitch/4 -20*limb_speed ) +if(var.sleep==1, torad(45) +sin(var.b)/30, 0)",
			"right_ear.ry": "torad( 2 +45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Rear -1 , 0 , 1-var.pounce ) ) +clamp(torad(var.hy)/2 +torad(45)*clamp(-8 +sin(var.r+age/87)*25, limb_speed, 1) +if(var.sleep==1, torad( 60), var.pounce==1, torad( 60), 0), torad(-5), torad(90))",
			"left_ear.ry": " torad(-2 -45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Lear -1 , 0 , 1-var.pounce ) ) +clamp(torad(var.hy)/2 -torad(45)*clamp(-8 +sin(var.r+age/87)*25, limb_speed, 1) +if(var.sleep==1, torad(-60), var.pounce==1, torad(-60), 0), torad(-90), torad(5))",
			"right_ear.rz": "torad(-10) +if(!is_on_ground&&is_in_water, 0,  sin(torad(-90)+var.ls)/6 *limb_speed*var.run +sin(torad(-135)+var.ls)/6*limb_speed*var.walk )",
			"left_ear.rz": " torad( 10) +if(!is_on_ground&&is_in_water, 0, -sin(torad(-90)+var.ls)/6 *limb_speed*var.run +sin(torad(-135)+var.ls)/6*limb_speed*var.walk )"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), clamp(-sin(hurt_time*pi/5)/3*hurt_time +2*death_time, clamp(var.count_sleep*10 -9, 0, 1), 1), 1), 2 )",
			"var.eye_top": "var.blink",
			"var.pupil_y": "clamp(head_pitch/120, -0.1, 0.4) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10",
			"var.pupil_x": "-var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )",
			"right_eye.tz": "-4 -var.distance/800",
			"left_eye.tz": "right_eye.tz",
			"right_eye.tx": "-2.5 -var.distance/3200",
			"left_eye.tx": "-right_eye.tx",
			"right_eye.sx": "1 +var.distance/1600",
			"left_eye.sx": "right_eye.sx",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tz": " -1.005 -var.distance/800",
			"l_pupil.tz": " -1.005 -var.distance/800",
			"r_pupil2.tz": "r_pupil.tz",
			"l_pupil2.tz": "l_pupil.tz",
			"r_pupil2.tx": "-1.5 -var.distance/800",
			"l_pupil2.tx": " 1.5 +var.distance/800",
			"r_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )-0.5 -var.distance/800",
			"l_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )+0.5 +var.distance/800",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )-0.5",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )-0.5",
			"r_pupil2.ty": "r_pupil.ty",
			"l_pupil2.ty": "l_pupil.ty",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil2.sy": "r_pupil.sy",
			"l_pupil2.sy": "l_pupil.sy",
			"r_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.5, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.5, 0 ), 0.5, 1 )",
			"r_pupil2.sz": "clamp( -var.pupil_x*1.5, 0, 0.75 )",
			"l_pupil2.sz": "clamp(  var.pupil_x*1.5, 0, 0.75 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"r_pupil2.visible": "r_pupil2.sy!=0 && r_pupil2.sz!=0",
			"l_pupil2.visible": "l_pupil2.sy!=0 && l_pupil2.sz!=0"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}