{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.testing": "0",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r+age/27*pi",
			"var.c": "age*8*(pi/180)",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10 -cos(death_time/6)*clamp(death_time/2, 0, 1)",
			"var.up": "var.up +abs( var.pre_posy-pos_y )",
			"var.wings": "var.r +limb_swing*1.5 +age/5*pi +var.up*2",
			"var.hold": "0.5-0.5*cos( clamp(-right_arm.rx, 0, 1)*pi )",
			"var.danceA": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15)                                                                                           , min(20, var.danceA +0.03 *frame_time*20), max(0, var.danceA -0.03 *frame_time*20)), 0, 1)",
			"var.danceC": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15) || !(between(torad(head_pitch), torad(-5), torad(5))) && between(sin(var.r+age/100), 0, 1), min(20, var.danceC +0.5  *frame_time*20), max(0, var.danceC -0.5  *frame_time*20)), 0, 1)",
			"var.danceB": "clamp(var.danceC-var.hurt, 0, 1)",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding, pos_y, pos_y*min(1,frame_time*5) +var.position*max(0,1-frame_time*5) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad(2.5) +torad(30)*limb_speed*(1-0.8*var.danceA)*(1-var.hurt) +sin(var.b-pi/2)/20 +torad(head_pitch)/4 +torad( -40 )*var.hurt +clamp( ( var.position-pos_y ), -1, 1 )",
			"body.ry": "torad(var.hy)/5            +( sin(       var.c +sin(var.c*2)/4 )*torad(20) )  *var.danceA +torad( 20*cos(limb_swing/3) )*var.hurt",
			"body.rz": "      sin(var.b/3     )/16 +( sin(       var.c                 )*torad(20) )  *var.danceA      -( sin(limb_swing/2) )/22*var.hurt",
			"body.tx": "      sin(var.b/3-pi/2)/2  +(-cos(       var.c                 )*torad(16) )*8*var.danceA",
			"body.ty": "-4 +sin(var.b  -pi/2)*sin(var.b/2.5)*(1-var.danceA) +( sin(pi/6 +var.c*2 -cos(pi/6 +var.c*2)/3) )*3*var.danceA +18*var.testing",
			"body.tz": " -sin(var.r+age/100*pi)/4",
			"head2.rx": "torad(head_pitch)/2 -sin(var.b-pi/2)/20 -torad(2.5) -torad(30)*limb_speed +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt -clamp( ( var.position-pos_y ), -1, 1 )/1.3",
			"head2.ry": "torad(var.hy)/1.6 +(-sin(       var.c +sin(var.c*2)/4 )*torad(34) )*var.danceA          +sin(limb_swing/2.5)  *var.hurt",
			"head2.rz": "-sin(var.b/3)/16    +(-sin(-pi/4 +var.c               )*torad(14) )*var.danceA",
			"head2.ty": "-6.1 -limb_speed/2             *(1-0.8*var.danceA)*(1-var.hurt)            +clamp((-0.5 -sin(limb_swing/2)/2 )*var.hurt, 0, 1)",
			"head2.tz": "     -limb_speed*1.1           *(1-0.8*var.danceA)*(1-var.hurt)",
			"body2.rx": "    -sin(var.b       )/16",
			"body2.rz": "     sin(var.b/3-pi/2)/10*(1-var.danceA) +( -cos(var.c )*torad(6) )  *var.danceA",
			"body2.sy": "1   +sin(var.b*7.3   )/60 +cos(var.b*5.3)/60*0",
			"render.leash_offset_x": " ( body.tx -(cos(var.c)*16*(pi/180)))/16",
			"render.leash_offset_y": "-( body.ty + cos(age*9*(pi/180))*0.25*(1-min(limb_swing/0.3, 1)) -0.5 )/16",
			"render.leash_offset_z": "-( body.tz )/16"
		},
		{
			"right_arm.rx": "                                          (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(- 5), 0 ) +torad(var.hy)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
			"left_arm.rx": "                                           (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(- 5), 0 ) -torad(var.hy)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
			"right_arm.ry": "  torad( 15)                             +( sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad(-10)*limb_speed +if(is_riding, torad(-10), 0 )                    )*(1-var.hold)    +( -torad( 5) )*var.hold",
			"left_arm.ry": "   torad(-15)                             +(-sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad( 10)*limb_speed +if(is_riding, torad( 10), 0 )                    )*(1-var.hold)    +(  torad( 5) )*var.hold",
			"right_arm.rz": "-(torad(-40*(1-limb_speed*(1-var.hold))) +(-sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad(-10)*limb_speed +if(is_riding, torad( 20), 0 )                    )*(1-var.hold))/2 +( -torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
			"left_arm.rz": " -(torad( 40*(1-limb_speed*(1-var.hold))) +( sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad( 10)*limb_speed +if(is_riding, torad(-20), 0 )                    )*(1-var.hold))/2 +(  torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
			"right_arm.tx": "-2  +body.tx*(var.testing) +(  0.2 )*limb_speed       +(  0.15 )*var.hold +if(is_riding,  0.15*(1-var.hold), 0)",
			"left_arm.tx": "  2  +body.tx*(var.testing) +( -0.2 )*limb_speed       +( -0.15 )*var.hold +if(is_riding, -0.15*(1-var.hold), 0)",
			"right_arm.ty": "0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
			"left_arm.ty": " 0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold -( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
			"right_arm.tz": "0.2                                                   +( -0.5  )*var.hold +(body.ry*2)*var.danceA",
			"left_arm.tz": " 0.2                                                   +( -0.5  )*var.hold -(body.ry*2)*var.danceA"
		},
		{
			"right_wing2.rz": "(-cos(var.wings)/3)*(1-var.danceA) +( sin(pi/4+var.c*2  )*torad(10) )*var.danceA",
			"left_wing2.rz": "-right_wing2.rz",
			"right_wing2.ry": "-pi/2 +torad(50) -sin(var.wings +cos(var.wings)/2*clamp(2-limb_speed*4, 0, 1))/2*(1-var.danceA) +torad(8.8)*clamp(1+limb_speed, 0, 1.2) +( -torad(15) +cos(var.c*2 -cos(pi/4+var.c*2)*1.5 )*torad(40) )*var.danceA",
			"left_wing2.ry": "-right_wing2.ry",
			"right_wing2.rx": "(torad(15) -sin(var.wings)/6*clamp(1-limb_speed*2, 0, 1))*(1-var.danceA) +( cos(var.c*2 +sin(var.c*2) )*torad(25) +torad(15) )*var.danceA",
			"left_wing2.rx": "right_wing2.rx",
			"right_wing2.tx": "(-0.85 -sin(pi/3+var.wings)/3 )*(1-var.danceA) -( 0.5 )*var.danceA",
			"left_wing2.tx": "                 -right_wing2.tx*(1-var.danceA) +( 0.5 )*var.danceA"
		},
		{
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"right_eye.sx": "1 +clamp( (1 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), clamp(var.hurt*3 +death_time, 0, 1), 1 )/2*(1-var.danceB) +clamp(25 +sin(var.r +age/47)*40, 0, 1)/2*var.danceB",
			"left_eye.sx": "right_eye.sx",
			"right_eye.sy": "1 -pow( clamp(1.5 -abs(sin(var.r+age/7)*6), clamp(var.hurt*3 +death_time, 0, 1), 1)*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, clamp(var.hurt*3 +death_time, 0, 0.9), 0.9), 2 )*(1-var.danceB) -clamp(25 +sin(var.r +age/47)*40, 0, 0.7)*var.danceB",
			"left_eye.sy": "right_eye.sy",
			"right_eye.tx": "-0.5 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(var.hy)/8, -0.2, 0.2 )",
			"left_eye.tx": "right_eye.tx +1",
			"right_eye.ty": "-1.9 +(-clamp(-8 +sin(var.r +age/47)*40, 0, 0.7) )/2.5*var.danceB +0.5*clamp(var.hurt*3 +death_time, 0, 1)",
			"left_eye.ty": "right_eye.ty",
			"eyes.tz": "-2.5 -var.distance",
			"right_eye.tz": "eyes.tz",
			"left_eye.tz": "eyes.tz",
			"right_eye.visible": "( if( right_eye.sy<=0.31, 0.2, 0 )*var.danceB )==0",
			"left_eye.visible": " ( if(  left_eye.sy<=0.31, 0.2, 0 )*var.danceB )==0",
			"eyes.visible": "( if( right_eye.sy>0.31, 0.2, 0 )*var.danceB +0.2*(1-var.danceB) )==0"
		},
		{
			"var.pre_posy": "pos_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}