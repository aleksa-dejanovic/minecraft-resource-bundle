{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.r": "pi*random(id)*4",
			"var.b": "var.r +age/if(is_child, 45, 80)*pi*2",
			"var.ls": "var.r +limb_swing/1.2/if(is_child, 3, 1)",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "torad(head_pitch)/1.4 +cos(var.ls*2)/8*limb_speed/1.3 +torad(5 +clamp(-5*limb_speed*3,-5, 0)) -cos(var.b)/40 -sin(pi*2*swing_progress)/3 +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
			"head.ry": "torad(var.hy)/1.2 +sin(limb_swing/2.5)*var.hurt",
			"head.rz": "torad(var.hy)/8  +sin(pi/4+var.ls)/15*limb_speed/1.3",
			"head.tx": "                 -sin(     var.ls)   *limb_speed/1.3/if(is_child, 1.5, 1) * (1-0.5*var.child_scale)",
			"head.ty": "( 0.5 +( sin(var.b)/4 -sin(torad(if(is_child||limb_speed>=0.6, -45, 45))+var.ls*2 +if(is_child||limb_speed>=0.6, 0, -cos(var.ls*2)/3))*if(is_child, 2, 1.5)*limb_speed)/if(is_child, 1.5, 1) +if(is_child, -1*limb_speed, 0) +sin(pi*swing_progress)*2 +( -sin(limb_swing/2)/2 -0.5 )*var.hurt ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"head.tz": "(      (-sin(var.b)/4 +sin(-pi*swing_progress)*2 )/if(is_child, 1.5, 1) ) * (1-0.5*var.child_scale)",
			"body.rx": "sin(var.b)/40 +clamp(torad(5)*limb_speed, -pi/4, torad(50)) +sin(pi*swing_progress)/3 +torad( -3 -10*sin(limb_swing/2) )   *var.hurt",
			"body.ry": "sin(pi/4+var.ls)/10*limb_speed/1.3 +torad(var.hy)/6                                   +torad(     20*cos(limb_swing/3) )   *var.hurt",
			"body.rz": "head.rz -torad(var.hy)/8 -sin(pi/4+var.ls)/10*limb_speed/1.3                               -(        sin(limb_swing/2) )/22*var.hurt",
			"body.tx": "head.tx",
			"body.ty": "head.ty*if(is_child, 1.3, 1) +if(is_child, -3.75, 0)*var.child_scale",
			"body.tz": "head.tz",
			"headwear.rx": "head.rx",
			"headwear.ry": "head.ry",
			"headwear.rz": "head.rz",
			"headwear.tx": "head.tx*if(is_child, 1.5, 1)",
			"headwear.ty": "head.ty*if(is_child, 1.5, 1)",
			"headwear.tz": "head.tz*if(is_child, 1.5, 1)",
			"headwear.sx": "if(is_child, 1.5, 1)",
			"headwear.sy": "headwear.sx",
			"headwear.sz": "headwear.sx"
		},
		{
			"right_arm.rx": "torad(-10) +torad(var.hy)/8 -sin(var.ls)/6*limb_speed/1.3 -sin(var.ls*2)/6*limb_speed/1.3 +clamp(torad(-120)*limb_speed*2, torad(-70), 0) +sin(-pi/3+var.b)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
			"left_arm.rx": " torad(-10) -torad(var.hy)/8 +sin(var.ls)/6*limb_speed/1.3 -sin(var.ls*2)/6*limb_speed/1.3 +clamp(torad(-120)*limb_speed*2, torad(-70), 0) +sin(-pi/3+var.b)/20 -sin(pi*swing_progress*2) +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
			"right_arm.ry": "clamp(-(var.hy/65)*right_arm.rx, -pi/4, pi/4) +torad(-5 +25)*limb_speed +cos(var.b)/20 +sin(-pi/2*swing_progress*2)/4",
			"left_arm.ry": " clamp(-(var.hy/65)* left_arm.rx, -pi/4, pi/4) +torad( 5 -25)*limb_speed -cos(var.b)/20 -sin(-pi/2*swing_progress*2)/4",
			"right_arm.rz": "torad(if(is_in_water, 15, 5)) +clamp(-torad(head_pitch)/8, 0, pi/4) -sin(pi*swing_progress)/2",
			"left_arm.rz": " torad(if(is_in_water,-15,-5)) +clamp( torad(head_pitch)/8,-pi/4, 0) +sin(pi*swing_progress)/2",
			"right_arm.tx": "-5 * (1-0.5*var.child_scale) +body.tx",
			"left_arm.tx": "  5 * (1-0.5*var.child_scale) +body.tx",
			"right_arm.ty": "( 2.5 -limb_speed +sin(var.b-pi/3)/5 ) * (1-0.5*var.child_scale) +body.ty",
			"left_arm.ty": " ( 2.5 -limb_speed +sin(var.b-pi/3)/5 ) * (1-0.5*var.child_scale) +body.ty",
			"right_arm.tz": "( -sin(var.b)/4 +torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*var.child_scale)",
			"left_arm.tz": " ( -sin(var.b)/4 -torad(var.hy) -sin(pi*swing_progress)*4 ) * (1-0.5*var.child_scale)"
		},
		{
			"right_leg.rx": "if(is_riding, -torad(85), sin(var.b)/40 +sin(var.ls)/6/1.2 +sin(var.ls)/1.2/if(is_child, 1.5, 1.5)*limb_speed +clamp(-cos(pi/8+var.ls)/3/1.2*clamp(limb_speed*1.5, 0, 1), 0, pi/6) +torad(7)*limb_speed +if(is_child, torad(2), 0)) -torad(var.hy)/30 +sin(-pi*swing_progress)/6 +torad(-40 -20*sin(limb_swing/2) )*var.hurt",
			"left_leg.rx": " if(is_riding, -torad(85), sin(var.b)/40 -sin(var.ls)/6/1.2 -sin(var.ls)/1.2/if(is_child, 1.5, 1.5)*limb_speed +clamp( cos(pi/8+var.ls)/3/1.2*clamp(limb_speed*1.5, 0, 1), 0, pi/6) +torad(7)*limb_speed +if(is_child, torad(2), 0)) +torad(var.hy)/30 +sin(-pi*swing_progress)/6 +torad(-40 +20*sin(limb_swing/2) )*var.hurt",
			"right_leg.ry": "if(is_riding,  torad(20), torad( 5)) +if(is_child, torad( 5)*clamp(1-limb_speed*3, 0, 1), 0)",
			"left_leg.ry": " if(is_riding, -torad(20), torad(-5)) +if(is_child, torad(-5)*clamp(1-limb_speed*3, 0, 1), 0)",
			"right_leg.rz": "if(is_riding,          0, torad( 2)) +if(is_child,  sin(var.b)/100, 0) +torad(-sin(limb_swing/2) +5)*var.hurt",
			"left_leg.rz": " if(is_riding,          0, torad(-2)) +if(is_child, -sin(var.b)/100, 0) +torad( sin(limb_swing/2) -5)*var.hurt",
			"right_leg.tx": "( -2 +(-sin(var.ls)*limb_speed)/if(is_child, 1.5, 1) ) * (1-0.5*var.child_scale)",
			"left_leg.tx": " (  2 +(-sin(var.ls)*limb_speed)/if(is_child, 1.5, 1) ) * (1-0.5*var.child_scale)",
			"right_leg.ty": "( 12.2 +clamp( sin(pi/2+var.ls)*3*limb_speed +(head.ty-if(is_child, 12, 0)*var.child_scale)*limb_speed, -4, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"left_leg.ty": " ( 12.2 +clamp(-sin(pi/2+var.ls)*3*limb_speed +(head.ty-if(is_child, 12, 0)*var.child_scale)*limb_speed, -4, 0) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"right_leg.tz": "( clamp((sin( pi/2+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1)*if(is_child, 0.5, 0.7) +if(is_child, -0.5, -0.2) +if(is_riding, 0, -sin(var.b)/3) +torad(var.hy)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*var.child_scale)",
			"left_leg.tz": " ( clamp((sin(-pi/2+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1)*if(is_child, 0.5, 0.7) +if(is_child, -0.5, -0.2) +if(is_riding, 0, -sin(var.b)/3) -torad(var.hy)/2 +sin(pi*swing_progress)*2 +( -1 -sin(limb_swing/2) )*var.hurt ) * (1-0.5*var.child_scale)"
		},
		{
			"nose.rx": " sin(var.ls*2)/4*limb_speed/1.3 +clamp(-head.rx/1.5, -pi/4, 0)",
			"nose.rz": "clamp( -sin(-pi/4+var.ls  )/4*limb_speed/1.3 -torad(var.hy)/6 +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4 )/2",
			"brow.rz": "torad(clamp( var.hy/6, -10, 10))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(limb_swing/1.5)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"brow.ty": "      -0.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, 0 )*1.2 +(clamp(-torad(var.hy)/2, -0.5, 0) +clamp( torad(var.hy)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(is_child, -0.75, 0)*clamp(limb_speed*6, 0, 1) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/6",
			"right_brow.ty": "-0.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(1 -sin(var.r+age /110)*4, -0.3, 0 ) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, -0.3*clamp(sin(var.r+age/73)*3, 0, 1))*1.2 +clamp(-torad(var.hy)/2, -0.5, 0.2)*(0.3+0.7*random(id))*clamp(-sin(var.r+age/80)*6, 0, 1) +(clamp(-torad(var.hy)/2, -0.5, 0) +clamp( torad(var.hy)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))",
			"left_brow.ty": " -0.5 +if(is_child, -0.25*clamp(cos(var.r+age/120)*10, 0, 1), 0) +clamp(1 -sin(var.r+age /110)*4, -0.3, 0 ) +clamp(head_pitch/30*(1 -2*clamp(sin(var.r+age/73)*3, 0, 1)), -0.8, -0.3*clamp(sin(var.r+age/73)*3, 0, 1))*1.2 +clamp( torad(var.hy)/2, -0.5, 0.2)*(0.3+0.7*random(id))*clamp(-sin(var.r+age/80)*6, 0, 1) +(clamp(-torad(var.hy)/2, -0.5, 0) +clamp( torad(var.hy)/2, -0.5, 0))*clamp(-sin(var.r+age/80)*6, 0, 1) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))",
			"right_brow.rz": "                                                                 clamp(   sin(var.r+age /110), 0, torad( 5)) -torad(5*random(id))/2*clamp(-4 +sin(var.r +age/97)*8, 0, 1)",
			"left_brow.rz": "                                                                  clamp(  -sin(var.r+age /110), torad(-5), 0) +torad(5*random(id))/2*clamp(-4 +sin(var.r +age/97)*8, 0, 1)"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eyes_top": "clamp(head_pitch/60, -0.2 -0.6*random(id), 0.3*random(id)) +(-1.5 -cos(limb_swing/3)/2)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +if(is_child, -0.25*clamp(limb_speed*6, 0, 1), 0) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/3",
			"var.pupil_y": " clamp(head_pitch/80, -0.3 -0.2*random(id), 0.5)/(1 +clamp(sin(var.r+age/73)*3, 0, 1)*2) +clamp(sin(var.r+age/38) +sin(var.r+age/13), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)    +(-1.5 -cos(limb_swing/3)/2)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -if(between(random(id), 0, 0.2), -torad(10)*clamp(sin(limb_speed*3), 0, 1), 0) +clamp(-8 +cos(var.r +age/40)*12, 0, 1)/6 +if(is_child, -0.25*clamp(limb_speed*6, 0, 1), 0)",
			"var.pupil_x": "          -var.hy/(80 +160)                                                              +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"var.r_pupil_x": "var.pupil_x +(-sin(pi/4+var.r+age/10)*3 -0.3 )*clamp(var.nov1*4, 0, 1) -0.3*var.scared",
			"var.l_pupil_x": "var.pupil_x +(-sin(pi/4+var.r+age/10)*3 +0.3 )*clamp(var.nov1*4, 0, 1) +0.3*var.scared",
			"r_eye_white.sy": "clamp(1 -var.eyes_top, 0, 3 )",
			"l_eye_white.sy": "clamp(1 -var.eyes_top, 0, 3 )",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.r_pupil_x+1,  0, 1 )-2",
			"l_pupil.tx": "clamp( var.l_pupil_x-1, -1, 0 )+2",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4 +0.6*var.scared, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4 +0.6*var.scared, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4 +0.6*var.scared, clamp( -var.pupil_y+1, 0.5 +0.5*var.scared, 1 ) ) -0.2*var.scared, r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4 +0.6*var.scared, clamp( -var.pupil_y+1, 0.5 +0.5*var.scared, 1 ) ) -0.2*var.scared, l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.r_pupil_x, -0.2, 0 )*(1-var.scared) -0.2*var.scared, 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.l_pupil_x, -0.2, 0 )*(1-var.scared) -0.2*var.scared, 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) )-3, 0, 128 )",
			"face.tz": "-4 -var.distance/500",
			"r_pupil.tz": "-var.distance/500",
			"l_pupil.tz": "-var.distance/500",
			"brow.tz": "-var.distance/400",
			"right_brow.tz": "brow.tz",
			"left_brow.tz": "brow.tz"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}