{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.r": "pi*random(id)*4",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "(head_pitch/57.5)/1.5 -torad(15)*limb_speed +if(!is_riding&&!is_on_ground&&is_in_water, torad(-10), 0)",
			"head.ry": "( var.hy /57.5)/1.8 -sin(torad(180)+limb_swing/1.2)/5*limb_speed/1.3 +head.rz",
			"head.rz": "0",
			"head.tx": "                                         sin(torad( 45)+limb_swing/1.2)    *limb_speed/1.3",
			"head.ty": "if(!is_riding&&!is_on_ground&&is_in_water, 12, 0.3) +sin(torad(135)+limb_swing/0.6)*1.5*limb_speed/1.3 +sin((limb_swing/2+age)/70*pi*2)/4 +if(is_riding, -2, 0)",
			"head.tz": "              sin((limb_swing/2+age)/70*-pi*2)/4 +(-0.4*limb_speed)",
			"head2.rx": "    head.rx +sin((limb_swing/2+age)/70*-pi*2)/40",
			"head2.ry": "    head.ry",
			"head2.rz": "    head.rz -sin(torad( 45)+limb_swing/1.2)/15 *limb_speed/1.3",
			"body.rx": "((sin((limb_swing/2+age)/70*pi*2)/40)*(1-limb_speed)) +torad(5)*limb_speed",
			"body.ry": "sin(torad(180)+limb_swing/1.2)/5*limb_speed/1.3 +(var.hy/57.5)/6",
			"body.rz": "head.rz +sin(torad( 45)+limb_swing/1.2)/15 *limb_speed/1.3",
			"body.tx": "head.tx",
			"body.ty": "head.ty",
			"body.tz": "head.tz"
		},
		{
			"right_arm.tx": "-5 +body.tx -(var.hy/57.5)/2",
			"left_arm.tx": "  5 +body.tx +(var.hy/57.5)/2",
			"right_arm.ty": "2 +body.ty +sin((limb_swing/2+age)/80*pi*2-torad(60))/5",
			"left_arm.ty": " 2 +body.ty +sin((limb_swing/2+age)/80*pi*2-torad(60))/5",
			"right_arm.tz": "(-2*limb_speed) +sin((limb_swing/2+age)/80*-pi*2)/4 +(var.hy/57.5) +sin((limb_swing/2+age)/15*pi*2-torad(45))*1",
			"left_arm.tz": " (-2*limb_speed) +sin((limb_swing/2+age)/80*-pi*2)/4 -(var.hy/57.5) -sin((limb_swing/2+age)/15*pi*2+torad(45))*1"
		},
		{
			"arms.rx": "if(!is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12  *pi+torad(180))/10, 0) +sin(torad( 0 )+limb_swing/0.6)/4*limb_speed/1.3 +torad(-45) +sin((limb_swing/2+age)/70*pi*2-torad(90))/50 +(torad(-15)*limb_speed)",
			"arms.ry": "if(!is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12/2*pi+torad(180))/10, 0) + +if(limb_speed>=0.8, sin(torad( 45)+limb_swing/1.2)/4*limb_speed, 0) +(var.hy/57.5)/6",
			"arms.rz": "-body.rz/4",
			"arms.tx": " head.tx",
			"arms.ty": "if(!is_riding&&!is_on_ground&&is_in_water, 15.5, 3.5) +sin((limb_swing/2+age)/70*pi*2-torad(60))/5 +sin(torad(90)+limb_swing/0.6)*1.5*limb_speed/1.3 +if(is_riding, -2, 0)",
			"arms.tz": "-1.5 +sin((limb_swing/2+age)/70*-pi*2)/4 +(-0.8*limb_speed)"
		},
		{
			"right_leg.rx": "if(is_riding, torad(-80), !is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12*pi+torad( 0 ))/1.5, ((sin((limb_swing/2+age)/80*pi*2)/40)*(1-limb_speed)) +sin(torad( 0 )+limb_swing/1.2)*limb_speed/1.3 +torad(10)*limb_speed) -(var.hy/57.5)/30",
			"left_leg.rx": " if(is_riding, torad(-80), !is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12*pi+torad(180))/1.5, ((sin((limb_swing/2+age)/80*pi*2)/40)*(1-limb_speed)) +sin(torad(180)+limb_swing/1.2)*limb_speed/1.3 +torad(10)*limb_speed) +(var.hy/57.5)/30",
			"right_leg.ry": "clamp(torad( 2 )-limb_speed, 0, torad( 2 )) +if(is_riding, torad( 20), 0)",
			"left_leg.ry": " clamp(torad(-5 )+limb_speed, torad(-5 ), 0) +if(is_riding, torad(-20), 0)",
			"right_leg.rz": "clamp(torad( 1 )-limb_speed, 0, torad( 1 ))",
			"left_leg.rz": " clamp(torad(-1 )+limb_speed, torad(-1 ), 0)",
			"right_leg.tx": "-2",
			"left_leg.tx": "  2",
			"right_leg.ty": "0.2 +clamp(12 +(sin(torad( 90)+limb_swing/1.2)*3)*limb_speed +(1*limb_speed), 0, 12.2) +if(is_riding, -2, if(!is_riding&&!is_on_ground&&is_in_water, head.ty, 0))",
			"left_leg.ty": " 0.2 +clamp(12 +(sin(torad(-90)+limb_swing/1.2)*3)*limb_speed +(1*limb_speed), 0, 12.2) +if(is_riding, -2, if(!is_riding&&!is_on_ground&&is_in_water, head.ty, 0))",
			"right_leg.tz": "sin(torad(180)+limb_swing/1.2)*1.2*limb_speed +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/3) +(var.hy/57.5)/2",
			"left_leg.tz": " sin(torad( 0 )+limb_swing/1.2)*1.2*limb_speed +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/3) -(var.hy/57.5)/2"
		},
		{
			"nose2.rx": "      cos(limb_swing/1.2*2)/8*limb_speed +clamp(-torad(head_pitch)/3, -pi/4, pi/40) +(-cos(limb_swing/2)/4 -torad(20))*2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"nose2.rz": "clamp(cos(limb_swing/1.2  )/6*limb_speed -torad(var.hy)/6*clamp(2-limb_speed*4, -1.5, 0) +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)/2 -head2.rz/2",
			"var.blink": "pow( clamp(( 1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1), 2 )",
			"right_brow.ty": "-0.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   ) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp(-torad(var.hy)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*0.6 -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(limb_speed>0.9, sin(pi/4+limb_swing/1.2*2)/4*limb_speed*(1+random(sin(id))), 0)",
			"left_brow.ty": " -0.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   ) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp( torad(var.hy)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*0.6 -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(limb_speed>0.9, sin(     limb_swing/1.2*2)/4*limb_speed*(1+random(cos(id))), 0)",
			"right_brow.rz": "      clamp( sin(var.r+age /110), 0, torad( 5))",
			"left_brow.rz": "       clamp(-sin(var.r+age /110), torad(-5), 0)",
			"mouth.sy": "1    -0.25*clamp(-4 -sin(var.r+age/137)*28,  0, 1 )",
			"var.eye_top": "(clamp(head_pitch/60, -0.8, 0.5) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) )*(1-var.blink) +var.blink",
			"var.pupil_y": " clamp(head_pitch/80, -0.5, 0.5) +var.eye_top/2 -(-torad(5 +15*random(id))*clamp(sin(limb_speed*3), 0, 1) ) +(-1 -cos(limb_swing/3)/2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"var.pupil_x": "-var.hy/80"
		},
		{
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )-2",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )+2",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) )-3, 0, 128 )",
			"face.tz": "-4 -var.distance/700",
			"r_pupil.tz": "-var.distance/700",
			"l_pupil.tz": "-var.distance/700",
			"right_brow.tz": "-var.distance/650",
			"left_brow.tz": " -var.distance/650"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}