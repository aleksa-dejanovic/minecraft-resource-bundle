{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw  -15*sin( var.r+age/16 +cos( var.r*2+age/8 )/1.7 )*var.Nlook,-90,90)",
			"var.a": "1",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r +age/9",
			"var.ls": "var.r +limb_swing/2",
			"var.swls": "var.r +limb_swing/3",
			"var.swim": "clamp(if(                                                                              is_in_water, min(20, var.swim +0.2 *frame_time*20), max(0, var.swim -0.2 *frame_time*20)), 0, 1)",
			"var.jump": "clamp(if(var.swim==0&&!is_riding&&!is_on_ground&&right_leg.rx>torad(40)||!is_riding&&!is_on_ground, min(20, var.jump +0.3 *frame_time*20), max(0, var.jump -0.3 *frame_time*20)), 0, 1)",
			"var.NAlook": " clamp( if( varb.fcc, var.NAlook, limb_speed!=1 && is_on_ground && ( -7 +sin(var.r +(age+limb_swing)/88 )*8 )>0, var.NAlook +1.6 *frame_time, var.NAlook -1.6 *frame_time ), 0, 1 )",
			"var.Nlook": "0.5-0.5*cos( var.NAlook*pi )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding, pos_y, pos_y*min(1,frame_time*6) +var.position*max(0,1-frame_time*6) )",
			"var.tilt": "clamp( var.position-pos_y, -pi/3, pi/3 )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body2.rx": "(cos(var.b)/40 -torad(5) -(cos(var.swls)/10)*clamp(limb_speed, 0, 1))*var.swim   +((sin(var.b)/10)*var.jump +(sin(torad(20)+var.b*2)/80 +( sin(var.ls*2     )/14 -torad(3))*clamp(0.5+(limb_speed*2), 0, 1 -0.3*clamp(-3+limb_speed*4, 0, 1)))*(1-var.jump) )*(1-var.swim) +clamp(torad(head_pitch)/3, -pi/8, pi/8) +var.tilt/1.5",
			"body2.ry": "                                                                                 +(                          (                           ( sin(var.ls +cos(var.ls*2)/4)/16)*clamp(     limb_speed*3 , 0, 1 -0.3*clamp(-3+limb_speed*4, 0, 1)))*(1-var.jump) )*(1-var.swim) +clamp(torad(var.hy)/2, -torad(20), torad(20))",
			"body2.rz": "                                                                                  ((cos(var.b)/20)*var.jump +(                           (-cos(var.ls +cos(var.ls*2)/4)/10)*clamp(     limb_speed*3 , 0, 1 -0.3*clamp(-3+limb_speed*4, 0, 1)))*(1-var.jump) )*(1-var.swim) +torad(-10)*sin( pi/6 +var.r+age/16 +sin( var.r*2+age/8 )/1.5 )*var.Nlook",
			"body2.ty": "-3                             +(sin(var.b)/2)*var.swim                          +(                          (sin(          var.b*2)/8  +( sin(torad(-45)+var.ls*2)/3 -0.5)*clamp(0.5+(limb_speed*2), 0, 1 -0.3*clamp(-3+limb_speed*4, 0, 1)))*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, pi/4) +clamp(torad(head_pitch), -pi/4, pi/4)",
			"body2.tz": "(-(cos(var.swls))*4*clamp(limb_speed, 0, 1))*var.swim +clamp(-torad(head_pitch), -pi/4, pi/4)",
			"head2.rx": "head.rx/1.2 +if(is_on_ground, (sin(var.ls/2)/20 +torad(-10))*clamp(-3+limb_speed*4, 0, clamp(sin(var.r+age/26)*2, 0, 1-croaking_body.sx)) +clamp(sin(var.r+age/2 +sin(var.r+age/2*2)/3)/6, -1, 0)*clamp(-159+sin(var.r+age/128)*160, 0, 1), 0)*(1-var.swim)",
			"head2.sx": "if(head2.rx!=0, 1.002, 1)",
			"body.rx": "0",
			"body.ry": "0",
			"body.rz": "0"
		},
		{
			"right_arm.rx": "(-torad(20) +cos(var.b)/8 +(cos(var.swls -sin(var.swls))*1.3 +torad(20))*clamp(limb_speed, 0, 1) +var.tilt)*var.swim +( (torad(20) +cos(var.b)/3)*var.jump +(( sin(var.ls) -torad(10) )*clamp(limb_speed*3, 0, 1)*clamp(-cos(var.ls), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_arm.rx": " (-torad(20) +cos(var.b)/8 +(cos(var.swls -sin(var.swls))*1.3 +torad(20))*clamp(limb_speed, 0, 1) +var.tilt)*var.swim +( (torad(20) -cos(var.b)/3)*var.jump +((-sin(var.ls) -torad(10) )*clamp(limb_speed*3, 0, 1)*clamp( cos(var.ls), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"right_arm.ry": "( torad(15) +(cos(var.swls) -torad(60))/4*clamp(limb_speed, 0, 1))*var.swim +(-torad(10)*var.jump +(-torad(7)*clamp(1-limb_speed*3, 0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_arm.ry": " (-torad(15) -(cos(var.swls) -torad(60))/4*clamp(limb_speed, 0, 1))*var.swim +( torad(10)*var.jump +( torad(7)*clamp(1-limb_speed*3, 0, 1))*(1-var.jump) )*(1-var.swim)",
			"right_arm.rz": "  torad(20)*var.swim +( ( var.tilt/3 +cos(pi/4+var.b)/6)*var.jump +(clamp(-cos(var.ls)/3 *clamp(limb_speed*3, 0, 1),  0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_arm.rz": "  -torad(20)*var.swim +( (-var.tilt/3 +cos(pi/4+var.b)/6)*var.jump +(clamp(-cos(var.ls)/3 *clamp(limb_speed*3, 0, 1), -1, 0))*(1-var.jump) )*(1-var.swim)",
			"right_arm.tx": "-4.3 +( 0.5*var.jump )*(1-var.swim)",
			"left_arm.tx": "  4.3 +(-0.5*var.jump )*(1-var.swim)",
			"right_arm.ty": "21 -0.2 +(0.7 +sin(-pi/4+var.b)/2)*var.swim +( 1*var.jump +(clamp( cos(var.ls)*1.5*clamp(limb_speed*3, 0, 1), -1.3, 0))*(1-var.jump) )*(1-var.swim) +var.tilt*1.5 -22*var.a",
			"left_arm.ty": " 21 -0.2 +(0.7 +sin(-pi/4+var.b)/2)*var.swim +( 1*var.jump +(clamp(-cos(var.ls)*1.5*clamp(limb_speed*3, 0, 1), -1.3, 0))*(1-var.jump) )*(1-var.swim) +var.tilt*1.5 -22*var.a",
			"right_arm.tz": "-3 +(body2.tz +(sin(torad(45)+var.swls +cos(torad(45)+var.swls)))*clamp(limb_speed, 0, 1))*var.swim +( ((asin( sin(var.ls))*pi/5*2.2 -0.5)*clamp(0.5+(limb_speed*2), 0, 1))*(1-var.jump) )*(1-var.swim) -4*var.a",
			"left_arm.tz": " -3 +(body2.tz +(sin(torad(45)+var.swls +cos(torad(45)+var.swls)))*clamp(limb_speed, 0, 1))*var.swim +( ((asin(-sin(var.ls))*pi/5*2.2 -0.5)*clamp(0.5+(limb_speed*2), 0, 1))*(1-var.jump) )*(1-var.swim) -4*var.a",
			"right_hand.rx": "(torad(11) -sin(var.b)/5 +(sin(var.swls -sin(var.swls))/1.5 +torad(40))*clamp(limb_speed, 0, 1))*var.swim +( (torad(20) -var.tilt +sin(var.b)/2)*var.jump +((-cos(var.ls)*2 -pi/2 )*clamp(limb_speed*3, 0, 1)*clamp(-cos(var.ls), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_hand.rx": " (torad(11) -sin(var.b)/5 +(sin(var.swls -sin(var.swls))/1.5 +torad(40))*clamp(limb_speed, 0, 1))*var.swim +( (torad(20) -var.tilt -sin(var.b)/2)*var.jump +(( cos(var.ls)*2 -pi/2 )*clamp(limb_speed*3, 0, 1)*clamp( cos(var.ls), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"right_hand.ry": "( torad(40)*var.jump +( torad(7)*clamp(1-limb_speed*3, 0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_hand.ry": " (-torad(40)*var.jump +(-torad(7)*clamp(1-limb_speed*3, 0, 1))*(1-var.jump) )*(1-var.swim)",
			"right_hand.rz": "(-right_arm.rz*(1-var.jump) )*(1-var.swim)",
			"left_hand.rz": " (- left_arm.rz*(1-var.jump) )*(1-var.swim)",
			"right_arm2.rx": "( (-sin(pi/9+var.b*2)/40 +clamp(( sin(var.ls) -1 )/6*clamp(0.5+(limb_speed*2), 0, 1), -2, 2))*(1-var.jump) )*(1-var.swim) +clamp(-torad(var.hy)/2, -torad(20), torad(20)) +clamp(torad(head_pitch), -pi/4, 0)/6",
			"left_arm2.rx": " ( (-sin(pi/9+var.b*2)/40 +clamp((-sin(var.ls) -1 )/6*clamp(0.5+(limb_speed*2), 0, 1), -2, 2))*(1-var.jump) )*(1-var.swim) +clamp( torad(var.hy)/2, -torad(20), torad(20)) +clamp(torad(head_pitch), -pi/4, 0)/6",
			"right_arm2.rz": "( (-body2.ry +clamp(torad(var.hy)/2, -torad(20), torad(20)))*(1-var.jump) )*(1-var.swim) +clamp(-torad(var.hy)/2, -torad(20), torad(20))",
			"left_arm2.rz": " ( (-body2.ry +clamp(torad(var.hy)/2, -torad(20), torad(20)))*(1-var.jump) )*(1-var.swim) +clamp(-torad(var.hy)/2, -torad(20), torad(20))",
			"right_arm2.sx": "1 +( ( sin(pi/9+var.b*2)/24/2)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, pi/4)/6",
			"left_arm2.sx": " 1 +( ( sin(pi/9+var.b*2)/24/2)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, pi/4)/6",
			"right_arm2.sy": "1 +( (-sin(pi/9+var.b*2)/24  )*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, pi/4)/4",
			"left_arm2.sy": " 1 +( (-sin(pi/9+var.b*2)/24  )*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, pi/4)/4",
			"right_arm2.sz": "1 +( ( sin(pi/9+var.b*2)/24/2)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, pi/4)/6",
			"left_arm2.sz": " 1 +( ( sin(pi/9+var.b*2)/24/2)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, pi/4)/6"
		},
		{
			"right_leg.rx": "(-torad(10) +cos(var.b)/8 +(cos(var.swls -sin(var.swls))/1.5 -torad(20))*clamp(limb_speed, 0, 1))*var.swim +( (torad(10) -sin(var.b)/4)*var.jump +(( cos(torad(40-20)+var.ls)/1.1 )*clamp(limb_speed*3, 0, 1)*clamp( sin(torad(40-20)+var.ls), 0, 1))*(1-var.jump) )*(1-var.swim) +var.tilt*if(is_in_water, 1, 1.5)",
			"left_leg.rx": " (-torad(10) -cos(var.b)/8 +(cos(var.swls -sin(var.swls))/1.5 -torad(20))*clamp(limb_speed, 0, 1))*var.swim +( (torad(10) +sin(var.b)/4)*var.jump +((-cos(torad(40-20)+var.ls)/1.1 )*clamp(limb_speed*3, 0, 1)*clamp(-sin(torad(40-20)+var.ls), 0, 1))*(1-var.jump) )*(1-var.swim) +var.tilt*if(is_in_water, 1, 1.5)",
			"right_leg.ry": "(-torad(20) +torad(30)*clamp(limb_speed, 0, 1))*var.swim +( (-torad(10) -var.tilt/3)*var.jump +( torad(15) +clamp( sin(torad(40)+var.ls)/3 *clamp(0.5+(limb_speed*2), 0, 1),  0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_leg.ry": " ( torad(20) -torad(30)*clamp(limb_speed, 0, 1))*var.swim +( ( torad(10) +var.tilt/3)*var.jump +(-torad(15) +clamp( sin(torad(20)+var.ls)/3 *clamp(0.5+(limb_speed*2), 0, 1), -1, 0))*(1-var.jump) )*(1-var.swim)",
			"right_leg.rz": "( torad(40) -(cos(var.swls -sin(var.swls))/5 -torad(10))*clamp(limb_speed, 0, 1))*var.swim +( (-torad(10) +sin(pi/4+var.b)/6)*var.jump +(clamp(sin(torad(20-20)+var.ls)/3 *clamp(limb_speed*3, 0, 1),  0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_leg.rz": " (-torad(40) +(cos(var.swls -sin(var.swls))/5 -torad(10))*clamp(limb_speed, 0, 1))*var.swim +( ( torad(10) +sin(pi/4+var.b)/6)*var.jump +(clamp(sin(torad(20-20)+var.ls)/3 *clamp(limb_speed*3, 0, 1), -1, 0))*(1-var.jump) )*(1-var.swim)",
			"right_leg.tx": "-4.2 +( 0.5 +(cos(torad(25)+var.swls -sin(torad(25)+var.swls))*1.5 +1.5)*clamp(limb_speed, 0, 1))*var.swim +( ( 1.6 -var.tilt)*var.jump )*(1-var.swim)",
			"left_leg.tx": "  4.2 +(-0.5 -(cos(torad(25)+var.swls -sin(torad(25)+var.swls))*1.5 +1.5)*clamp(limb_speed, 0, 1))*var.swim +( (-1.6 +var.tilt)*var.jump )*(1-var.swim)",
			"right_leg.ty": "21 -0.15 +(body2.ty+3.5 +(-cos(var.swls))*clamp(limb_speed, 0, 1) -var.tilt*2)*var.swim +( 0.3*var.jump +(clamp(-sin(torad(30-20)+var.ls)*1.5*clamp(limb_speed*3, 0, 1), -1.5, 0))*(1-var.jump) )*(1-var.swim) -var.tilt*2 -24*var.a",
			"left_leg.ty": " 21 -0.15 +(body2.ty+3.5 +(-cos(var.swls))*clamp(limb_speed, 0, 1) -var.tilt*2)*var.swim +( 0.3*var.jump +(clamp( sin(torad(30-20)+var.ls)*1.5*clamp(limb_speed*3, 0, 1), -1.5, 0))*(1-var.jump) )*(1-var.swim) -var.tilt*2 -24*var.a",
			"right_leg.tz": "2.5 +(1 +body2.tz +(cos(torad(45)+var.swls -sin(torad(45)+var.swls))*1.5 +1)*clamp(limb_speed, 0, 1) +clamp(-var.tilt*4, -pi, 0))*var.swim +( (2 -var.tilt*2)*var.jump +( (asin( cos(torad(20)+var.ls))*pi/5*2.2 +0.5)*clamp(0.5+(limb_speed*2), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"left_leg.tz": " 2.5 +(1 +body2.tz +(cos(torad(45)+var.swls -sin(torad(45)+var.swls))*1.5 +1)*clamp(limb_speed, 0, 1) +clamp(-var.tilt*4, -pi, 0))*var.swim +( (2 -var.tilt*2)*var.jump +( (asin(-cos(torad(20)+var.ls))*pi/5*2.2 +0.5)*clamp(0.5+(limb_speed*2), 0, 1))*(1-var.jump) )*(1-var.swim)",
			"right_foot.rx": "(torad(80) +sin(var.b)/4 +(cos(torad(45)+var.swls -sin(torad(25)+var.swls)) +torad(30))*clamp(limb_speed, 0, 1))*var.swim +( (torad(120) -var.tilt*2 +cos(var.b)/2)*var.jump +( (-sin(torad(-40-20)+var.ls) +pi/5 )/2*clamp(limb_speed*3, 0, 1)*clamp( sin(torad(40-20)+var.ls), 0, 1) +clamp(-right_leg.rx, -1, 0))*(1-var.jump) )*(1-var.swim)",
			"left_foot.rx": " (torad(80) -sin(var.b)/4 +(cos(torad(45)+var.swls -sin(torad(25)+var.swls)) +torad(30))*clamp(limb_speed, 0, 1))*var.swim +( (torad(120) -var.tilt*2 -cos(var.b)/2)*var.jump +( ( sin(torad(-40-20)+var.ls) +pi/5 )/2*clamp(limb_speed*3, 0, 1)*clamp(-sin(torad(40-20)+var.ls), 0, 1) +clamp(- left_leg.rx, -1, 0))*(1-var.jump) )*(1-var.swim)",
			"right_foot.ry": "( ( torad(10) -var.tilt/2)*var.jump -torad(5)*(1-var.jump) )*(1-var.swim)",
			"left_foot.ry": " ( (-torad(10) +var.tilt/2)*var.jump +torad(5)*(1-var.jump) )*(1-var.swim)",
			"right_foot.rz": "torad(10)*var.swim +( (-torad(20) -var.tilt/2)*var.jump )*(1-var.swim)",
			"left_foot.rz": "-torad(10)*var.swim +( ( torad(20) +var.tilt/2)*var.jump )*(1-var.swim)",
			"right_foot.tz": "5 +1*var.swim +( 1*var.jump )*(1-var.swim)",
			"left_foot.tz": " 5 +1*var.swim +( 1*var.jump )*(1-var.swim)",
			"right_leg2.rx": "( (torad(-7) +sin(-pi/9+var.b*2)/30)*(1-var.jump) )*(1-var.swim) +clamp(-torad(var.hy)/2, -torad(20), torad(20)) +clamp(-torad(head_pitch), -pi/4, 0)/2",
			"left_leg2.rx": " ( (torad(-7) +sin(-pi/9+var.b*2)/30)*(1-var.jump) )*(1-var.swim) +clamp( torad(var.hy)/2, -torad(20), torad(20)) +clamp(-torad(head_pitch), -pi/4, 0)/2",
			"right_leg2.ry": "( (clamp((-cos(torad(30)+var.ls)/4 +torad(10))*clamp(0.5+(limb_speed*2), 0, 1), -1, 1))*(1-var.jump) )*(1-var.swim)",
			"left_leg2.ry": " ( (clamp((-cos(torad(30)+var.ls)/4 -torad(10))*clamp(0.5+(limb_speed*2), 0, 1), -1, 1))*(1-var.jump) )*(1-var.swim)",
			"right_leg2.rz": "clamp( torad(var.hy)/2, -torad(20), torad(20))",
			"left_leg2.rz": " clamp( torad(var.hy)/2, -torad(20), torad(20))",
			"right_leg2.tz": "5 +clamp(-torad(head_pitch), -pi/4, 0)",
			"left_leg2.tz": " 5 +clamp(-torad(head_pitch), -pi/4, 0)",
			"right_leg2.sx": "1 -((right_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/6 -0.5)/2*var.swim +( (-0.5/6 +var.tilt/4)*var.jump +( sin(-pi/9+var.b*2)/24/2 -(right_leg.tz/6 -0.5)/6)*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, 0)/7",
			"left_leg2.sx": " 1 -(( left_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/6 -0.5)/2*var.swim +( (-0.5/6 +var.tilt/4)*var.jump +( sin(-pi/9+var.b*2)/24/2 -( left_leg.tz/6 -0.5)/6)*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, 0)/7",
			"right_leg2.sy": "1 -((right_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/6 -0.5)/2*var.swim +( (-0.5/6 +var.tilt/4)*var.jump +(-sin(-pi/9+var.b*2)/24   -(right_leg.tz/6 -0.5)/6)*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, 0)/7",
			"left_leg2.sy": " 1 -(( left_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/6 -0.5)/2*var.swim +( (-0.5/6 +var.tilt/4)*var.jump +(-sin(-pi/9+var.b*2)/24   -( left_leg.tz/6 -0.5)/6)*(1-var.jump) )*(1-var.swim) +clamp(-torad(head_pitch), -pi/4, 0)/7",
			"right_leg2.sz": "1 +((right_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/4 -0.5)/2*var.swim +( ( 1  /6 -var.tilt/4)*var.jump +( sin(-pi/9+var.b*2)/24/2 +(right_leg.tz/4 -0.5)/6)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, 0)/6",
			"left_leg2.sz": " 1 +(( left_leg.tz-1-body2.tz -1*clamp(limb_speed, 0, 1))/4 -0.5)/2*var.swim +( ( 1  /6 -var.tilt/4)*var.jump +( sin(-pi/9+var.b*2)/24/2 +( left_leg.tz/4 -0.5)/6)*(1-var.jump) )*(1-var.swim) -clamp(-torad(head_pitch), -pi/4, 0)/6"
		},
		{
			"croak.sx": "croaking_body.sx*(1 -clamp(0.5-159+sin(var.r+age/128)*160, 0, 1))",
			"croak.sy": "croaking_body.sy*(1 -clamp(0.5-159+sin(var.r+age/128)*160, 0, 1))",
			"croak.sz": "croaking_body.sz*(1 -clamp(0.5-159+sin(var.r+age/128)*160, 0, 1))",
			"croak.visible": "croaking_body.visible",
			"tongue2.rx": "tongue.rx +if(is_on_ground, clamp(-cos(var.r+age/2)/20, -0.1, 0)*clamp(-159+sin(var.r+age/128)*160, 0, 1), 0)*(1-var.swim)",
			"tongue2.sx": "tongue.sx +if(is_on_ground, clamp( sin(var.r+age/2)/3 ,-0.25, 0)*clamp(-159+sin(var.r+age/128)*160, 0, 1), 0)*(1-var.swim)",
			"tongue2.sz": "tongue.sz +if(is_on_ground, clamp(-sin(var.r+age/2)/2 , 0,  0.5)*clamp(-159+sin(var.r+age/128)*160, 0, 1), 0)*(1-var.swim)",
			"var.rblink": "if( varb.fcc, var.rblink, limb_speed!=1 && ( -9.7 +cos(    var.r+age/18)*10 +cos(    var.r+age/37)*10 )>0, 1, max( 0, var.rblink -frame_time*3 ) )",
			"var.lblink": "if( varb.fcc, var.lblink, limb_speed!=1 && ( -9.7 +cos(0.1+var.r+age/18)*10 +cos(0.1+var.r+age/37)*10 )>0, 1, max( 0, var.lblink -frame_time*3 ) )",
			"var.eye_top": "clamp(head_pitch/120, -0.5, 0 ) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10 +clamp( head.rx, -0.5, 0 )",
			"var.pupil_y": "clamp(head_pitch/120, -0.5, 0.3) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10 -clamp( head.rx, -0.3, 0 )",
			"var.pupil_x": "-var.hy/90 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1) -2*cos(clamp(0.5+sin( pi/7 +var.r+age/16 )*1.5,0,1)*pi)*var.Nlook",
			"var.r_pupil_x": "var.pupil_x +0.3*var.Nlook",
			"var.l_pupil_x": "var.pupil_x -0.3*var.Nlook"
		},
		{
			"right_eye.sz": "1+clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"left_eye.sz": "right_eye.sz",
			"right_eye.sx": "1+(right_eye.sz-1)/1.5",
			"left_eye.sx": " 1+( left_eye.sz-1)/1.5",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tz": "-1.005 -(right_eye.sz-1)",
			"l_pupil.tz": "-1.005 -( left_eye.sz-1)",
			"r_pupil.tx": "clamp( var.r_pupil_x-1.25, -1, 0.005 )-1.005 -(right_eye.sz-1)",
			"l_pupil.tx": "clamp( var.l_pupil_x+1.25, -0.005, 1 )+1.005 +( left_eye.sz-1)",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1, 1 )-0.5",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1, 1 )-0.5",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "( 1 +clamp( var.r_pupil_x, -0.5, 0.25 ) +clamp( 0.75 -var.r_pupil_x, -0.5, 0 )/2 )  +(right_eye.sz-1)/3",
			"l_pupil.sx": "( 1 +clamp(-var.l_pupil_x, -0.5, 0.25 ) +clamp( 0.75 +var.l_pupil_x, -0.5, 0 )/2 )  +( left_eye.sz-1)/3",
			"r_pupil2.sz": "clamp( 1 -var.r_pupil_x*4, 0.005, 1 ) +clamp(-1.5 +var.r_pupil_x*2, 0, 1 )  +(right_eye.sz-1)/2",
			"l_pupil2.sz": "clamp( 1 +var.l_pupil_x*4, 0.005, 1 ) +clamp(-1.5 -var.l_pupil_x*2, 0, 1 )  +( left_eye.sz-1)/2",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0",
			"r_socket.sy": "1 -min(1, 1.3*pow(sin( var.rblink*pi ), 3) )",
			"l_socket.sy": "1 -min(1, 1.3*pow(sin( var.lblink*pi ), 3) )",
			"r_socket.visible": "r_socket.sy!=0",
			"l_socket.visible": "l_socket.sy!=0",
			"r_eyelid.sx": "1 +0.2*pow(sin( clamp( 1.5*var.rblink-0.2, 0, 1 )*pi ), 3)",
			"l_eyelid.sx": "1 +0.2*pow(sin( clamp( 1.5*var.lblink-0.2, 0, 1 )*pi ), 3)",
			"r_eyelid.sz": "r_eyelid.sx",
			"l_eyelid.sz": "l_eyelid.sx",
			"r_eyelid.ty": "-3-(r_socket.sy-1)",
			"l_eyelid.ty": "-3-(l_socket.sy-1)"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}