{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"right_leg.rx": "0",
			"right_leg.ry": "0",
			"right_leg.rz": "0",
			"right_leg.tx": "0",
			"right_leg.ty": "0",
			"right_leg.tz": "0",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing*if(is_child, 1, 1.5)/2 +pi/1.5*var.sprint*var.ridden",
			"var.b": "var.r+age/if(is_child, 8, 13 )",
			"var.c": "var.r+age/if(is_child, 1, 1.5) +sin((var.r+age/if(is_child, 1, 1.5))/4)",
			"var.d": "var.r+age*1.3",
			"var.w": "clamp(  limb_speed*if(!is_in_lava, 10, 6 ), 0.3, 1)",
			"var.i": "clamp(1-limb_speed*if(!is_in_lava, 10, 6 ), 0  , 1)",
			"varb.falling": "!is_on_ground && !is_in_lava && pos_y < var.pre_posy0",
			"var.in_air": "clamp( if(varb.fcc, var.in_air, varb.falling || !is_on_ground  , min(20, var.in_air +0.3 *frame_time*20), max(0, var.in_air -0.08 *frame_time*20 ) ), 0, 1 )",
			"var.sprint": "clamp( if(varb.fcc, var.sprint, limb_speed>0.85, min(20, var.sprint +0.1 *frame_time*20), max(0, var.sprint -0.1 *frame_time*20) ), 0, 1 )",
			"var.ridden": "clamp( if(varb.fcc, var.ridden, is_ridden, min(20, var.ridden +0.05 *frame_time*20), max(0, var.ridden -0.05 *frame_time*20) ), 0, 1 )",
			"var.shake": "(0.5-0.5*cos( clamp(-58.8 +sin(var.r +age/if(is_child, 120, 160))*60, 0, 1)*pi ))*clamp(1.5-limb_speed*3, 0, 1-var.ridden )",
			"var.last_max_y": "                  if( age<=10, 0, varb.falling, var.last_max_y, pos_y)",
			"var.distance_fallen": "             if( age<=10, 1, varb.falling, var.last_max_y - pos_y, var.distance_fallen)",
			"var.timer_after_hit_ground": "clamp(if(varb.fcc, var.timer_after_hit_ground, varb.falling, 0, var.timer_after_hit_ground + frame_time / 0.7 ), 0, 1)",
			"var.land": "( 1-sin(var.timer_after_hit_ground*pi/2) )*clamp(-0.2+0.7*var.distance_fallen, 0, 1)",
			"var.hp_amp": "clamp( if( var.hp_timer!=0, var.hp_amp, head_pitch!=var.pre_hp, head_pitch-var.pre_hp, 0 ), -2, 2)",
			"var.hp_timer": "clamp( if(varb.fcc, var.hp_timer, head_pitch!=var.pre_hp, 1, var.hp_timer - frame_time*2 ), 0, 1 )",
			"var.position": "if( varb.fcc, var.position, age<9, pos_y, pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"bone.rx": "-right_leg.rx",
			"bone.ry": "-right_leg.ry",
			"bone.rz": "-right_leg.rz",
			"bone.tx": "-right_leg.tx",
			"bone.ty": "-right_leg.ty -if(is_child && is_in_lava, 6*(1-var.ridden), 0)",
			"body2.rx": " -cos(var.b)/40 +if(is_ridden, 0, clamp(torad(head_pitch)/2, -pi/6, pi/6)*(1-var.shake) ) -pi/60*(-1+cos(var.ridden*pi*2)) +torad( 15*(0.5-0.5*cos(var.sprint*pi)) ) +torad(20)*var.shake +torad( (-15*exp(-sin(var.timer_after_hit_ground*pi))*(sin(var.timer_after_hit_ground*pi*2) )*3  ) *var.land )",
			"body2.ry": "cos(-pi/4 +var.c )/5*(1-cos((var.r+age/if(is_child, 1, 1.5))/4)  )*var.shake +torad(-5*sin(var.ls)*var.w ) +clamp(torad(  var.hy  )/1.5, -pi/5, pi/5) +if(!is_in_lava,  cos(var.r+age*2)/80, 0)",
			"body2.rz": "sin(       var.c )/3*(1-cos((var.r+age/if(is_child, 1, 1.5))/4)/3)*var.shake +torad( 8*cos(var.ls +sin(var.ls*2)/3*(1-var.sprint))*(1-var.ridden/1.5)*clamp(limb_speed*6, 0, 1-var.in_air) )",
			"body2.tx": "cos(pi/2.4+var.c )  *(1-cos((var.r+age/if(is_child, 1, 1.5))/4)/2)*var.shake    +( 0.3*cos(var.ls +sin(var.ls*2)/3*(1-var.sprint))*(1-var.ridden/3  )*var.w )",
			"body2.ty": "6 +sin(     var.b)/2*var.i +if(!is_in_lava, sin(var.r+age*2)/20, 0) -2*cos((var.ls-pi/1.5*var.sprint*var.ridden)*2)*2*min(limb_speed, 0.25)*(1-var.in_air)*var.ridden -cos(-pi/4+var.ls*2 -sin(var.ls*2)/3 )*clamp(limb_speed*6, 0, 1-var.in_air)*(1-var.ridden)*(1-var.sprint) +cos( pi/4+var.ls*2 )*1.2*(1-var.ridden)*var.sprint +(2.5 +sin(-var.ridden*pi*2.6))*(0.5-0.5*cos(var.ridden*pi)) +( 12*sin(var.timer_after_hit_ground*pi) )*var.land",
			"body2.tz": "  -sin(pi/4+var.b)/4       +clamp(torad(head_pitch)*1.2*4, -3, 3)/2*(1-var.shake)*(1-var.w) +( 2 )*var.sprint +2*var.shake"
		},
		{
			"var.rlegrx": "torad(-25*sin(var.ls +sin(var.ls)/3*(1-var.sprint)) )*var.w*(1+var.sprint/3)",
			"var.llegrx": "torad( 25*sin(var.ls -sin(var.ls)/3*(1-var.sprint)) )*var.w*(1+var.sprint/3)",
			"right_leg2.rx": "-sin(body2.ry/2)/4 +clamp(-torad(head_pitch)/3, -pi/18, pi/18)*(1-var.shake)*(1-var.w) +var.rlegrx +(0.5+sin(pi/4+var.b))/40*var.i +torad( 8*var.sprint )",
			"left_leg2.rx": "  sin(body2.ry/2)/4 +clamp(-torad(head_pitch)/3, -pi/18, pi/18)*(1-var.shake)*(1-var.w) +var.llegrx +(0.5+sin(pi/4+var.b))/40*var.i +torad( 8*var.sprint )",
			"right_leg2.ry": "torad( 10*var.i +5*sin(var.ls +cos(var.ls)/2)*var.w ) +if(!is_in_lava, -sin(var.r+age*2)/20, 0)",
			"left_leg2.ry": " torad(-10*var.i +5*sin(var.ls -cos(var.ls)/2)*var.w ) +if(!is_in_lava,  sin(var.r+age*2)/20, 0)",
			"right_leg2.rz": "-(-1+cos(body2.ry/2))/4 +right_leg2.rx*right_leg2.ry +torad( 2 +4*cos(var.ls +sin(var.ls)/1.5) )*var.w -sin(var.c)/10*(1-cos((var.r+age/if(is_child, 1, 1.5))/4)/2)*var.shake",
			"left_leg2.rz": "  (-1+cos(body2.ry/2))/4 + left_leg2.rx* left_leg2.ry +torad(-2 +4*cos(var.ls -sin(var.ls)/1.5) )*var.w -sin(var.c)/10*(1-cos((var.r+age/if(is_child, 1, 1.5))/4)/2)*var.shake",
			"right_leg2.tx": "-4 -torad( 1 +4*cos(var.ls +sin(var.ls)/1.5) )*var.w*16",
			"left_leg2.tx": "  4 -torad(-1 +4*cos(var.ls -sin(var.ls)/1.5) )*var.w*16",
			"right_leg2.ty": "24 +clamp( (-3*cos(var.ls -cos(var.ls)/2) -2.7*var.sprint )*clamp(limb_speed*6, 0, 1-var.in_air/2), -6, 6*var.in_air )",
			"left_leg2.ty": " 24 +clamp( ( 3*cos(var.ls +cos(var.ls)/2) -2.7*var.sprint )*clamp(limb_speed*6, 0, 1-var.in_air/2), -6, 6*var.in_air )",
			"right_leg2.tz": "sin(var.rlegrx)*17 +( 2 +3 )*var.sprint",
			"left_leg2.tz": " sin(var.llegrx)*17 +( 2 +3 )*var.sprint"
		},
		{
			"var.right_quills": "torad( -60 -6*cos(var.ls +sin(var.ls)/2)*(1-var.ridden/2)*var.w*(1-var.in_air) +(  6 -10*sin(-pi/1.5*var.sprint*var.ridden+pi/4+var.ls*2 +sin(var.ls*2)/3) )*var.sprint +60*sin( clamp( var.position-pos_y, -1, 1 )*pi )*var.in_air ) -cos(var.c)/if(is_child, 1.2, 1.5)/2*var.shake +sin(var.timer_after_hit_ground*pi*3)*var.land",
			"var.left_quills": " torad(  60 -6*cos(var.ls +sin(var.ls)/2)*(1-var.ridden/2)*var.w*(1-var.in_air) +( -6 +10*sin(-pi/1.5*var.sprint*var.ridden+pi/4+var.ls*2 +sin(var.ls*2)/3) )*var.sprint -60*sin( clamp( var.position-pos_y, -1, 1 )*pi )*var.in_air ) -cos(var.c)/if(is_child, 1.2, 1.5)/2*var.shake -sin(var.timer_after_hit_ground*pi*3)*var.land",
			"hair_right_top2.rz": "   clamp( var.right_quills +torad( 3*cos(var.b)*var.i +3*cos(var.r+age/7) +6*sin(-pi/4+var.ls*2 +cos(-pi/4+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) -( sin(var.d) -1   )/9*var.hp_amp*var.hp_timer, -1.5, 0)",
			"hair_left_top2.rz": "    clamp(  var.left_quills +torad(-3*cos(var.b)*var.i +3*cos(var.r+age/7) -6*sin(-pi/4+var.ls*2 +cos(-pi/4+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) +( sin(var.d) -1   )/9*var.hp_amp*var.hp_timer, 0,  1.5)",
			"hair_right_middle2.rz": "clamp( var.right_quills +torad( 1*cos(var.b)*var.i +3*cos(var.r+age/8) +4*sin(-pi/6+var.ls*2 +cos(-pi/6+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) -( cos(var.d) -0.5 )/9*var.hp_amp*var.hp_timer, -1.5, 0)",
			"hair_left_middle2.rz": " clamp(  var.left_quills +torad(-1*cos(var.b)*var.i +3*cos(var.r+age/8) -4*sin(-pi/6+var.ls*2 +cos(-pi/6+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) +( cos(var.d) -0.5 )/9*var.hp_amp*var.hp_timer, 0,  1.5)",
			"hair_right_bottom2.rz": "clamp( var.right_quills +torad( 2*cos(var.b)*var.i +3*cos(var.r+age/9) +5*sin(-pi/9+var.ls*2 +cos(-pi/9+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) +( sin(var.d)      )/9*var.hp_amp*var.hp_timer, -1.5, 0)",
			"hair_left_bottom2.rz": " clamp(  var.left_quills +torad(-2*cos(var.b)*var.i +3*cos(var.r+age/9) -5*sin(-pi/9+var.ls*2 +cos(-pi/9+var.ls*2)/2 )*2*limb_speed*(1-var.sprint) ) -( sin(var.d)      )/9*var.hp_amp*var.hp_timer, 0,  1.5)"
		},
		{
			"eyes.tz": "-8 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/800",
			"r_pupil.tz": "eyes.tz+8",
			"l_pupil.tz": "eyes.tz+8",
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/9)*if(is_in_lava, 6, 2) ))*clamp(-32 +cos((var.r+age/9)/1.5)*40 +cos((var.r+age/9)/4)*40, 0, 1), clamp(var.shake*4, 0, 1), 1), 2 )",
			"var.eye_top": "( clamp(head_pitch/120, -0.2, 0  ) +(-1.5 -cos(limb_swing/3)/2)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -0.3*var.sprint )*(1-var.blink) +var.blink",
			"var.pupil_y": "  clamp(head_pitch/120, -0.2, 0.5) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10 -0.3*var.sprint",
			"var.pupil_x": "-var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1) +torad(-5*sin(var.ls)*var.w )*2",
			"var.r_pupil_x": "var.pupil_x -0.3*clamp(var.nov1*4, 0, 1)",
			"var.l_pupil_x": "var.pupil_x +0.3*clamp(var.nov1*4, 0, 1)",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.r_pupil_x+1,  0, 1 )-6",
			"l_pupil.tx": "clamp( var.l_pupil_x-1, -1, 0 )+6",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.r_pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.l_pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"right_saddle.rx": "-body2.rx/1.2 +torad(20)*limb_speed",
			"left_saddle.rx": " -body2.rx/1.2 +torad(20)*limb_speed",
			"left_saddle.rz": " clamp( -body2.rz -cos(var.r+age/if(is_child, 1.5, 2))/if(is_child, 1.2, 1.5)*var.shake -torad( 1 +6*cos(-pi/4+var.ls*2) ),-pi/3, 0)",
			"right_saddle.rz": "clamp( -body2.rz -cos(var.r+age/if(is_child, 1.5, 2))/if(is_child, 1.2, 1.5)*var.shake +torad( 1 +6*cos(-pi/4+var.ls*2) ), 0, pi/3)"
		},
		{
			"var.pre_hp": "head_pitch",
			"var.pre_posy0": "var.pre_posy",
			"var.pre_posy": "pos_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}