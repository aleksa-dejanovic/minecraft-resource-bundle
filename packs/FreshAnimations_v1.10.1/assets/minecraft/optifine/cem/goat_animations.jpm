{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing*if(is_child, 0.65, 1)",
			"var.b": "var.r +age/if(is_child, 5.5, 11)",
			"var.Ct": "var.r +age/if(is_child, 1.35, 2) -cos( var.r +age/if(is_child, 1.35, 2) )/3",
			"var.swim": "var.r +age/if(is_child, 1.8, 2.5)",
			"var.jump": "clamp(if(age>8&& !is_in_water && !is_on_ground && !is_riding, min(20, var.jump +0.2 *frame_time*20), max(0, var.jump -0.2 *frame_time*20)), 0, 1)",
			"var.run": "clamp(if(is_on_ground && limb_speed>=if(is_child, 0.44, 0.6), min(20, var.run +0.2 *frame_time*20), max(0, var.run -0.2 *frame_time*20)), 0, if(is_child, 1.5, 1))",
			"var.walk": "clamp(1-var.run, 0, 1-var.jump)",
			"var.ramA": "clamp(if((head.rx-torad(head_pitch))>torad(1), min(20, var.ramA +0.1 *frame_time*20), max(0, var.ramA -0.1 *frame_time*20)), 0, 1)",
			"var.ram": "0.5-0.5*cos( clamp(var.ramA, 0, 1)*pi )",
			"var.nov1": "clamp( if( is_in_water || !is_on_ground, 0, (0.5-0.5*cos( clamp((-145.3 +sin(var.r +age/280)*146)*2, 0, 1                  )*pi ))                            ), 0, clamp(1-var.run, 0, 1))",
			"var.nov2": "       if( is_in_water || !is_on_ground, 0, (0.5-0.5*cos( clamp( -144.5 +cos(var.r +age/256)*146   , 0, if(is_child, 0, 1) )*pi ))*clamp(1-limb_speed*4, 0, 1))",
			"var.eatA": "clamp(if(rule_index==3 && between(cos(var.r+age/110)*10, -8, -2) && head_pitch==0 && limb_speed<0.3 || rule_index==2 && between(cos(var.r+age/260)*10, 0, 2) && head_pitch==0 && limb_speed<0.3, min(20, var.eatA +0.1 *frame_time*20), max(0, var.eatA -0.1 *frame_time*20) ), 0, clamp(1-var.nov1*2-var.nov2*2-var.ram*2, 0, 1))",
			"var.eat": "(0.5-0.5*cos( var.eatA*pi ))",
			"var.chew": "clamp( if( varb.fcc, var.chew, var.eatA>0.8, var.eatA, var.chew -0.06 *frame_time ), 0, 1)",
			"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,   pos_y,   pos_y*min(1,frame_time*6) +var.position*max(0,1-frame_time*6) )",
			"var.tilt": "clamp( var.position-pos_y, -pi/3, pi/3 )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head2.rx": "-if(!is_on_ground&&is_in_water, cos(var.swim)/10 +if(is_child, torad(10), 0), (-cos( var.ls)/6*limb_speed)*var.run +(-sin(var.ls*2)/14*limb_speed)*var.walk ) -sin(-pi/4+var.b)/70 +(torad(-5)*limb_speed) +torad(clamp(head_pitch*(1-var.ram), -45, 45)*(1-var.eat))*(1-var.jump/2) +torad(25 )*var.ram -torad(20)*var.nov1 +( -sin(var.r+age/2.4 )/40 +torad(10) )*var.nov2 +(torad(-10) -var.tilt/2)*var.jump +torad(20+7*sin(age/1.3))*var.eat",
			"head2.rz": " if(!is_on_ground&&is_in_water, 0, ( sin(var.ls)/24*limb_speed)*var.run +(-sin( var.ls)/6*limb_speed)*var.walk ) +( sin(var.r+age/1.5)/1.5 )*var.nov1 +(-sin(var.r+age/2.4 +cos(-pi/4+var.r+age/2.4)/3 )/20 +torad(20) )*var.nov2 +torad( 1+sin(pi/6+var.Ct) )*min(1,var.chew*8)*if(random(id)>0.5,-1, 1)",
			"head2.ry": "clamp(-torad(var.hy)/2, -pi/3, pi/3)*(1-2*var.ram) +( sin( pi/2+    pi/4 +var.r+age/1.5)/3 )*var.nov1 +(-cos(var.r+age/2.4 )/20 +torad(20) )*var.nov2 -torad(-sin(var.swim*1.5)*4*(var.tilt+1) )*var.jump",
			"head2.tx": " (-sin(var.ls)/2 *limb_speed)*var.walk +clamp(-torad(var.hy)*2, -4, 4)/2",
			"head2.ty": "torad(head_pitch) +if(!is_on_ground&&is_in_water, if(is_child, 0, 2), ( if(is_child, 1, 2) -sin( pi/2+    -pi/3 +var.ls +cos( pi/2+    var.ls)/2)*1.3*limb_speed )*var.run -cos(var.ls*2 +sin(var.ls*2)/2)/2*limb_speed*var.walk ) +sin(-pi/4+var.b)/6 -17 +if(is_child, -1, 0) +(2)*var.ram +( 2 )*var.nov1 +( 2 )*var.nov2 +clamp(2 +4*var.tilt, 0, 4)*var.jump +if(is_child, 3, 4.5)*var.eat",
			"head2.tz": "                   if(!is_on_ground&&is_in_water, -1 +sin(var.swim)/2, ( -0.7 -sin(var.ls)/2*limb_speed )*var.run ) -6 +if(is_child, 1, 0) +(-1 )*var.nov1 +( -1 )*var.nov2 +( -1 -var.tilt )*var.jump -if(is_child, 2, 1.2)*var.eat",
			"head2.sx": "if(is_child, 1.5, 1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx",
			"body.rx": "if(!is_on_ground&&is_in_water, torad(-10) +cos(var.swim)/10, (-cos( var.ls -sin( var.ls)/4 )/7.5*limb_speed )*var.run +( -cos(var.ls*2)/14*limb_speed +torad(-3)*clamp(limb_speed*2, 0, 1) )*var.walk ) -cos(-pi/4+var.b)/60 +torad(10)*var.ram +( torad(5) )*var.nov1 +( sin(var.r+age/2.4 )/40 -torad(3) )*var.nov2 +var.tilt/1.5*var.jump +torad(if(is_child, 5, 10))*var.eat",
			"body.ry": "-torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) +( sin(var.r+age/1.5)/9 )*var.nov1 +( cos(var.r+age/2.4 )/40 )*var.nov2 +torad(-sin(var.swim*1.5)*2*(var.tilt+1) )*var.jump",
			"body.rz": "if(!is_on_ground&&is_in_water, 0, (-sin( var.ls)/24*limb_speed)*var.run +( sin(var.ls)/6*limb_speed)*var.walk ) +( sin(-pi/4 +var.r+age/1.5)/8 )*var.nov1 +( sin(var.r+age/2.4 +cos(-pi/4+var.r+age/2.4)/3 )/20 )*var.nov2 +torad(-cos(var.swim*1.5)*3*(var.tilt+1) )*var.jump",
			"body.tx": "( (-sin(var.ls)/2 *limb_speed)*var.walk ) * (1-0.5*var.child_scale)",
			"body.tz": "( if(!is_on_ground&&is_in_water, sin(torad(-45)+var.swim)/2, (sin(torad(-135)+var.ls*2)/4*limb_speed)*var.walk ) ) * (1-0.5*var.child_scale)",
			"body.ty": "( if(!is_on_ground&&is_in_water, if(is_child, 3, 5), ( -0.2 -sin( pi/2+    pi/4+var.ls +cos( pi/2+    var.ls)/5)*1.4*limb_speed )*var.run +((1*limb_speed) -sin(var.ls*2)*limb_speed)*var.walk ) -sin(var.b)/6 +14.2 +(1.3)*var.ram +( 1 )*var.nov1 +if(is_child, 1, 2)*var.eat ) * (1-0.5*var.child_scale)",
			"coat.rx": "torad( clamp( cos(-pi/4+var.b)/80*(1-var.jump) +torad(5 +1*cos(var.b*20) )*var.jump +(-sin( var.ls +cos( var.ls)/4 )*8*limb_speed )*var.run, -8, 8 ) ) -torad(if(is_child, 5, 10)/2)*var.eat",
			"coat.rz": "clamp(if(!is_on_ground&&is_in_water, 0, (-sin(pi/6 +var.ls)/8*limb_speed )*var.walk ) +( -cos(var.r+age/1.5)/8 )*var.nov1, -torad(7), torad(7))",
			"coat.ty": "-11 +if(!is_on_ground&&is_in_water, 0, ( cos(var.ls*2 +sin(var.ls*2)/4 )/2*limb_speed )*var.walk )"
		},
		{
			"leg1.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water,  sin(var.swim)/2, (sin(torad( 0 -22.5+20)+var.ls)/2 +clamp(sin(torad( 90-22.5+20)+var.ls)/3, torad(-30), 0) -torad(5))*limb_speed*var.run +(asin(sin(torad(-90 +20)+var.ls))/3*clamp(limb_speed*4, 0.3, 1) +clamp(sin(torad(  0 +20)+var.ls)/4, torad(-30), 0)*clamp(limb_speed*4, 0, 1)   )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
			"leg2.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water, -sin(var.swim)/2, (sin(torad(-90     +20)+var.ls)/2 +clamp(sin(torad( 0      +20)+var.ls)/3, torad(-30), 0) -torad(5))*limb_speed*var.run +(asin(sin(torad( 90 +20)+var.ls))/3*clamp(limb_speed*4, 0.3, 1) +clamp(sin(torad(180 +20)+var.ls)/4, torad(-30), 0)*clamp(limb_speed*4, 0, 1)   )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
			"leg3.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water, -cos(var.swim)/2, (sin(torad( 90        )+var.ls)/2 +clamp(sin(torad( 0         )+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad(180    )+var.ls))/3*clamp(limb_speed*4, 0.3, 1)                                                                                 )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(8)*var.eat",
			"leg4.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water,  cos(var.swim)/2, (sin(torad(180-22.5   )+var.ls)/2 +clamp(sin(torad( 90-22.5   )+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad( 0     )+var.ls))/3*clamp(limb_speed*4, 0.3, 1)                                                                                 )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(8)*var.eat +( -cos(var.r+age/2.4 -sin(var.r+age/2.4)/2)/4 +torad(10) )*var.nov2",
			"leg1.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) -torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
			"leg2.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) -torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
			"leg3.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) -torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) +torad( 15)*var.jump",
			"leg4.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) -torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) +torad(-15)*var.jump",
			"leg1.rz": "                                              -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
			"leg2.rz": "                                              -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
			"leg3.rz": "if(!is_on_ground&&is_in_water, torad( 10), 0) +torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1) +torad(8)*var.ram",
			"leg4.rz": "if(!is_on_ground&&is_in_water, torad(-10), 0) +torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1) -torad(8)*var.ram",
			"leg1.tx": "  -2 * (1-0.5*var.child_scale)",
			"leg2.tx": "   2 * (1-0.5*var.child_scale)",
			"leg3.tx": "( -2 +if(!is_on_ground&&is_in_water, -2, 0) -(1.8)*var.ram                                     ) * (1-0.5*var.child_scale)",
			"leg4.tx": "(  2 +if(!is_on_ground&&is_in_water,  2, 0) +(1.8)*var.ram +( sin(var.r+age/2.4 )/3 )*var.nov2 ) * (1-0.5*var.child_scale)",
			"leg1.ty": "( 24 + if(!is_on_ground&&is_in_water, if(is_child, 2, 4) +cos(var.swim)*1.5, clamp( (-2 +sin(torad( 90-22.5+20)+var.ls)*2)*limb_speed*var.run +( sin(torad( 0  +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk                                      , -4, 0)) +(-0.5 -4.5*var.tilt                                      )*var.jump ) * (1-0.5*var.child_scale)",
			"leg2.ty": "( 24 + if(!is_on_ground&&is_in_water, if(is_child, 2, 4) -cos(var.swim)*1.5, clamp( (-2 +sin(torad( 0      +20)+var.ls)*2)*limb_speed*var.run +( sin(torad(180 +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk                                      , -4, 0)) +(-0.5 -4.5*var.tilt                                      )*var.jump ) * (1-0.5*var.child_scale)",
			"leg3.ty": "( 24 + if(!is_on_ground&&is_in_water, if(is_child, 0, 2) +sin(var.swim)*1.5, clamp( (-2 +sin(torad(180        )+var.ls)*2)*limb_speed*var.run +( sin(torad(-90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk                                      , -4, 0)) +(      3  *var.tilt -sin(pi/4+var.swim*1.5)*(var.tilt+1) )*var.jump ) * (1-0.5*var.child_scale)",
			"leg4.ty": "( 24 + if(!is_on_ground&&is_in_water, if(is_child, 0, 2) -sin(var.swim)*1.5, clamp( (-2 +sin(torad(-90-22.5   )+var.ls)*2)*limb_speed*var.run +( sin(torad( 90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk +( sin(var.r+age/2.4) -0.5 )*var.nov2, -4, 0)) +(      3  *var.tilt +sin(pi/4+var.swim*1.5)*(var.tilt+1) )*var.jump ) * (1-0.5*var.child_scale)",
			"leg1.tz": "( 6 + if(!is_on_ground&&is_in_water,  sin(var.swim)*6, (sin(torad( 0 -22.5+20)+var.ls)*5                 )*limb_speed*var.run +( asin(-cos(torad(20)+var.ls))*3.5*clamp(limb_speed*4, 0.3, 1))*var.walk ) +( 1 +2*var.tilt )*var.jump                                    ) * (1-0.5*var.child_scale)",
			"leg2.tz": "( 6 + if(!is_on_ground&&is_in_water, -sin(var.swim)*6, (sin(torad(-90     +20)+var.ls)*5                 )*limb_speed*var.run +( asin( cos(torad(20)+var.ls))*3.5*clamp(limb_speed*4, 0.3, 1))*var.walk ) +( 1 +2*var.tilt )*var.jump                                    ) * (1-0.5*var.child_scale)",
			"leg3.tz": "(-5 + if(!is_on_ground&&is_in_water, -cos(var.swim)*6, (sin(torad( 90     )+var.ls)*5 -0.5*(1-var.ram*2) )*limb_speed*var.run +( asin(-sin(          var.ls))*3.5*clamp(limb_speed*4, 0.3, 1))*var.walk )                                                                ) * (1-0.5*var.child_scale)",
			"leg4.tz": "(-5 + if(!is_on_ground&&is_in_water,  cos(var.swim)*6, (sin(torad(180-22.5)+var.ls)*5 -0.5*(1-var.ram*2) )*limb_speed*var.run +( asin( sin(          var.ls))*3.5*clamp(limb_speed*4, 0.3, 1))*var.walk ) +( -cos(var.r+age/2.4 -sin(var.r+age/2.4)/2)*3 +1.7 )*var.nov2 ) * (1-0.5*var.child_scale)",
			"leg1_2.rx": "torad(30 +sin(var.swim*1.5)*20 )*var.jump",
			"leg2_2.rx": "torad(30 -sin(var.swim*1.5)*20 )*var.jump",
			"leg3_2.rx": "torad(-20*var.tilt -cos(var.swim*1.5)*15*(var.tilt+1) )*var.jump",
			"leg4_2.rx": "torad(-20*var.tilt +cos(var.swim*1.5)*15*(var.tilt+1) )*var.jump",
			"leg1_2.rz": "torad(-8 +16*(var.tilt+1) )*var.jump",
			"leg2_2.rz": "torad( 8 -16*(var.tilt+1) )*var.jump",
			"leg3_2.rz": "torad( 8 )*var.jump",
			"leg4_2.rz": "torad(-8 )*var.jump"
		},
		{
			"right_ear.rx": "-torad(head_pitch)/2 -torad(var.hy)/3 +torad(20) +torad(20)*limb_speed +torad(60)*var.ram  +torad( 30*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
			"left_ear.rx": " -torad(head_pitch)/2 +torad(var.hy)/3 +torad(20) +torad(20)*limb_speed +torad(60)*var.ram  +torad( 30*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
			"right_ear.ry": "torad(20)*limb_speed -torad(var.hy)/3 +torad(30)*var.ram +torad(12+6*cos(age/1.5))*var.eat +torad( 60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
			"left_ear.ry": "-torad(20)*limb_speed -torad(var.hy)/3 -torad(30)*var.ram -torad(12+6*cos(age/1.5))*var.eat +torad(-60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
			"right_ear.rz": "clamp(-torad(head_pitch)/2 +(-cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +(-cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/2 -torad(20) +sin(torad(-45)+var.b)/20 -torad(30)*var.ram +( torad( 20) -cos(var.r+age/1.5) )*var.nov1, -pi/2, pi/2 ) +torad( 10 +7*sin(var.b*20))*var.jump",
			"left_ear.rz": " clamp( torad(head_pitch)/2 +( cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +( cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/2 +torad(20) -sin(torad(-45)+var.b)/20 +torad(30)*var.ram +( torad(-20) -cos(var.r+age/1.5) )*var.nov1, -pi/2, pi/2 ) +torad(-10 -7*sin(var.b*20))*var.jump",
			"goatee.rx": "-head2.rx/1.5 +sin(-pi/4+var.b)/70 +cos(-pi/4+var.b)/60 +torad(20)*limb_speed +(sin(pi/4 +var.ls)/3*limb_speed)*var.run +(-cos(var.ls*2)/6*limb_speed)*var.walk +torad(30 +3*sin(var.b*20))*var.jump",
			"goatee.rz": "(-cos(var.r+age/1.5)/1.5 )*var.nov1 +( cos(var.r+age/2.4)/10 -torad(15) )*var.nov2",
			"goatee.visible": "!is_child",
			"left_horn2.visible": "  left_horn.visible",
			"right_horn2.visible": "right_horn.visible",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )",
			"mouth.rz": "torad(  -1    +sin(-pi/6 +var.Ct                ) )*2 *min(1,var.chew*8)*if(random(id)>0.5, -1, 1)",
			"mouth.ty": "-4 +(-0.15+0.1*sin(       var.Ct +cos(var.Ct)/2 ) )   *min(1,var.chew*8) -var.distance/800",
			"mouth.sx": " 1 -( 0.5   -1*sin( pi/4 +var.Ct                ) )/20*min(1,var.chew*8)",
			"mouth.tz": "-8.5 -var.distance/800"
		},
		{
			"var.Nblink": "pow( clamp((1.5 -abs(sin(var.r+age/9.5)*6))*clamp(-32 +cos((var.r+age/9.5)/1.5)*40 +cos((var.r+age/9.5)/4)*40, 0, 1), 0.6*var.ram, 1), 2 )",
			"var.eye_top": "( clamp(head_pitch/120, -0.2, 0.4) +(-1.5 -cos(limb_swing/3)/2)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) )*(1-var.Nblink) +var.Nblink",
			"var.pupil_y": "-( head2.rx +body.rx -torad(55) ) -0.3 +clamp(torad(head_pitch*1.5), -0.8, 2)*min(1, 1-var.eat -var.ram )  +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)  -clamp(-24 +sin(var.id+age/100)*40, 0, 1)/10 +torad(65)*var.eat",
			"var.pupil_x": "   head2.ry  -var.hy/90 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
			"right_eye.tx": "-2.5 -var.distance/1000",
			"left_eye.tx": "-right_eye.tx",
			"r_pupil.tz": "right_eye.tx+2.5",
			"l_pupil.tz": "right_eye.tx+2.5",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 2 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )-1",
			"l_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )+1",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+1 +min( 0.4, r_eye_white.sy ), 1 )-1",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+1 +min( 0.4, l_eye_white.sy ), 1 )-1",
			"r_pupil.sy": "min( clamp(1 +var.pupil_y-0.5 +r_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1.5, 0.5, 1 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(1 +var.pupil_y-0.5 +l_eye_white.sy-1, 0.4, clamp( -var.pupil_y+1.5, 0.5, 1 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.3, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.3, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}