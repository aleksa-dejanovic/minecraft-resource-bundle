{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp( 90*sin(torad(head_yaw)), -90, 90 )",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.id": "random(id)*pi*4",
			"var.ls_offset": "if( varb.fcc, var.ls_offset, is_hurt || limb_speed>=if(is_child, 0.55, 0.75), var.ls_offset + frame_time*if(is_child, 2, 1.3)*if(is_hurt, 2, 1) * limb_speed, var.ls_offset)",
			"var.ls": "if( is_riding, 2,  0.3 +( limb_swing -var.ls_offset*3 ) * 0.98 * if(is_child, 0.5, 1)  )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding, pos_y, pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.vs": "if( varb.fcc, var.vs, age<9, max(0,3-age), (var.position-pos_y) )",
			"var.Bt": "var.id +age/if(is_child, 40, 60)*pi*2",
			"var.St": "var.id +age/if(is_child, 7, 10)*pi +limb_swing/if(is_in_water, 1.5, 4) -pos_y/4",
			"var.Ct": "var.id +age/if(is_child, 1.2, 1.8)",
			"var.It": "( var.id +age*if(is_child, 1.1, 1)*(0.7+0.3*random(id)) +sin( var.id +age*if(is_child, 1.1, 1)*(0.7+0.3*random(id))/33 )*9 )/15",
			"var.idl2": "max( 0, 1-limb_speed * 1.5 )*(1-var.swim)",
			"var.idle": "max( 0, 1-limb_speed * if( is_in_water, 6, 4 ) )",
			"var.move": "min( 1,   limb_speed * if( is_in_water, 6, 4 ) )",
			"var.run": "clamp(if( varb.fcc, var.run, limb_speed>=if(is_child, 0.55, 0.75), var.run +6 *frame_time, var.run -3 *frame_time ), 0, if(is_child, 1.5, 1)*max(0,1-var.swim-var.air) )",
			"var.walk": "clamp(1-var.run-var.air, 0, (1-var.swim) )*if(is_child, 1.3, 1)",
			"var.swiA": "clamp(if(varb.fcc, var.swiA, !is_riding&&!is_on_ground&&is_in_water, var.swiA +0.8 *frame_time, var.swiA -2 *frame_time ), 0, 1 )",
			"var.swim": "clamp(-0.5 +var.swiA*2, 0, 1)",
			"var.air": "clamp( if( varb.fcc, var.air, !is_riding && !is_on_ground && !is_in_water, var.air +if(var.vs<0, 0.4, 6)*frame_time, var.air -6 *frame_time ), 0, if(age<9, 0, 1) )",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*max(0, (1-hurt_time/10)*8 )",
			"var.scared": "clamp( if( varb.fcc, var.scared, is_hurt && hurt_time<3 || (age>9 && !is_on_ground && var.fall_amp>1), var.scared +2 *frame_time, var.scared -frame_time *if(limb_speed>0.1, 0.07, 0.5 ) ), 0, 1 )",
			"varb.jumping": "!is_on_ground && !is_in_water && pos_y > var.pre_posy && age>9 || var.t_jump!=0",
			"varb.falling": "!is_on_ground && !is_in_water && pos_y < var.pre_posy",
			"var.t_land": "clamp( if( varb.fcc, var.t_land, (var.t_land==0 || var.t_land==1) && varb.falling, 0, var.t_land + frame_time * if(varb.falling,4,2) ), if(age<9, max(0,3-age)/6, 0), 1)",
			"var.t_jump": "clamp( if( varb.fcc, var.t_jump, (var.t_jump==1 && is_on_ground) || !varb.jumping, 0, var.t_jump + frame_time * 2                    ), 0, 1)",
			"var.t_fall": "clamp( if( varb.fcc, var.t_fall, var.air>0.4, var.t_fall +6 *frame_time, var.t_fall -6 *frame_time ), 0, 1)",
			"var.fall_amp": "if( varb.fcc, var.fall_amp, max(0, var.fall_amp - frame_time * var.fall_amp * if(var.t_land<0.7, 3, 6) +if(age<9 || !is_on_ground, var.vs/if(is_child, 2, 4), 0) ) )",
			"var.jump": "sin( ( var.t_jump -pow( var.t_jump, 2 )/2 )*2*pi )*if(is_child, 1.7, 1.3)*1.2",
			"var.land": "sin( ( clamp(-0.2 +var.t_land*1.2, 0, 1) -pow(clamp(-0.2 +var.t_land*1.2, 0, 1 ),2 )/2 )*2*pi )*sqrt( clamp(var.fall_amp*2, 0, if(is_alive, 3, 0)) )",
			"var.fall": "clamp( if(age>9, var.vs*1.5, 0 ), -1.5, 1.5 )",
			"var.tilt": "clamp( if( varb.fcc, var.tilt, head_pitch==0 && limb_speed>0.02 && !between(var.pre_roty, rot_y-0.01, rot_y+0.01), var.tilt +6 *frame_time, var.tilt -4 *frame_time ), 0, var.run )",
			"var.tr": "if(                   age>9 && var.tp> 0 && var.idle>0.98 || abs(rot_y-var.pre_roty)>0, var.tr, rot_y )",
			"var.tp": "if( varb.fcc, var.tp, age>9 && var.tp==0 && var.idle>0.98 && abs(rot_y-var.pre_roty)>0, 1, max(0, var.tp -1.5 *frame_time ) )",
			"var.tq": "todeg( clamp( rot_y -var.tr, -pi/2, pi/2 ) )",
			"var.turnR": "if( !is_riding && var.tq>0, 1, 0 )*var.idle*(1-var.swim)*0",
			"var.turnL": "if( !is_riding && var.tq<0, 1, 0 )*var.idle*(1-var.swim)*0",
			"var.rr": "if( age>9 && !is_riding && var.idle>0.98 && var.tp>0, var.rr, rot_y )",
			"var.NAeat": "clamp( if( varb.fcc, var.NAeat, head_pitch==0 && limb_speed<0.2 && rule_index==2 && between(cos(var.id+(age+limb_swing)/70)*10, -4, 7), var.NAeat +1.6 *frame_time, var.NAeat -1.6 *frame_time ), 0, (1-var.Nshake/4) )",
			"var.chew": " clamp( if( varb.fcc, var.chew, var.NAeat>0.8, var.NAeat, var.chew -0.12 *frame_time ), 0, 1)",
			"var.sniff": "clamp( if( varb.fcc, var.sniff, var.chew==0 && ( head_pitch!=0 && (-2 +sin(var.id +(age+limb_swing)/5)*5 +cos(var.id +(age+limb_swing)/13)*5 )>0 || ( var.NAlook==1 && cos(var.id +(age+limb_swing)/11)>-0.5 ) ), var.sniff +4 *frame_time, var.sniff -4 *frame_time ), 0, 1)",
			"var.Nidle": "( 0.3+0.7*(0.5-0.5*cos( clamp( -1 +sin(var.id +(age+limb_swing)/73 )*3, 0, max(0, 1-var.run) )*pi )) )",
			"var.NAlook": " clamp( if( varb.fcc, var.NAlook, head_pitch==0 && is_on_ground &&  (    -2 +sin(var.id +(age+limb_swing)/88 )*3  )>0                                                , var.NAlook  +1.6 *frame_time, var.NAlook  -1.6 *frame_time ), 0, max(0, 1 -var.run) )",
			"var.NAshake": "clamp( if( varb.fcc, var.NAshake,                 is_on_ground && ((-398.7 +sin(var.id +(age+limb_swing)/250)*400)>0.7 || (!is_hurt && between(var.scared,0.2,0.5))), var.NAshake +1.6 *frame_time, var.NAshake -0.8 *frame_time ), 0, 1 )",
			"var.NAlfleg": "clamp( if( varb.fcc, var.NAlfleg, !is_in_water && is_on_ground &&  (-198.8 +cos(var.id +(age+limb_swing)/170)*200)>0.9                                              , var.NAlfleg +2   *frame_time, var.NAlfleg -2   *frame_time ), 0, var.idle )",
			"var.NArbleg": "clamp( if( varb.fcc, var.NArbleg, !is_in_water && is_on_ground &&  (-198.8 -sin(var.id +(age+limb_swing)/170)*200)>0.9                                              , var.NArbleg +2   *frame_time, var.NArbleg -2   *frame_time ), 0, var.idle )",
			"var.Neat": "0.5-0.5*cos( pow( var.NAeat, 2)*pi )",
			"var.Nlook": "0.5-0.5*cos( var.NAlook*pi )",
			"var.Nshake": "0.5-0.5*cos( pow( var.NAshake, 3)*pi )",
			"var.Nlfleg": "0.5-0.5*cos( var.NAlfleg*pi )",
			"var.Nrbleg": "0.5-0.5*cos( var.NArbleg*pi )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad(   if(is_riding, -30, 0)  +(-sin(var.Bt+pi/4)   -3*sin( pi/12+var.ls*2)*    var.move       )*var.walk                     +(-9*cos(var.ls)*limb_speed )*var.run  +( 7*sin(var.St*2)*max(var.move, 0.5) )*var.swim  +( -20*var.jump*if(is_child,1.5,1) +45*var.fall +15*cos(var.t_land*4)*var.land )  +((-1+cos( var.tp*pi*4 +cos( var.tp*pi*4 )/4 ))/60*var.tq)*(var.turnL+var.turnR)  +( -3 -10*sin(var.ls    ) )*var.hurt         +1.5*sin(var.It*1.5 +sin(-pi/4+var.It/1.5)*2 )*var.Nidle*(1-var.Neat)  +( if(is_child,0,5) +3*sin(var.Neat*pi) )*var.Neat  )",
			"body.ry": "torad(  ( var.hy/10*var.idl2 )  +(-cos(var.Bt/3   ) +1.5*sin(-pi/4 +var.ls  )*max(var.move, 0.2) )*var.walk*if(is_child,0.7,1)                                         +(-5*sin(-pi/4+var.St)                )*var.swim                    -4*sin(var.St*1.5)*var.t_fall                                   +(-var.tq*(1-var.tp)  +var.tq/2*(1+cos(var.tp*pi  ))     )*(var.turnL+var.turnR)  +(     20*cos(var.ls/1.5) )*var.hurt                                +5*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim)       -1.5*cos(     var.id+age/3)*(var.Nlfleg+var.Nrbleg)  )",
			"body.rz": "torad(                           (                    -5*cos(-pi/4 +var.ls  )*max(var.move, 0.2) )*var.walk*if(is_child,0.7,1)  +( 4*sin(var.ls)*limb_speed )*var.run  +( 5*cos(-pi/4+var.St)                )*var.swim                    +2*cos(var.St*1.5)*var.t_fall                                   +( var.tq/30*sin( var.tp*pi*2 )*(1-cos(var.tp*pi*2))     )*(var.turnL-var.turnR)  +(   -2.6*sin(var.ls    ) )*var.hurt  +2*cos(clamp(0.5-sin(-pi/12+var.It)*0.7,0,1)*pi)*(0.8-cos(var.It/4+sin(var.It/4)))*var.Nidle*(1-var.Neat) -3*cos(pi/4+var.id+age/3)*(var.Nlfleg+var.Nrbleg) +5*cos(var.id+age/1.8)*var.Nshake  )",
			"body.tx": "(  cos(var.Bt/3)/6*var.walk  +(   2*sin(torad(var.tq*var.tp))  *( 1+cos(var.tp*pi  ) )/2)*(var.turnL+var.turnR)  ) * (1-0.5*var.child_scale)",
			"body.ty": "( if(is_child,16,16)+0.3 +if(is_riding, 2.5, 0) +( ( 0.2 +cos(pi/9+var.ls*2)*0.24 )*var.move -sin(var.Bt)/9 )*var.walk  +( 0.25 +sin(pi/4+var.ls) )*limb_speed*var.run  +( var.jump -3*max(0,var.fall) +3*var.land )  +var.tq/90*( 1-cos(var.tp*pi*2) )/4*(var.turnL+var.turnR)  +( 1 +0.5*cos(var.ls) )*var.hurt  +( if(is_child,0,0.8) +0.5*sin(var.Neat*pi) )*var.Neat  +if(is_ridden, 0, if(is_child, 2, 4) )*var.swiA ) * (1-0.5*var.child_scale)",
			"body.tz": "( -(2-2*cos(torad(var.tq*var.tp)) )*( 1+cos(var.tp*pi) )/2*(var.turnL+var.turnR)  +(     -cos(var.ls)*2 )*var.hurt  -var.Neat  ) * (1-0.5*var.child_scale)",
			"head2.rx": "-body.rx       +torad( head_pitch/1.2*(1-var.Neat)  +( cos(var.Bt)/2  +( 1+cos(var.ls*2 +sin(var.ls*2)/2 )*2 )*limb_speed )*var.walk  +( -0.5+sin(pi/4+var.ls) )*3*limb_speed*var.run/if(is_child,2,1)  +(-9 +(2+2*var.move)*cos(var.St*2) )*var.swim  +( 20*pow( clamp(var.fall*1.5,-1,1), 3) -40*cos(var.t_land*pi)*var.land )  +(-7 +20*sin(var.ls/1.2) )*var.hurt  +5*sin(var.It*1.5 +sin(var.It/1.5)/2 )*var.Nidle +( 15*cos(clamp(-0.5+sin(pi/12+var.It/3)*3,0,1)*pi) )*var.Nlook*(1-var.Neat) +(if(is_child,35,40)+3*sin(pi/4 +var.Ct) )*var.Neat -15*var.Nshake  +0.3*sin(var.r+age)*var.sniff  )",
			"head2.ry": "clamp(-body.ry +torad( var.hy/1.7*(1-var.Neat/2)*(1-var.tilt*1.5) ), -pi/2.5, pi/2.5 )                                            +torad(  -30*cos(var.ls*1.3)*var.hurt                                                      +20              *cos(clamp(0.5+sin(      var.It)*1.5,0,1)*pi)*var.Nlook  )",
			"head2.rz": "      -body.rz +torad( var.hy/4*if(is_riding,1,0)  -var.tq/18*( 1-cos(var.tp*pi*2) )*(var.turnL+var.turnR)  -6*sin(var.St*1.5)*var.t_fall  +30*cos(var.ls*0.8)*var.hurt  +5*cos(clamp(0.5-sin(var.It)*1.5,0,1)*pi)*var.Nidle +10*sin(var.It/2)*cos(clamp(0.5+sin(pi/16+var.It)*1.5,0,1)*pi)*var.Nlook*(1-var.Neat) +( 1+sin(pi/6+var.Ct) )*min(1,var.chew*8)*if(random(id)>0.5,-1, 1) +23*sin(var.id+age/1.8)*var.Nshake -7*(var.Nlfleg-var.Nrbleg)  )",
			"head2.tx": "0",
			"head2.ty": "-12 -if(is_child,4,0) +if(is_riding,-0.5, 0)  +(-sin(var.Bt)/6  +( 1+cos(-pi/4+var.ls*2) )/2*limb_speed )*var.walk  +( 1+sin(var.ls) )/1.5*limb_speed*var.run  +sin(var.St*2)/2*var.move*var.swim  +( 2*sin( var.t_jump*pi )*var.jump +( 1 -2*cos( var.t_land*pi) )*var.land )  +( sin(limb_swing)/2 +0.5 )*var.hurt  +( if(is_child, 0, 1.8)*var.Neat  +var.Nshake  +(var.Nlfleg+var.Nrbleg)/2*(1-var.Neat) )",
			"head2.tz": "-6  +if(is_child,2 -2*var.jump -2*var.Neat, 0) +if(is_riding,-0.5, 0) -var.Neat",
			"head2.sx": "if(is_child,2,1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx"
		},
		{
			"leg1.rx": "torad( -(var.hy)/24*var.idl2  +if(is_riding,-90, 0)  +( sin(var.Bt)  +45*cos(-pi/9 +var.ls -cos(-pi/9 +var.ls)/1.5 )*max(var.move, 0.2) +10*min(0, 0.2-sin(pi/9 +var.ls) )*var.move*if(is_child,1.5,1)  )*var.walk  +(-40*cos( pi/6+var.ls) +min(0, 20*sin( pi/6+var.ls) ) )*limb_speed*if(is_child,1,1.3)*var.run  +(-34*sin(var.St) +16 )*var.swim  +( (2+limb_speed)*7.2*cos(var.t_jump*pi/2)*var.jump -cos(var.St*1.5)*20*var.t_fall  -20*cos(var.t_land)*var.land )  +(( ( var.tq/3 )*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnL +(-( var.tq/3 )*1.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) -var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnR)  +cos(var.ls)*20*var.hurt  +( 7*var.Neat +(-6*cos(var.id+age/3 -sin(var.id+age/3)/2) +min(0, sin(var.id+age/3)-0.4 )*20 )*var.Nrbleg )  )",
			"leg2.rx": "torad(  (var.hy)/24*var.idl2  +if(is_riding,-90, 0)  +( sin(var.Bt)  -45*cos(-pi/9 +var.ls +cos(-pi/9 +var.ls)/1.5 )*max(var.move, 0.2) +10*min(0, 0.2+sin(pi/9 +var.ls) )*var.move*if(is_child,1.5,1)  )*var.walk  +( 40*sin(-pi/8+var.ls) +min(0, 20*cos(-pi/8+var.ls) ) )*limb_speed*if(is_child,1,1.3)*var.run  +( 34*sin(var.St) +16 )*var.swim  +( (2+limb_speed)*7.2*cos(var.t_jump*pi/2)*var.jump +cos(var.St*1.5)*20*var.t_fall  -20*cos(var.t_land)*var.land )  +((-( var.tq/3 )*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnR +( ( var.tq/3 )*1.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) -var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnL)  +cos(var.ls)*20*var.hurt  +  7*var.Neat  )",
			"leg3.rx": "torad( -(var.hy)/24*var.idl2  +if(is_riding, -5, 0)  +(-sin(var.Bt)  +45*sin(       var.ls -sin(       var.ls)/1.5 )*max(var.move, 0.2) +30*max(0,-0.2-cos(      var.ls) )*var.move*if(is_child,1.5,1)  )*var.walk  +(-40*sin(-pi/8+var.ls) +max(0, 30*cos(-pi/8+var.ls) ) )*limb_speed*if(is_child,1,1.3)*var.run  +( 34*cos(var.St) +4  )*var.swim  +( (2+limb_speed)*14 *cos(var.t_jump*pi  )*var.jump +sin(var.St*1.5)*20*var.t_fall  +30*cos(var.t_land)*var.land )  +(( ( var.tq/3 )*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnR +(-( var.tq/3 )*1.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) +var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnL)  +cos(var.ls)*20*var.hurt  +  5*var.Neat  )",
			"leg4.rx": "torad(  (var.hy)/24*var.idl2  +if(is_riding, -5, 0)  +(-sin(var.Bt)  -45*sin(       var.ls +sin(       var.ls)/1.5 )*max(var.move, 0.2) +30*max(0,-0.2+cos(      var.ls) )*var.move*if(is_child,1.5,1)  )*var.walk  +( 40*cos(      var.ls) +max(0, 30*sin(      var.ls) ) )*limb_speed*if(is_child,1,1.3)*var.run  +(-34*cos(var.St) +4  )*var.swim  +( (2+limb_speed)*14 *cos(var.t_jump*pi  )*var.jump -sin(var.St*1.5)*20*var.t_fall  +30*cos(var.t_land)*var.land )  +((-( var.tq/3 )*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnL +( ( var.tq/3 )*1.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) +var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnR)  +cos(var.ls)*20*var.hurt  +( 5*var.Neat +( 6*cos(var.id+age/3 +sin(var.id+age/3)/2) -min(0, sin(var.id+age/3)-0.4 )*20 )*var.Nlfleg )  )",
			"leg1.ry": "torad(  var.hy/10*var.idl2  +if(is_riding,  20, 0)  +( var.tq*(1-var.tp)*var.tp*(var.turnL-var.turnR) )                                                       ) +body.ry*var.Nrbleg",
			"leg2.ry": "torad(  var.hy/10*var.idl2  +if(is_riding, -20, 0)  +(-var.tq*(1-var.tp)*var.tp*(var.turnL-var.turnR) )                                                       )",
			"leg3.ry": "torad(  var.hy/10*var.idl2                          +(-var.tq*(1-var.tp)*var.tp*(var.turnL-var.turnR) )  +5*max(0,var.idle -var.swim -var.Neat             )  )",
			"leg4.ry": "torad(  var.hy/10*var.idl2                          +( var.tq*(1-var.tp)*var.tp*(var.turnL-var.turnR) )  -5*max(0,var.idle -var.swim -var.Neat -var.Nlfleg )  ) +body.ry*var.Nlfleg",
			"leg1.rz": "torad(  var.hy/17*var.idl2                               +( 3 -9*cos(var.St) )*var.swim  +20*max(0,var.fall)  +((-var.tq/3.7*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.8) ) )*var.turnL +( var.tq/1.7*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2  ) )                                    )*var.turnR)  +9*cos(var.ls/1.5)*var.hurt  +(  3*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim) )  )",
			"leg2.rz": "torad(  var.hy/17*var.idl2                               +(-3 -9*cos(var.St) )*var.swim  -20*max(0,var.fall)  +((-var.tq/3.7*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.8) ) )*var.turnR +( var.tq/1.7*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2  ) )                                    )*var.turnL)  +9*cos(var.ls/1.5)*var.hurt  +(  3*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim) )  )",
			"leg3.rz": "torad( -var.hy/17*var.idl2  +1.4*cos(var.Bt/3)*var.walk  +( 3 +9*sin(var.St) )*var.swim  -5*abs(var.fall)     +(( var.tq/3.5*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.5) ) )*var.turnR +(-var.tq/3.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2  ) ) +var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnL)  -9*cos(var.ls/1.5)*var.hurt  +( -3*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim) )  )",
			"leg4.rz": "torad( -var.hy/17*var.idl2  +1.4*cos(var.Bt/3)*var.walk  +(-3 +9*sin(var.St) )*var.swim  +5*abs(var.fall)     +(( var.tq/3.5*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.5) ) )*var.turnL +(-var.tq/3.2*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2  ) ) -var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnR)  -9*cos(var.ls/1.5)*var.hurt  +( -3*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim) )  )",
			"leg1.tx": "( -3.2 +if(is_riding,-3  , 0)  +(-leg1.rz*6)*var.swim  +(( 3 -3*cos(torad(var.tq*var.tp)) +7*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +( 3 -3*cos(torad(-var.tq*(1-var.tp))) +7*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  -2*max(0,var.fall)-0.5*sin(var.St*1.5)*var.t_fall  ) * (1-0.5*var.child_scale)",
			"leg2.tx": "(  3.2 +if(is_riding, 3  , 0)  +(-leg2.rz*6)*var.swim  +((-3 +3*cos(torad(var.tq*var.tp)) +7*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +(-3 +3*cos(torad(-var.tq*(1-var.tp))) +7*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)  +2*max(0,var.fall)-0.5*sin(var.St*1.5)*var.t_fall  ) * (1-0.5*var.child_scale)",
			"leg3.tx": "( -3   +if(is_riding, 0.5, 0)  +(-leg3.rz*4)*var.swim  +(( 3 -3*cos(torad(var.tq*var.tp)) -5*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +( 3 -3*cos(torad(-var.tq*(1-var.tp))) -5*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)  +0.5*abs(var.fall)+0.5*sin(var.St*1.5)*var.t_fall  ) * (1-0.5*var.child_scale)",
			"leg4.tx": "(  3   +if(is_riding,-0.5, 0)  +(-leg4.rz*4)*var.swim  +((-3 +3*cos(torad(var.tq*var.tp)) -5*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +(-3 +3*cos(torad(-var.tq*(1-var.tp))) -5*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  -0.5*abs(var.fall)+0.5*sin(var.St*1.5)*var.t_fall  ) * (1-0.5*var.child_scale)",
			"leg1.ty": "24 +( if(is_riding,-1.7, 0)  +min(0, ( (0.8*(-sin(-pi/9 +var.ls +cos(-pi/9 +var.ls*2)/4 )-if(is_child, 0.4, 1)) )*var.move*if(is_child,2,1) )*var.walk  +(-2 +sin( pi/6+var.ls)*1.5)*limb_speed*var.run  +min(0, abs(var.tq)/90*sin(var.tp*pi*2)*(var.turnL-var.turnR))  +( sin(var.id+age/3)-0.4 )*var.Nrbleg )  +(-1 -cos(pi/4+var.St) )*1.5*var.swim  -(0.5-sin(var.St*1.5))*var.t_fall  +( 3                   *var.jump*if(is_child,1.5,1) -8*max(0,var.fall) -4*min(0,var.fall) )  +if(is_ridden, 0, if(is_child, 2, 4) )*var.swiA ) * (1-0.5*var.child_scale)",
			"leg2.ty": "24 +( if(is_riding,-1.7, 0)  +min(0, ( (0.8*( sin(-pi/9 +var.ls +cos(-pi/9 +var.ls*2)/4 )-if(is_child, 0.4, 1)) )*var.move*if(is_child,2,1) )*var.walk  +(-2 +cos(-pi/8+var.ls)*1.5)*limb_speed*var.run  +min(0,-abs(var.tq)/90*sin(var.tp*pi*2)*(var.turnL-var.turnR))                                        )  +(-1 +cos(pi/4+var.St) )*1.5*var.swim  -(0.5+sin(var.St*1.5))*var.t_fall  +( 3                   *var.jump*if(is_child,1.5,1) -8*max(0,var.fall) -4*min(0,var.fall) )  +if(is_ridden, 0, if(is_child, 2, 4) )*var.swiA ) * (1-0.5*var.child_scale)",
			"leg3.ty": "24 +(                         min(0, ( (0.8*( cos(       var.ls -sin(       var.ls*2)/4 )-if(is_child, 0.4, 1)) )*var.move*if(is_child,2,1) )*var.walk  +(-2 -cos(-pi/8+var.ls)*1.5)*limb_speed*var.run  +min(0,-abs(var.tq)/90*sin(var.tp*pi*2)*(var.turnL-var.turnR))                                        )  +(-1 -sin(     var.St) )*1.5*var.swim  -(0.5+cos(var.St*1.5))*var.t_fall  +(-3*sin(var.t_jump*pi)*var.jump*if(is_child,1.5,1) +1*max(0,var.fall) +4*min(0,var.fall) )  +if(is_ridden, 0, if(is_child, 2, 4) )*var.swiA ) * (1-0.5*var.child_scale)",
			"leg4.ty": "24 +(                         min(0, ( (0.8*(-cos(       var.ls -sin(       var.ls*2)/4 )-if(is_child, 0.4, 1)) )*var.move*if(is_child,2,1) )*var.walk  +(-2 -sin(      var.ls)*1.5)*limb_speed*var.run  +min(0, abs(var.tq)/90*sin(var.tp*pi*2)*(var.turnL-var.turnR))  +( sin(var.id+age/3)-0.4 )*var.Nlfleg )  +(-1 +sin(     var.St) )*1.5*var.swim  -(0.5-cos(var.St*1.5))*var.t_fall  +(-3*sin(var.t_jump*pi)*var.jump*if(is_child,1.5,1) +1*max(0,var.fall) +4*min(0,var.fall) )  +if(is_ridden, 0, if(is_child, 2, 4) )*var.swiA ) * (1-0.5*var.child_scale)",
			"leg1.tz": "(  7    +if(is_riding,-7, 0)  +(-1+leg1.rx*7 )*var.swim  +((-0.5 +cos(-pi/9 +var.ls -cos(-pi/9 +var.ls)/3 )*5.3)*max(var.move, 0.2) )*var.walk  +(-cos( pi/6+var.ls)*4.5 )*limb_speed*var.run*if(is_child, 1, 1.3)  +( (0.5+limb_speed)*cos(var.t_jump*pi/2)*var.jump -2*abs(var.fall) +1*var.fall -cos(var.St*1.5)*2*var.t_fall )  +((-7 +7*cos(torad(var.tq*var.tp)) +3*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +(-7 +7*cos(torad(-var.tq*(1-var.tp))) +3*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  +( -cos(var.id+age/3 -sin(var.id+age/3)/2) )*var.Nrbleg  ) * (1-0.5*var.child_scale)",
			"leg2.tz": "(  7    +if(is_riding,-7, 0)  +(-1+leg2.rx*7 )*var.swim  +((-0.5 -cos(-pi/9 +var.ls +cos(-pi/9 +var.ls)/3 )*5.3)*max(var.move, 0.2) )*var.walk  +( sin(-pi/8+var.ls)*4.5 )*limb_speed*var.run*if(is_child, 1, 1.3)  +( (0.5+limb_speed)*cos(var.t_jump*pi/2)*var.jump -2*abs(var.fall) +1*var.fall +cos(var.St*1.5)*2*var.t_fall )  +((-7 +7*cos(torad(var.tq*var.tp)) -3*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +(-7 +7*cos(torad(-var.tq*(1-var.tp))) -3*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)                                                           ) * (1-0.5*var.child_scale)",
			"leg3.tz": "( -5.3  +if(is_riding, 1, 0)  +(   leg3.rx*7 )*var.swim  +(       sin(       var.ls -sin(       var.ls)/3 )*5.3 *max(var.move, 0.2) )*var.walk  +(-sin(-pi/8+var.ls)*4.5 )*limb_speed*var.run*if(is_child, 1, 1.3)  +( (1+3*limb_speed)*cos(var.t_jump*pi  )*var.jump +2*max(0,var.fall)           +sin(var.St*1.5)*2*var.t_fall )  +(( 5 -5*cos(torad(var.tq*var.tp)) +3*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +( 5 -5*cos(torad(-var.tq*(1-var.tp))) +3*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)                                                           ) * (1-0.5*var.child_scale)",
			"leg4.tz": "( -5.3  +if(is_riding, 1, 0)  +(   leg4.rx*7 )*var.swim  +(      -sin(       var.ls +sin(       var.ls)/3 )*5.3 *max(var.move, 0.2) )*var.walk  +( cos(      var.ls)*4.5 )*limb_speed*var.run*if(is_child, 1, 1.3)  +( (1+3*limb_speed)*cos(var.t_jump*pi  )*var.jump +2*max(0,var.fall)           -sin(var.St*1.5)*2*var.t_fall )  +(( 5 -5*cos(torad(var.tq*var.tp)) -3*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +( 5 -5*cos(torad(-var.tq*(1-var.tp))) -3*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  +(  cos(var.id+age/3 +sin(var.id+age/3)/2) )*var.Nlfleg  ) * (1-0.5*var.child_scale)"
		},
		{
			"snout.rx": "torad(  (-0.5 +cos(pi/7 +var.id+age ) )*3*var.sniff  )",
			"snout.rz": "torad(  -1   +sin(-pi/6 +var.Ct                ) )*2 *min(1,var.chew*8)*if(random(id)>0.5, -1, 1)",
			"snout.ty": "1   +(    0.1*sin(       var.Ct +cos(var.Ct)/2 ) )   *min(1,var.chew*8)  +cos(var.id+age)/10*var.sniff",
			"snout.sx": "1   -( 0.5 -1*sin( pi/4 +var.Ct                ) )/20*min(1,var.chew*8)"
		},
		{
			"var.blink": "pow( clamp( (1.5 -abs(sin( var.id+age/9)*6))*clamp(-32 +cos(( var.id+age/9)/1.5)*40 +cos(( var.id+age/9)/4)*40, 0, 1), 0.5*var.Nshake, 1 ), 2 )",
			"var.eye_top": "1 +( -1 +clamp(head_pitch/80, -0.2, 0.4)*clamp(5+sin(var.id+age/130)*12,0,1) +(-head2.rx -1.2 )*(0.5-0.5*cos( min(1,var.scared*4)*pi ))  +sin(hurt_time/1.5)*var.hurt +max(0,-3 +death_time/2)  +clamp(6-18*sin(pi/10+var.It/3),-1,max(0,cos(var.It/2.4-sin(var.It/1.2)/1.2)) )/3*var.Nlook )*(1-var.blink)",
			"var.pupil_y": "0.5 -(head2.rx+body.rx) +var.eye_top/2  +clamp(torad(head_pitch*1.2), -0.8, 2)*(1-var.Neat)  +( -0.1 )*var.run  -clamp(-24 +sin(var.id+age/100)*40, 0, 1)/10 +torad(50)*min(1,var.Neat*10) +torad( 12*var.fall )                    +clamp(6-18*sin(pi/8+var.It/3),-1,1)/3*clamp(-5+var.Nlook*6,0,1-var.Neat)",
			"var.pupil_x": "     (head2.ry        )                 -head_yaw/40*(1-var.tilt*2)   +clamp(sin(var.id+age/27) +sin(var.id+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.id+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.id+age/187)*60*4, 0, 1)  +clamp(  12*sin(pi/12+var.It ),-1,1)/2*clamp(-5+var.Nlook*6,0,1)",
			"right_eye.tz": "-8 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"left_eye.tz": "right_eye.tz",
			"r_pupil.tz": "right_eye.tz+8",
			"l_pupil.tz": "right_eye.tz+8",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x-1, -1, 0 )",
			"l_pupil.tx": "clamp( var.pupil_x+1,  0, 1 )",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+0.7, 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+0.7, 1 )",
			"r_pupil.sy": "clamp(1 +var.pupil_y-0.5 +r_eye_white.sy-1, 0, clamp( r_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"l_pupil.sy": "clamp(1 +var.pupil_y-0.5 +l_eye_white.sy-1, 0, clamp( l_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"r_pupil.sx": "clamp(1 +clamp( var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp(-var.pupil_x, -0.2, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"right_saddle.rx": "-body.rx/1.2 +torad( 20*pow(limb_speed,3) -9*cos(var.ls)*limb_speed*var.walk -15*sin(var.ls)*limb_speed*var.run )",
			"left_saddle.rx": " -body.rx/1.2 +torad( 20*pow(limb_speed,3) +9*cos(var.ls)*limb_speed*var.walk -15*sin(var.ls)*limb_speed*var.run )",
			"left_saddle.rz": " clamp( torad(  7*cos(pi/4+var.ls)*var.move*var.walk*if(is_ridden, 0.5, 1)  +(-abs( 20*sin(var.ls/2))*limb_speed )*var.run  +( (-40 +5*sin(var.St*6)*var.t_fall)*var.fall +40*cos(var.t_land*3)*var.land )  -60*sin(var.ls*1.3)*var.hurt ) -body.rz, -pi/3, 0)",
			"right_saddle.rz": "clamp( torad(  7*cos(pi/4+var.ls)*var.move*var.walk*if(is_ridden, 0.5, 1)  +( abs(-20*sin(var.ls/2))*limb_speed )*var.run  -( (-40 +5*sin(var.St*6)*var.t_fall)*var.fall +40*cos(var.t_land*3)*var.land )  -60*sin(var.ls*1.3)*var.hurt ) -body.rz,  0, pi/3)"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_posy": "pos_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}