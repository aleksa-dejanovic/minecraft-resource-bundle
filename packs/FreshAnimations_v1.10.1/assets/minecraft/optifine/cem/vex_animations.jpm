{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.testing": "0",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r+age/20*pi",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10 -cos(death_time/6)*clamp(death_time/2, 0, 1)",
			"var.wings": "var.r+(limb_swing/1.5+age/5*pi +pos_y*1.5)*1.5",
			"var.aggro_empty": "clamp(if( varb.fcc, var.aggro_empty, right_arm.rx == -1.2217305 && left_arm.rx == -1.2217305, min(20, var.aggro_empty +0.2 *frame_time*20), max(0, var.aggro_empty -0.2 *frame_time*20)), 0, 1)",
			"var.raggro": "clamp(if( varb.fcc, var.raggro, var.aggro_empty!=0, 0, right_arm.rx == 3.6651914, min(20, var.raggro +0.2 *frame_time*20), max(0, var.raggro -0.2 *frame_time*20)), 0, 1)",
			"var.laggro": "clamp(if( varb.fcc, var.laggro, var.aggro_empty!=0, 0, left_arm.rx ==-3.6651914, min(20, var.laggro +0.2 *frame_time*20), max(0, var.laggro -0.2 *frame_time*20)), 0, 1)",
			"var.all": "clamp(var.raggro +var.laggro +var.aggro_empty, 0, 1)",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding, pos_y, pos_y*min(1,frame_time*5) +var.position*max(0,1-frame_time*5) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad(2.5) +torad(30)*limb_speed*(1-var.hurt) +sin(var.b-pi/2)/20 +torad(head_pitch)/4 +torad( -40 )*var.hurt +clamp( ( var.position-pos_y ), -1, 1 )",
			"body.ry": "torad(var.hy)/2 +sin(var.b*23)/50*var.all +torad( 20*cos(limb_swing/3) )*var.hurt",
			"body.rz": "sin(var.b/3)/16                                  -( sin(limb_swing/2) )/22*var.hurt",
			"body.tx": "sin(var.b/3-pi/2)/2",
			"body.ty": "sin(var.b  -pi/2)/2 +19.5",
			"body.tz": "-sin(var.r+age/100*pi)/4 -limb_speed/2",
			"head2.rx": "torad(head_pitch)/2 -sin(var.b-pi/2)/20 -torad(2.5) -torad(30)*limb_speed +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt -clamp( ( var.position-pos_y ), -1, 1 )/1.3*(1-var.all)",
			"head2.ry": "torad(var.hy)/2*(1-var.all*2) +sin(var.b*18)/40*var.all  +sin(limb_swing/2.5)*var.hurt",
			"head2.rz": "-sin(var.b/3)/16  +sin(var.b*25)/40*var.all",
			"head2.tz": "-limb_speed/2*(1-var.hurt) +(-0.5 -sin(limb_swing/2)/2 )*var.hurt",
			"body2.rx": "torad(20)*limb_speed -sin(var.b)/16 -torad(head_pitch)/6",
			"body2.rz": "sin(var.b/3-pi/2)/10",
			"body2.tz": "limb_speed/10",
			"body2.sy": "1 +sin(var.b*5.3)/40 +cos(var.b*2.3)/40*0"
		},
		{
			"right_arm.rx": "if(is_riding, torad(-45), 0) -torad(160)*var.raggro -torad(80 +30*limb_speed )*var.aggro_empty +(torad(50)*limb_speed) -sin(var.b+torad(60))/20 +torad(var.hy)/4 -body.rx +clamp( if(!is_riding && age>10, -(pos_y-var.y)*var.fps, 0), -pi/3, pi/4) +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
			"left_arm.rx": " if(is_riding, torad(-45), 0) -torad(160)*var.laggro -torad(80 +30*limb_speed )*var.aggro_empty +(torad(50)*limb_speed) -sin(var.b+torad(60))/20 -torad(var.hy)/4 -body.rx +clamp( if(!is_riding && age>10, -(pos_y-var.y)*var.fps, 0), -pi/3, pi/4) +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
			"right_arm.ry": "torad( 30)*var.raggro +torad(-15)              +sin(var.b+torad(60))/20 +torad(-10)*limb_speed   *(1-var.raggro) -body.ry +torad( 8)*var.aggro_empty",
			"left_arm.ry": " torad(-30)*var.laggro +torad( 15)              -sin(var.b+torad(60))/20 +torad( 10)*limb_speed   *(1-var.laggro) -body.ry -torad( 8)*var.aggro_empty",
			"right_arm.rz": "torad(-30)*var.raggro +torad( 10) -(torad(-15) +sin(var.b+torad(60))/20 +torad(-10)*limb_speed)/2*(1-var.raggro) -body.rz -torad(30)*var.aggro_empty",
			"left_arm.rz": " torad( 30)*var.laggro +torad(-10) -(torad( 15) -sin(var.b+torad(60))/20 +torad( 10)*limb_speed)/2*(1-var.laggro) -body.rz +torad(30)*var.aggro_empty",
			"right_arm.tx": "-2.05 +body.tx*(var.testing)",
			"left_arm.tx": "  2.05 +body.tx*(var.testing)",
			"right_arm.ty": " 0.6 +body.ty*(var.testing) -sin(var.b)/6 +if(is_riding, 0.5, 0) +0.4*var.aggro_empty",
			"left_arm.ty": "  0.6 +body.ty*(var.testing) -sin(var.b)/6 +if(is_riding, 0.5, 0) +0.4*var.aggro_empty",
			"right_arm.tz": "0.2 +if(is_riding, -0.5, 0) -0.7*var.aggro_empty",
			"left_arm.tz": " 0.2 +if(is_riding, -0.5, 0) -0.7*var.aggro_empty"
		},
		{
			"right_wing2.rx": "(torad(15) -cos(var.wings)/3)*(1-var.all)",
			"left_wing2.rx": "right_wing2.rx",
			"right_wing2.ry": "torad(55) +sin(var.wings -cos(var.wings)/2*clamp(2-limb_speed*4, 0, 1))/2*(1-var.all) +torad(8.8)*clamp(1+limb_speed, 0, 1.2)",
			"left_wing2.ry": "-right_wing2.ry",
			"right_wing2.rz": "(torad(25) +cos(pi/2+var.wings)/6*clamp(1-limb_speed*2, 0, 1))",
			"left_wing2.rz": "-right_wing2.rz",
			"right_wing2.tx": "-0.85 +sin(pi/3+var.wings)/3",
			"left_wing2.tx": "-right_wing2.tx"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), clamp(var.hurt*3 +death_time, 0, 1), (1-var.all) ), 2 )",
			"right_brow.rz": "torad(10*var.all -sin(limb_swing/2)*3*hurt_time )",
			"left_brow.rz": "-torad(10*var.all -sin(limb_swing/2)*3*hurt_time )",
			"right_brow.ty": "-clamp(-sin(limb_swing/2)/6*hurt_time, 0, 1)",
			"left_brow.ty": " -clamp(-cos(limb_swing/2)/6*hurt_time, 0, 1)",
			"right_brow.tx": "-2.5 +right_brow.rz/2",
			"left_brow.tx": "  2.5  +left_brow.rz/2",
			"right_eye.sy": "1 -var.blink",
			"left_eye.sy": "right_eye.sy",
			"right_eye.visible": "right_eye.sy>=0",
			"left_eye.visible": "left_eye.sy>=0",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) )-3, 0, 128 )",
			"eyes.tz": "-2.5 -var.distance/500",
			"right_brow.tz": "-var.distance/400",
			"left_brow.tz": " -var.distance/400"
		},
		{
			"var.pre_posy": "pos_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}