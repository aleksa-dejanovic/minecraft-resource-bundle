{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.r": "random(id)*pi*4",
			"var.t": "(time*pi*2)/6",
			"var.b": "var.r+var.t/8",
			"var.c": "var.t",
			"var.d": "var.r+var.t/1.2",
			"var.dance": "if(right_leg.rz!=0&&is_on_ground, 1, 0)",
			"var.shdr": "if(is_on_shoulder, (0.5-0.5*cos( clamp(-12 +cos(-pi/6 +var.r +var.t/80)*24 , 0, 1)*pi )) , 1 )",
			"var.nov1": "if(is_on_ground && var.dance==0, (0.5-0.5*cos( clamp((-156 -sin(var.r +(var.t-(limb_swing/6))/160)*158), 0, 1)*pi )), 0)*clamp(1-limb_speed*2, 0, 1)",
			"var.nov2": "if(is_on_ground                , (0.5-0.5*cos( clamp((-499 -sin(var.r +(var.t-(limb_swing/6))/130)*500), 0, 1)*pi )), 0)",
			"var.nov3": "                                 (0.5-0.5*cos( clamp((-499 -cos(var.r +(var.t-(limb_swing/6))/160)*500), 0, 1)*pi ))",
			"var.nov4": "clamp(-cos(var.r+var.t/16)*4*clamp(-9.25 +sin(var.r+var.t/64)*10, 0, 1), -0.5, 0.5)",
			"var.e": "var.r +var.t/3",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.tx": "                                                           if(is_on_shoulder,                    0, !is_riding && !is_on_ground,     cos(var.r+var.c/14)                    , 0                                      ) +( 10 +sin(var.e)/2 )/18*var.nov1",
			"body.ty": "21 +cos(var.b)/10                                         +if(is_on_shoulder,                    0, !is_riding && !is_on_ground, -1 +sin(var.r+var.c/8 ) -cos(var.r+var.t)/4, -abs(sin(limb_swing*2  )*limb_speed)*2 ) +if(var.dance==1, 0, is_riding || is_sitting, clamp(1.8-limb_speed*3.5, 0.3, 1.8 ), 0)",
			"body.tz": "1           +if(var.dance==1, -1.5                   , 0) +if(is_on_shoulder,                    0, !is_riding && !is_on_ground,     sin(var.r+var.c/11)                    , 0                                      ) +(     sin(var.e)/2 )/10*var.nov1",
			"body.rx": "torad(27.5) +if(var.dance==1, sin(var.d)/6 +torad(10), 0) +if(is_on_shoulder, torad(10)*limb_speed, !is_riding && !is_on_ground,    -cos(var.r+var.c/11)/8 +torad(-10)      ,  sin(limb_swing*2*2)/20*limb_speed     ) -clamp(torad(head_pitch)/4, torad(-20), torad(20))*(1-var.nov1) +if(is_riding || is_sitting, torad(10), if(is_on_shoulder, 0, !is_riding && !is_on_ground, clamp(torad(90)*limb_speed*2, 0, torad(50)), clamp(torad(50)*limb_speed, 0, torad(20)) ) ) -torad(10)*var.nov2",
			"body.ry": "                                                           if(is_on_shoulder,                    0, !is_riding && !is_on_ground,  0                                         , -sin(limb_swing*2  )/4 *limb_speed     ) +torad(    -sin(var.e  )*2 )*var.nov1",
			"body.rz": "             if(var.dance==1, -cos(var.d)/4          , 0) +if(is_on_shoulder,                    0, !is_riding && !is_on_ground,    -sin(var.r+var.c/14)/8                  ,  cos(limb_swing*2  )/3 *limb_speed     ) +torad(-10 -sin(var.e*3)/2 )*var.nov1",
			"head2.tx": "            if(var.dance==1, -cos(var.d)/1.5        , 0)                          +( 0.4  -( cos(-(pi/4 +var.e)/2 -sin((-pi/4 +var.e) ) ) -1 )/8 )*var.nov1",
			"head2.ty": "-8         +if(var.dance==1, -sin(var.d)/1.2        , 0) -cos(torad(20)+var.b)/12 +(-0.55 -( cos(-(pi/4 +var.e)/2 -sin((-pi/4 +var.e) ) ) -1 )/8 )*var.nov1",
			"head2.tz": " 0.8       +if(var.dance==1, -sin(var.d)/1.2        , 0)                          +(-0.5  +( cos(-(pi/4 +var.e)/2 -sin((-pi/4 +var.e) ) ) -1 )/6 )*var.nov1",
			"head2.rx": "torad(-27.5)      +( clamp(   torad(head_pitch), torad(-60), torad(60) )*sin(torad(var.hy+90))                      )*var.shdr*(1-var.nov1) +(torad(27.5) -body.rx)/2                                                                                                                         +torad( 165 +sin(var.e*6)*2 +( sin(var.e +cos(var.e)  )*7 -7) -cos( (-pi/4 +var.e)/2 -sin((-pi/4 +var.e) )*2   )*7  -7  )*var.nov1 +torad(13)*var.nov2*(1-var.nov1)",
			"head2.ry": "-body.rz/2 -body.ry -clamp( (-torad(var.hy)/2 +torad(45)*clamp(torad(head_pitch), -1, 1) +torad(90)*torad(var.hy)/3 )*var.shdr +var.nov4, torad(-45), torad(45) )*(1-var.nov1) +if(var.dance==1, -sin(var.d)/4, 0) +torad(-50                  +( sin(var.e +cos(var.e)*2)*7 -7) -cos( (-pi/4 +var.e)/2 -sin((-pi/4 +var.e) )*1.3 )*20 -20 )*var.nov1",
			"head2.rz": "-body.rz +body.ry/2 +clamp( ( torad(var.hy)/6 +torad(20)*clamp(torad(head_pitch), -1, 1) +torad(90)*torad(var.hy)/3 )*var.shdr +var.nov4, torad(-15), torad(15) )*(1-var.nov1)                                     +torad(-70 )*var.nov1"
		},
		{
			"left_wing2.tx": "  1.7      +if(is_on_shoulder, 0, !is_riding && !is_on_ground, -0.5, clamp( 2*limb_speed, 0, 1) ) +( 0.7 )*var.nov1",
			"right_wing2.tx": "-1.7      +if(is_on_shoulder, 0, !is_riding && !is_on_ground,  0.5, clamp(-2*limb_speed,-1, 0) ) -( 0.4 )*var.nov1",
			"left_wing2.ty": " -7        +if(is_on_shoulder, 0, !is_riding && !is_on_ground, sin(pi/3+var.r+var.c)/2, 0)                          -( -cos(pi/4 +var.r +var.t )*0.3 +0.3 )*var.nov2*(1-var.nov1)",
			"right_wing2.ty": "-7        +if(is_on_shoulder, 0, !is_riding && !is_on_ground, sin(pi/3+var.r+var.c)/2, 0)        -( 0.5 )*var.nov1 -( -cos(pi/4 +var.r +var.t )*0.3 +0.3 )*var.nov2",
			"left_wing2.tz": " -0.3      +if(is_on_shoulder, 0, !is_riding && !is_on_ground, limb_speed, 0)                     +( 1   )*var.nov1",
			"right_wing2.tz": "-0.3      +if(is_on_shoulder, 0, !is_riding && !is_on_ground, limb_speed, 0)",
			"left_wing2.rx": " torad( 5) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad(-20) -cos(var.r+var.c)/2*clamp(limb_speed*2, 0, 1), 0 )",
			"right_wing2.rx": "torad( 5) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad(-20) -cos(var.r+var.c)/2*clamp(limb_speed*2, 0, 1), 0 )",
			"left_wing2.ry": " torad(-8) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, clamp(torad(-90)*limb_speed, torad(-60), 0) +sin(-pi/3+var.r+var.c)/2, clamp(torad(-60)*limb_speed, torad(-30), 0) ) +sin(torad(45)+var.b)/40 +if(var.dance==1, torad(-5) +sin(var.d)/5, 0)",
			"right_wing2.ry": "torad( 8) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, clamp(torad( 90)*limb_speed, 0, torad( 60)) -sin(-pi/3+var.r+var.c)/2, clamp(torad( 60)*limb_speed, 0, torad( 30)) ) -sin(torad(45)+var.b)/40 +if(var.dance==1, torad( 5) -sin(var.d)/5, 0)",
			"left_wing2.rz": " torad( 3) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad(-90), -clamp(torad(10)*limb_speed, 0, torad(10)) ) +if(var.dance==1, torad(-15) +sin(var.d)/3, 0)",
			"right_wing2.rz": "torad(-3) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad( 90),  clamp(torad(10)*limb_speed, 0, torad(10)) ) +if(var.dance==1, torad( 15) -sin(var.d)/3, 0)",
			"left_wing_rotation2.rz": "   if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad( 15) +( sin(var.r+var.c) +cos(var.r+var.c)*clamp(3*limb_speed, 0, 1) ), clamp(torad(-20)*limb_speed, torad(-10), 0)) +torad(-15 +( sin(var.e +cos(var.e)*2 )*7 -7) +cos(-pi/4/2 +var.e/2 -sin((-pi/4 +var.e)) )*7 -7 )*var.nov1 -torad( -cos(pi/4 +var.r +var.t -sin(var.r +var.t )/1.3 )*20 +20 )*var.nov2*(1-var.nov1)",
			"right_wing_rotation2.rz": "  if(is_on_shoulder, 0, !is_riding && !is_on_ground, torad(-15) -( sin(var.r+var.c) +cos(var.r+var.c)*clamp(3*limb_speed, 0, 1) ), clamp(torad( 20)*limb_speed, 0, torad( 10))) +torad( 15                                                                                      )*var.nov1 +torad( -cos(pi/4 +var.r +var.t -sin(var.r +var.t )/1.3 )*20 +20 )*var.nov2",
			"left_wing_rotation2.rx": " torad( 20 )*var.nov1 -torad( -cos(var.r +var.t -sin(var.r +var.t )/1.3 )*13 +13 )*var.nov2*(1-var.nov1)",
			"right_wing_rotation2.rx": "                     -torad( -cos(var.r +var.t -sin(var.r +var.t )/1.3 )*13 +13 )*var.nov2",
			"left_wing_rotation2.ry": " pi +torad(-72 +( sin(var.e +cos(var.e ) )*5 -5 ) +cos(    var.e/2 -sin((    var.e ) )/2 )*3 -3 )*var.nov1 -torad( -cos(pi/4 +var.r +var.t -sin(var.r +var.t )/1.3 )*10 +10 )*var.nov2*(1-var.nov1)",
			"right_wing_rotation2.ry": "pi                                                                                                        +torad( -cos(pi/4 +var.r +var.t -sin(var.r +var.t )/1.3 )*10 +10 )*var.nov2"
		},
		{
			"left_leg2.tx": "  if(var.dance==1, 0,  0.8 )                                                                                               +if(is_riding || is_sitting, -0.15, 0)",
			"right_leg2.tx": " if(var.dance==1, 0, -0.8 )                                                                                               +if(is_riding || is_sitting,  0.15, 0)",
			"left_leg2.ty": " -3.3 +clamp(torad(head_pitch)/2, -0.5, 0.4)*(1-var.nov1)                                               +if(is_on_shoulder, 0, is_riding || is_sitting, if(is_riding || is_on_ground, -1.8, 0) -cos(var.b)/14 +clamp(1.8*limb_speed*2.8, 0, 1.8 ), -cos(var.b)/24 -clamp(4*limb_speed, 0, 1)/4)",
			"right_leg2.ty": "-3.3 +clamp(torad(head_pitch)/2, -0.5, 0.4)*(1-var.nov1)                                               +if(is_on_shoulder, 0, is_riding || is_sitting, if(is_riding || is_on_ground, -1.8, 0) -cos(var.b)/14 +clamp(1.8*limb_speed*2.8, 0, 1.8 ), -cos(var.b)/24 -clamp(4*limb_speed, 0, 1)/4)",
			"left_leg2.tz": " -0.3       +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, 0, -cos(limb_swing*2)*limb_speed +limb_speed )                                              +if(is_riding || is_sitting, 0.8 +cos(var.b)/14 -clamp(torad(head_pitch)/2, -0.8, 0.8)*(1-var.nov1), cos(var.b)/7 )",
			"right_leg2.tz": "-0.3       +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, 0,  cos(limb_swing*2)*limb_speed +limb_speed )                                              +if(is_riding || is_sitting, 0.8 +cos(var.b)/14 -clamp(torad(head_pitch)/2, -0.8, 0.8)*(1-var.nov1), cos(var.b)/7 )",
			"left_leg2.rx": " torad(-29) +if(is_on_shoulder, -torad(10)*limb_speed, !is_riding && !is_on_ground, torad(-20) +clamp(torad(90)*limb_speed*2, 0, torad(60)), sin(limb_swing*2)*1.5*limb_speed ) +if(is_riding || is_sitting, torad(-6) +clamp(torad(6)*limb_speed*3, 0, torad(6) ), -cos(var.b)/30 +clamp(torad(head_pitch)/4*(1-var.nov1), torad(-20), torad(20)) +if(is_on_shoulder, 0, is_on_ground, -clamp(torad(90)*limb_speed, 0, torad(30)), 0) ) +torad(-30)*var.nov1 +torad(10)*var.nov2",
			"right_leg2.rx": "torad(-29) +if(is_on_shoulder, -torad(10)*limb_speed, !is_riding && !is_on_ground, torad(-20) +clamp(torad(90)*limb_speed*2, 0, torad(60)),-sin(limb_swing*2)*1.5*limb_speed ) +if(is_riding || is_sitting, torad(-6) +clamp(torad(6)*limb_speed*3, 0, torad(6) ), -cos(var.b)/30 +clamp(torad(head_pitch)/4*(1-var.nov1), torad(-20), torad(20)) +if(is_on_shoulder, 0, is_on_ground, -clamp(torad(90)*limb_speed, 0, torad(30)), 0) )                      +torad(10)*var.nov2",
			"left_leg2.ry": " torad( 5 ) +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, torad(-10), -body.ry) +torad(-30)*var.nov1",
			"right_leg2.ry": "torad(-5 ) +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, torad( 10), -body.ry)",
			"left_leg2.rz": " torad(-2 ) +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, clamp(torad(-15)+limb_speed*4, torad(-15), torad( 0 )), torad(-20)*limb_speed -body.rz )",
			"right_leg2.rz": "torad( 2 ) +if(is_on_shoulder, 0                    , !is_riding && !is_on_ground, clamp(torad( 15)-limb_speed*4, torad( 0 ), torad( 15)), torad( 20)*limb_speed -body.rz )",
			"left_leg.tx": " if(var.dance==1,  1.5,  1.5/0)",
			"right_leg.tx": "if(var.dance==1, -1.5, -1.5/0)",
			"left_leg.ty": " if(var.dance==1, 0, 0) +23.8",
			"right_leg.ty": "if(var.dance==1, 0, 0) +23.8",
			"left_leg.rx": " if(var.dance==1, torad(-20) -sin(torad(45)+var.d)/6, 0)",
			"right_leg.rx": "if(var.dance==1, torad(-20) -sin(torad( 0)+var.d)/6, 0)",
			"left_leg.ry": " if(var.dance==1, torad( 20), 0)",
			"right_leg.ry": "if(var.dance==1, torad(-20), 0)",
			"left_leg.rz": " if(var.dance==1, torad(-20) +cos(var.d)/6, 0)",
			"right_leg.rz": "if(var.dance==1, torad( 20) +cos(var.d)/6, 0)",
			"left_leg2.visible": " var.dance!=1",
			"right_leg2.visible": "var.dance!=1"
		},
		{
			"feathers.rx": "torad(-15) +clamp( torad(-20)*limb_speed +( torad(head_pitch) +sin(var.r+var.t/10 -cos(var.r+var.t/6))/2*torad(head_pitch) )*var.shdr +torad(-30*var.nov1 +15*var.nov2), torad(-30), torad(15) ) -sin(var.b)/40                                                                                  +if(var.dance==1,-cos(var.d)/3, 0)",
			"feathers.rz": "            if(is_on_shoulder, 0, !is_riding && !is_on_ground, 0, sin(limb_swing*2)/3*limb_speed )                                    +torad(-30)*var.nov1                                                                                                                          +if(var.dance==1, cos(var.d)/2, 0)",
			"tail2.rx": "   torad( 20) +if(is_on_shoulder, 0, !is_riding && !is_on_ground, clamp(torad(-30)*limb_speed, torad(-15), 0), 0) +if(is_riding || is_sitting, (torad(27.5) -body.rx) +torad( 20) +cos(var.b)/30, -sin(var.b)/30 +clamp(torad(25)*limb_speed, 0, torad(10))*if(is_on_shoulder, 1, -1)) +if(var.dance==1,    torad(30), 0) +torad(10*var.nov1 +20*var.nov2)",
			"tail2.rz": "               if(is_on_shoulder, 0, !is_riding && !is_on_ground, 0, sin(limb_swing*2)/3*limb_speed ) +torad( sin(var.r +var.t*1.6)*10 )*var.nov3",
			"tail2.ry": "if(var.dance==1,-cos(var.d)/3, 0) -torad( cos(var.r +var.t*1.6)*10 )*var.nov3",
			"beak.tz": "-3 +clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 1, 128 )/500"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+var.t/5)*6))*clamp(-32 +cos((var.r+var.t/5)/1.5)*40 +cos((var.r+var.t/5)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "1 +(-1+sin(hurt_time/1.5)/3*var.hurt +max(0,-3 +death_time/2) -0.3*(0.5-0.5*cos( min(1,var.scared*4)*pi )) )*(1-var.blink)",
			"right_eye.tx": "-1 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"left_eye.tx": "-right_eye.tx",
			"r_pupil.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_pupil.sy": "r_pupil.sy",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		}
	]
}