{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.a": "0",
			"var.r": "random(id)*pi*4",
			"var.up": "var.up +abs( var.pre_posy-pos_y )",
			"var.ls": "limb_swing/if(is_child, 2, 1) +if(is_in_water, var.up*3, 0)",
			"var.m": "clamp( limb_speed +abs( var.position-pos_y ), 0, 1 )",
			"var.b1": "var.r+age/if(is_child, 8, 12)",
			"var.b2": "var.r+age/if(is_child, 3, 5)",
			"var.b3": "var.r+age/if(is_child, 6, 9)",
			"var.play_dead": "if(is_in_water&&body.rz!=0, 0, 0)",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.rotation": "if( varb.fcc, var.rotation, age<9 || is_riding, var.roty, var.roty*min(1,frame_time*3) +var.rotation*max(0,1-frame_time*3) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,    pos_y,    pos_y*min(1,frame_time*5) +var.position*max(0,1-frame_time*5) )",
			"var.tilt": "clamp( var.rotation-var.roty, -1, 1 )*clamp( 1-abs( var.position-pos_y ), 0, clamp( 1.5-limb_speed, 0.5, 1 ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "0",
			"body.ry": "0",
			"body.rz": "0",
			"body.tx": "0",
			"body.ty": "0",
			"body.tz": "0",
			"body2.rx": "if(is_in_water, (-torad(15) +cos(var.b1)/20)*clamp(1-var.m*10, 0, 1) +torad(head_pitch)*clamp(var.m*2, 0, 1) +var.tilt/2*var.tilt, (-torad(5) +cos(pi/8+var.b2)/80 )*clamp(1-limb_speed*10, 0, 1) )",
			"body2.ry": "if(is_in_water,-cos(     var.ls/1.2)/6 *clamp(var.m*2, 0, 1) +var.tilt/3, -cos(var.ls*2)/10)",
			"body2.rz": "if(is_in_water, sin(pi/4+var.ls/1.2)/12*clamp(var.m*3, 0, 1) +( sin(var.b1)/4 +sin(var.b3)/6 )/4*clamp(1-var.m*10, 0, 1) +var.tilt, cos(-pi/4+var.ls*2)/10)",
			"body2.tx": "if(is_in_water,-cos(pi/4+var.ls/1.2)   *clamp(var.m*2, 0, 1), -cos(pi/4+var.ls*2))",
			"body2.ty": "if(is_in_water, sin(var.b1 -sin(var.b1)/2)/2*clamp(1-var.m*10, 0, 1) +clamp(var.m*10, 0, 1)/2, 1.75 +( cos(var.b2)/8 -0.75)*clamp(1-limb_speed*10, 0, 1) ) +20 -6",
			"body2.tz": "-1",
			"head2.rx": "if(is_in_water, -cos(var.b1)/30*clamp(1-var.m*10, 0, 1) +torad(head_pitch), torad(head_pitch) -torad(5) +( torad(5) -cos(-pi/4+var.b2)/40 )*clamp(1-limb_speed*10, 0, 1) +if(is_child, -torad(5), 0) )",
			"head2.ry": "if(is_in_water, torad(var.hy)*cos(torad(head_pitch)) +sin(-pi/8+var.ls/1.2)/10*clamp(var.m*3, 0, 1) -var.tilt/2, -body2.ry -cos(pi/4+var.ls*2)/6 +torad(var.hy))",
			"head2.rz": "if(is_in_water, torad(var.hy)*sin(torad(head_pitch)) +cos(pi/4+var.ls/1.2)/16 *clamp(var.m*3, 0, 1) +var.tilt/3,            cos(pi/4+var.ls*2)/6                 )",
			"head2.tx": "if(is_in_water, -cos(pi/3+var.ls/1.2)/1.5*clamp(var.m*2, 0, 1), -cos(pi/3+var.ls*2)/1.2)",
			"head2.ty": "if(is_in_water, ( sin(torad(head_pitch))*4 -0.5) +(sin(var.b1 -sin(var.b1)/2)/2 -1.5)*clamp(1-var.m*10, 0, 1), if(is_child, -clamp(limb_speed*10, 0, 1), 0) +clamp(limb_speed*10, 0, 1) +cos(var.b2)/6*clamp(1-limb_speed*10, 0, 1)) +15",
			"head2.tz": "if(is_in_water, (-cos(torad(head_pitch))*4 +4) +0.2*clamp(1-var.m*10, 0, 1), 0) -5",
			"head2.sx": "if(is_child, 1.5, 1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx"
		},
		{
			"front_left_leg.rx": " if(is_in_water, -torad( 5) +torad(80)*clamp(-1+var.m*3, 0, 1) +( cos(var.ls/1.2 -sin(var.ls/1.2)/2)           )*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +cos(var.ls/1.2)/8*clamp(var.m*3, 0, 1), 0)",
			"front_right_leg.rx": "if(is_in_water, -torad( 5) +torad(80)*clamp(-1+var.m*3, 0, 1) +(-cos(var.ls/1.2 +sin(var.ls/1.2)/2)           )*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) -cos(var.ls/1.2)/8*clamp(var.m*3, 0, 1), 0)",
			"back_left_leg.rx": "  if(is_in_water,  torad(45) +torad(30)*clamp(-1+var.m*3, 0, 1) +(-cos(var.ls/1.2 +sin(var.ls/1.2)/2) -torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) -sin(var.ls/1.2)/8*clamp(var.m*3, 0, 1) +(-cos(var.ls/2)/3 -cos(var.b3)/4 )/1.5*clamp(1-var.m*10, 0, 1), 0)",
			"back_right_leg.rx": " if(is_in_water,  torad(45) +torad(30)*clamp(-1+var.m*3, 0, 1) +( cos(var.ls/1.2 -sin(var.ls/1.2)/2) -torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +sin(var.ls/1.2)/8*clamp(var.m*3, 0, 1) +( cos(var.ls/2)/3 +cos(var.b3)/4 )/1.5*clamp(1-var.m*10, 0, 1), 0)",
			"front_left_leg.ry": " if(is_in_water,  torad(30) -torad(10)*clamp(-1+var.m*3, 0, 1) +(                                    -torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) -sin(var.b1 -sin(var.b1)/2)/3*clamp(1-var.m*10, 0, 1) -body.ry, 0)",
			"front_right_leg.ry": "if(is_in_water, -torad(30) +torad(10)*clamp(-1+var.m*3, 0, 1) +(                                     torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +sin(var.b1 -sin(var.b1)/2)/3*clamp(1-var.m*10, 0, 1) -body.ry, 0)",
			"back_left_leg.ry": "  if(is_in_water,  torad(40) -torad(35)*clamp(-1+var.m*3, 0, 1) +(                                    -torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +( cos(var.b1)/3 +cos(var.b3)/4 )*clamp(1-var.m*10, 0, 1) -body.ry/2, 0)",
			"back_right_leg.ry": " if(is_in_water, -torad(40) +torad(35)*clamp(-1+var.m*3, 0, 1) +(                                     torad(20))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +( cos(var.b1)/3 +cos(var.b3)/4 )*clamp(1-var.m*10, 0, 1) -body.ry/2, 0)",
			"front_left_leg.rz": " if(is_in_water, -torad(20) +torad(30)*clamp(-1+var.m*3, 0, 1) +(-sin(var.ls/1.2)/2                  -torad(30))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) -sin(pi/5 +var.b1 -sin(pi/6 +var.b1))/2*clamp(1-var.m*10, 0, 1), 0)",
			"front_right_leg.rz": "if(is_in_water,  torad(20) -torad(30)*clamp(-1+var.m*3, 0, 1) +(-sin(var.ls/1.2)/2                  +torad(30))*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)) +sin(pi/4 +var.b1 -sin(      var.b1))/2*clamp(1-var.m*10, 0, 1), 0)",
			"back_left_leg.rz": "  if(is_in_water, -torad(20) +torad(15)*clamp(-1+var.m*3, 0, 1) +( sin(var.ls/1.2)/2                            )*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)), 0)",
			"back_right_leg.rz": " if(is_in_water,  torad(20) -torad(15)*clamp(-1+var.m*3, 0, 1) +( sin(var.ls/1.2)/2                            )*clamp(var.m*6, 0, 1-clamp(-1+var.m*3, 0, 1)), 0)",
			"front_left_leg.tx": " if(is_in_water,  clamp(-1+var.m*3, 0, 1)/4, 0) +3.75",
			"front_right_leg.tx": "if(is_in_water, -clamp(-1+var.m*3, 0, 1)/4, 0) -3.75",
			"back_left_leg.tx": "  if(is_in_water,  clamp(-1+var.m*3, 0, 1)/4, 0) +3.75",
			"back_right_leg.tx": " if(is_in_water, -clamp(-1+var.m*3, 0, 1)/4, 0) -3.75",
			"front_left_leg.sx": " if(!is_in_water, 0, if(is_child, 1.5, 1))",
			"front_left_leg.sy": " front_left_leg.sx",
			"front_left_leg.sz": " front_left_leg.sx",
			"front_right_leg.sx": "front_left_leg.sx",
			"front_right_leg.sy": "front_left_leg.sx",
			"front_right_leg.sz": "front_left_leg.sx",
			"back_left_leg.sx": "  front_left_leg.sx",
			"back_left_leg.sy": "  front_left_leg.sx",
			"back_left_leg.sz": "  front_left_leg.sx",
			"back_right_leg.sx": " front_left_leg.sx",
			"back_right_leg.sy": " front_left_leg.sx",
			"back_right_leg.sz": " front_left_leg.sx"
		},
		{
			"leg4.rx": "-torad(10) +cos(var.ls*2)/pi*1.5*if(is_child, 1, 1.3)",
			"leg3.rx": "-torad(10) -cos(var.ls*2)/pi*1.5*if(is_child, 1, 1.3)",
			"leg2.rx": " torad(10) -cos(var.ls*2)/pi*1.5*if(is_child, 1, 1.3)",
			"leg1.rx": " torad(10) +cos(var.ls*2)/pi*1.5*if(is_child, 1, 1.3)",
			"leg4.ry": "0",
			"leg3.ry": "0",
			"leg2.ry": "0",
			"leg1.ry": "0",
			"leg4.rz": "-torad(if(is_child, 80, 70)) +(-cos( pi/14+var.b2)/14/2 +torad(5))*clamp(1-limb_speed*10, 0, 1) +clamp(-sin(var.ls*2)/3*2*clamp(limb_speed*10, 0, 1), -1, 0)",
			"leg3.rz": " torad(if(is_child, 80, 70)) +( cos( pi/14+var.b2)/14/2 -torad(5))*clamp(1-limb_speed*10, 0, 1) +clamp(-sin(var.ls*2)/3*2*clamp(limb_speed*10, 0, 1),  0, 1)",
			"leg2.rz": "-torad(if(is_child, 80, 70)) +(-cos(-pi/12+var.b2)/17/2 +torad(4))*clamp(1-limb_speed*10, 0, 1) +clamp( sin(var.ls*2)/3*2*clamp(limb_speed*10, 0, 1), -1, 0)",
			"leg1.rz": " torad(if(is_child, 80, 70)) +( cos(-pi/12+var.b2)/17/2 -torad(4))*clamp(1-limb_speed*10, 0, 1) +clamp( sin(var.ls*2)/3*2*clamp(limb_speed*10, 0, 1),  0, 1)",
			"leg4.tx": " 3.75 +if(is_child,  1.8, 0) +4",
			"leg3.tx": "-3.75 +if(is_child, -1.8, 0) -4",
			"leg2.tx": " 3.75 +if(is_child,  1.8, 0) +3.5",
			"leg1.tx": "-3.75 +if(is_child, -1.8, 0) -3.5",
			"leg4.ty": "23.9 +clamp(-sin(var.ls*2)*2*clamp(limb_speed*10, 0, 1), -2, 0)*if(is_child, 2, 1) -21*var.a",
			"leg3.ty": "23.9 +clamp( sin(var.ls*2)*2*clamp(limb_speed*10, 0, 1), -2, 0)*if(is_child, 2, 1) -21*var.a",
			"leg2.ty": "23.9 +clamp( sin(var.ls*2)*2*clamp(limb_speed*10, 0, 1), -2, 0)*if(is_child, 2, 1) -21*var.a",
			"leg1.ty": "23.9 +clamp(-sin(var.ls*2)*2*clamp(limb_speed*10, 0, 1), -2, 0)*if(is_child, 2, 1) -21*var.a",
			"leg4.tz": "-4.8 +cos(var.ls*2)/pi*10",
			"leg3.tz": "-4.8 -cos(var.ls*2)/pi*10",
			"leg2.tz": " 5.2 -cos(var.ls*2)/pi*10",
			"leg1.tz": " 5.2 +cos(var.ls*2)/pi*10",
			"leg4.sx": "if(!is_in_water, if(is_child, 1.5, 1), 0)",
			"leg4.sy": "leg4.sx",
			"leg4.sz": "leg4.sx",
			"leg3.sx": "leg4.sx",
			"leg3.sy": "leg4.sx",
			"leg3.sz": "leg4.sx",
			"leg2.sx": "leg4.sx",
			"leg2.sy": "leg4.sx",
			"leg2.sz": "leg4.sx",
			"leg1.sx": "leg4.sx",
			"leg1.sy": "leg4.sx",
			"leg1.sz": "leg4.sx"
		},
		{
			"top_fern.rx": "   if(is_in_water, -torad(40) +sin(limb_swing/3 +var.b3 +cos(pi/2 +limb_swing/3 +var.b3))/2*(1-var.m) -torad(30)*var.m -sin(var.ls/1.2)/10*clamp(var.m*3, 0, 1), -torad(80) +(-sin(var.b2)/20 )*clamp(1-limb_speed*10, 0, 1) -torad(head_pitch)/1.5)",
			"left_fern.rx": "  if(is_in_water, -torad(10) +sin(limb_swing/3 +var.b3 +cos(pi/4 +limb_swing/3 +var.b3))/8*(1-var.m) -torad( 8)*var.m                                                                     , -torad(20) +(-sin(var.b2)/40 )*clamp(1-limb_speed*10, 0, 1))",
			"right_fern.rx": " if(is_in_water, -torad(10) +sin(limb_swing/3 +var.b3 +cos(pi/4 +limb_swing/3 +var.b3))/8*(1-var.m) -torad( 8)*var.m                                                                     , -torad(20) +(-sin(var.b2)/40 )*clamp(1-limb_speed*10, 0, 1))",
			"left_fern2.ry": " if(is_in_water,  torad(40) -sin(limb_swing/3 +var.b3 +cos(pi/4 +limb_swing/3 +var.b3))/2*(1-var.m) +torad(40)*var.m -cos(var.ls/1.2)/10*clamp(var.m*3, 0, 1) +var.tilt/2,  torad(80))",
			"right_fern2.ry": "if(is_in_water, -torad(40) +sin(limb_swing/3 +var.b3 +cos(pi/4 +limb_swing/3 +var.b3))/2*(1-var.m) -torad(40)*var.m -cos(var.ls/1.2)/10*clamp(var.m*3, 0, 1) +var.tilt/2, -torad(80))",
			"tail2.rx": "      if(is_in_water,                                                        sin(var.b1 -sin(var.b1)/2)/12*clamp(1-var.m*10, 0, 1) +var.tilt/2*var.tilt, (-cos(pi/12+var.b2)/80 )*clamp(1-limb_speed*10, 0, 1) -torad(5) +cos(     var.ls*2*2)/8)",
			"tail2.ry": "clamp(if(is_in_water, -sin(     var.ls/1.2)/2*clamp(var.m*2, 0, 1) +( -sin(     var.b1)/4 +sin(var.b3)/6 )*clamp(1-var.m*10, 0, 1) +var.tilt           , -sin(     var.ls*2)/2), -pi/2.5, pi/2.5)",
			"tail2.rz": "      if(is_in_water, -cos(pi/4+var.ls/1.2)/4*clamp(var.m*2, 0, 1) +( -cos(pi/4+var.b1)/4 +sin(var.b3)/6 )*clamp(1-var.m*10, 0, 1)                     , -cos(pi/4+var.ls*2)/4)",
			"back_fin.rz": "tail2.rz",
			"right_eye.sz": "1+clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"left_eye.sz": "right_eye.sz",
			"right_eye.sx": "right_eye.sz",
			"left_eye.sx": "left_eye.sz",
			"right_eye.sy": "1-pow( clamp((1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), min(1, death_time/4 ), 1), 2 )",
			"left_eye.sy": "right_eye.sy",
			"right_eye.visible": "right_eye.sy!=0",
			"left_eye.visible": "left_eye.sy!=0"
		},
		{
			"var.pre_posy": "pos_y",
			"var.pre_roty": "rot_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}