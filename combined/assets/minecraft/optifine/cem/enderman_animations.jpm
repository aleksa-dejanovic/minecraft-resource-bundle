{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.r": "pi*random(id)*4",
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )",
			"var.carry": "if(right_arm.rx<=-0.49 && left_arm.rx<=-0.49, 1, 0)",
			"var.aggroA": "clamp(if( varb.fcc, var.aggroA, is_aggressive, min(20, var.aggroA +0.4  *frame_time*20), max(0, var.aggroA -0.4 *frame_time*20)), if(!is_alive, 1, 0), 1)",
			"var.aggroC": "clamp(if( varb.fcc, var.aggroC,  head.ty<=-15, min(20, var.aggroC +0.03 *frame_time*20), max(0, var.aggroC -0.2 *frame_time*20)), if(!is_alive, 1, 0), 1)",
			"var.aggroB": "0.5-0.5*cos(var.aggroC*pi)",
			"var.walk": "clamp(limb_speed*3, 0, 1)",
			"var.idle": "1-var.walk",
			"var.ls": "var.r +limb_swing/1.9 *if(var.aggroB!=0, 1.6, 1)",
			"var.b": "var.r +age/(13+3*random(id)) -limb_swing/3",
			"var.ylook": "(0.5-0.5*cos( clamp(-3 +sin(var.r+age/88)*6, var.aggroB, 1 )*pi ))",
			"var.nov1": "if(var.aggroB!=0, 0, clamp(-5.6 +cos(-pi/6 +var.r +age/80 )*6, 0, 1)*clamp(2-limb_speed*4, 0, 1) )*clamp(1-torad(head_pitch)*2, 0, 1)",
			"var.nov2": "clamp(if( varb.fcc, var.nov2, var.aggroB!=1 && var.ylook==0 && head_pitch!=0 || head_yaw!=0 || between(sin(var.r +age/90)*10, -4, 4), min(20, var.nov2 +0.2 *frame_time*20), max(0, var.nov2 -0.2 *frame_time*20)), 0, 1-var.nov1)",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "  torad( -1 +cos( var.b/2  )*2 *var.idle*(1-var.aggroB/3) +head_pitch/8*var.ylook +( 15*(1-var.carry)        )*var.aggroB +( -3*cos(pi/3+var.ls*2) +(20-10*var.carry)*limb_speed )*var.walk  -10*var.carry )     -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)   +(sin(pi*swing_progress)/3)",
			"body.ry": "  torad(     cos( var.b/1.5)*15*var.idle*(1-var.aggroB/3)*(1-body.rx) +clamp(var.hy/5, -18, 18)                           +( 20*cos(     var.ls  )*(1-body.rx)                   )*var.walk                )*(1-var.carry/1.2)",
			"body_y.ry": "torad( (30*sin(sqrt(swing_progress)*pi*2) +var.hy/3 )*sin(swing_progress*pi)  +(-10*(1-var.carry)*var.idle )*var.aggroB )",
			"body.rz": "  torad(           sin(pi/8+var.b)*2 *var.idle*(1-var.aggroB/3)                                                             +(  5*cos(pi/4+var.ls  )                )*var.walk*(1+1*var.aggroB*(1-var.carry)) )",
			"body.tx": "      sin(body.rz)*12 +sin(var.b)*1.5*var.idle*(1-var.aggroB/3) +( 0.4*var.idle  *(1-var.carry))*var.aggroB +(-sin(var.ls+sin(pi/3+var.ls*2)/6)/1.2 -cos(var.ls)*(body.rx*pi)/4*(1-var.carry/1.5) )*var.walk*(1+1*var.aggroB*(1-var.carry))",
			"body.ty": "-2.8 -cos(body.rx)*12 -cos(body.rz)*12+12                       +( 1.6*limb_speed*(1-var.carry))*var.aggroB +( sin(pi/3+var.ls*2 +cos(var.ls*2)/3)*1.3  +2                                        )*var.walk*clamp((1-var.aggroB/2), 0, 1)",
			"body.tz": "     -sin(body.rx)*12 +head_pitch/60*var.ylook                  +(    -1*var.walk*(1-var.carry))*var.aggroB +(-cos(pi/3+var.ls*2)                                              +( 0.5 )*var.carry )*var.walk",
			"head.rx": "0",
			"head.ry": "0",
			"head.rz": "0",
			"head.tx": "0",
			"head.ty": "0",
			"head.tz": "0",
			"headwear.rx": "torad( head_pitch/(2-var.aggroB)*var.ylook                                       +sin(var.b/2  )*3*clamp(1-var.ylook, 0, 1)*var.idle*(1-var.aggroB)  +2*clamp(-sin(hurt_time*pi/5)/3*hurt_time, 0, 3) )     +(sin(limb_swing/2)/3)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)   +(-0.2+sin(-pi/4+swing_progress*pi)/3)*sin(swing_progress*pi)",
			"headwear.ry": "torad( clamp(var.hy/(10-6*var.ylook), -60, 60)*(1-var.aggroB) +var.hy*var.aggroB +sin(var.b/1.5)*3*clamp(1-var.ylook, 0, 1)*var.idle*(1-var.aggroB) )  +torad( 3*clamp(sin(pi/8  +age/17)*3 +cos(pi/8  +age/7.3)*2,-1, 1) )*var.nov2",
			"headwear.rz": "torad( var.hy/9*var.ylook*(1-var.aggroB)                                         +cos( pi/2*clamp(var.ylook, 0, 1)+var.b)*3*var.idle*(1-var.aggroB) )  +torad( 3*clamp(sin(pi/12 +age/17)*3 +cos(pi/12 +age/7.3)*2,-1, 1) )*var.nov2",
			"headwear.tx": "body.tx -1*sin(var.hy/90)*var.aggroB",
			"headwear.ty": "body.ty +1                                    +clamp( 0.2+6*sin(head_pitch/90), -6, 2 )*var.aggroB",
			"headwear.tz": "body.tz +clamp(head_pitch/30*var.ylook,-2, 0) +clamp(  -2-2*cos(head_pitch/45), -2, 2 )*var.aggroB"
		},
		{
			"head2.rx": "torad( -3*clamp(-sin(hurt_time*pi/5)/3*hurt_time, 0, 3) )",
			"head2.ty": "-39                                   +clamp( clamp( if(var.aggroB!=0, -4, -98.9) +sin(        var.r+age/if(var.aggroB!=0, 10, 46) )*if(var.aggroB!=0, 5, 100), 0, 1+2*var.aggroB)*(-1+2*var.aggroB) +(-4 +0.25*sin(age*3) )*var.aggroB +(-2.5 )*var.aggroA*var.aggroB -clamp(3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0), 0, 3), -6, 0)",
			"jaw.rx": "torad( ( 15 )*var.aggroB             -10*clamp(                          -4         +sin(-pi/25 +var.r+age/10                        )*5                        , 0, 1 )*var.aggroB )/3",
			"jaw.ty": "-45 +var.distance/290 +clamp(  -clamp(        if(var.aggroB!=0, -4, -98.9) +sin(-pi/180+var.r+age/if(var.aggroB!=0, 10, 46) )*if(var.aggroB!=0, 5, 100), 0, 1+2*var.aggroB), 0, 6 )        +( 0.25 -0.25*sin(age*3) )*var.aggroB",
			"jaw.tz": " 4 -var.distance/460",
			"jaw.sx": "1 -var.distance/1800 -0.05*var.aggroB",
			"jaw.sy": "jaw.sx",
			"jaw.sz": "jaw.sx"
		},
		{
			"right_arm.rx": "torad(  sin(var.b/1.5 +sin(var.b/1.5) )*3 -clamp(var.hy/80, -1.125, 1.125) +head_pitch/40*var.ylook +( 20+4*sin(var.b*3.5) )*var.aggroB +( 20*cos(var.ls +sin(var.ls)/3) +(17-10*var.carry)*limb_speed )*clamp(limb_speed*1.5, 0, 1)     -(3*cos(limb_swing/2))*if(is_hurt, -sin(hurt_time*pi/5)*hurt_time, 0)                                                                 )*(1-var.carry)  +torad( -30*(1-clamp(sin(swing_progress*pi)*2, 0, 1)) )*var.carry   +torad( 60*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)",
			"left_arm.rx": " torad( -sin(var.b/1.5 -sin(var.b/1.5) )*3 +clamp(var.hy/80, -1.125, 1.125) +head_pitch/40*var.ylook +( 10-4*sin(var.b*3.3) )*var.aggroB +(-20*cos(var.ls -sin(var.ls)/3) +(17-10*var.carry)*limb_speed )*clamp(limb_speed*1.5, 0, 1)     -(3*cos(limb_swing/2))*if(is_hurt, -sin(hurt_time*pi/5)*hurt_time, 0) +(20-20*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)  )*(1-var.carry)  +torad( -30                                           )*var.carry",
			"right_arm.ry": "(  body.ry*(1-var.walk) +torad( (  -20*var.idle )*var.aggroB +(-10 +10*sin(pi/3+var.ls) )*var.walk )                                               )*(1-var.carry)   +torad( var.hy/2 )*sin(swing_progress*pi)",
			"left_arm.ry": " (  body.ry*(1-var.walk) +torad( (   20*var.idle )*var.aggroB +( 10 +10*sin(pi/3+var.ls) )*var.walk )              +(-sin(-pi/2*swing_progress*2)/4))*(1-var.carry)",
			"right_arm.rz": "(  torad( 2 -sin(-pi/8+var.b)*1.3 +( 5*var.idle )*var.aggroB +(  5  -2*cos(pi/3+var.ls) )*var.walk ) +body.rz   +torad( 20*sin((swing_progress)*pi*2))*sin(swing_progress*pi)  )*(1-var.carry) +torad( 20*sin((swing_progress)*pi*2))*sin(swing_progress*pi*2)",
			"left_arm.rz": " (  torad(-2 -sin(-pi/8+var.b)*1.3 +(-5*var.idle )*var.aggroB +( -5  -2*cos(pi/3+var.ls) )*var.walk ) +body.rz                                                                  )*(1-var.carry)",
			"right_arm.tx": "(  body.tx -cos(body.ry)*5                                                                 )*(1-var.carry)  +(-6 )*var.carry   +( -1*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)",
			"left_arm.tx": " (  body.tx +cos(body.ry)*5   +(0.5*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)  )*(1-var.carry)  +( 6 )*var.carry",
			"right_arm.ty": "(  body.ty +1.4 +(-cos(pi/4+var.ls)/2 )*var.walk  )*(1-var.carry)  +(-13 )*var.carry",
			"left_arm.ty": " (  body.ty +1.4 +( cos(pi/4+var.ls)/2 )*var.walk  )*(1-var.carry)  +(-13 )*var.carry",
			"right_arm.tz": "(  body.tz +sin(body.ry)*5                              +(0.2 +0.7*sin(pi/3+var.ls) +0.6*limb_speed )*clamp(limb_speed*1.5, 0, 1)                                                                )*(1-var.carry)  +( 1.5 )*var.carry   +( 3*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)*(1+1*var.carry)",
			"left_arm.tz": " (  body.tz -sin(body.ry)*5 +( 1.5*var.idle )*var.aggroB +(0.2 -0.7*sin(pi/3+var.ls) +0.6*limb_speed )*clamp(limb_speed*1.5, 0, 1)   +(-3*sin(sqrt(swing_progress)*pi*2))*sin(swing_progress*pi)  )*(1-var.carry)  +( 1.5 )*var.carry",
			"right_hand.rx": "torad( ( cos(var.b/2) -1*cos(var.b/1.5)*(1-body.rx) )*var.idle*(1-var.aggroB/3) +( cos(pi/3+var.ls*2)  -sin(pi/3+var.ls*2 +cos(var.ls*2)/3)*(1-var.aggroB/2)  +(3*cos(pi/3+var.ls*2)+10*limb_speed)/10 -2 )*var.walk   -(28*sin(limb_swing/2) +20)/8*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -var.hy/200                                  )*var.carry",
			"left_hand.rx": " torad( ( cos(var.b/2) +1*cos(var.b/1.5)*(1-body.rx) )*var.idle*(1-var.aggroB/3) +( cos(pi/3+var.ls*2)  -sin(pi/3+var.ls*2 +cos(var.ls*2)/3)*(1-var.aggroB/2)  +(3*cos(pi/3+var.ls*2)+10*limb_speed)/10 -2 )*var.walk   -(28*sin(limb_swing/2) +20)/8*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +var.hy/200   +(sin(pi*swing_progress)/3)*12 )*var.carry",
			"right_hand.rz": "torad( 2.1 +( sin(var.b)*3.3 +sin(pi/8+var.b)/1.5 -cos( var.b/1.5)/4*(1-body.rx) )*var.idle*(1-var.aggroB/3)  +( -(sin(var.ls+sin(pi/3+var.ls*2)/6)/1.2  -cos(var.ls)*(body.rx*pi)/4)*2  +2.5*cos(pi/4+var.ls) )*var.walk )*var.carry",
			"left_hand.rz": " torad(-2.1 +( sin(var.b)*3.3 +sin(pi/8+var.b)/1.5 -cos( var.b/1.5)/4*(1-body.rx) )*var.idle*(1-var.aggroB/3)  +( -(sin(var.ls+sin(pi/3+var.ls*2)/6)/1.2  -cos(var.ls)*(body.rx*pi)/4)*2  +2.5*cos(pi/4+var.ls) )*var.walk )*var.carry",
			"right_hand.sy": "1 +( -(sin(pi/3+var.ls*2 +cos(var.ls*2)/3)*1.3 +2)/40*var.walk )*var.carry",
			"left_hand.sy": " 1 +( -(sin(pi/3+var.ls*2 +cos(var.ls*2)/3)*1.3 +2)/40*var.walk )*var.carry"
		},
		{
			"right_leg.rx": "(-cos(var.ls +cos(var.ls)/3)/2.5 )*clamp(0.2-limb_speed*3, 0, 0.2)*(1-var.aggroB)",
			"left_leg.rx": " ( cos(var.ls -cos(var.ls)/3)/2.5 )*clamp(0.2-limb_speed*3, 0, 0.2)*(1-var.aggroB)",
			"right_leg.rz": "-torad( clamp(-1*sin(var.ls), 0, 1) -2*var.aggroB )*var.walk +torad( 1*var.idle*(1-var.carry) )*var.aggroB",
			"left_leg.rz": " -torad( clamp(-1*sin(var.ls),-1, 0) +2*var.aggroB )*var.walk +torad(-6*var.idle*(1-var.carry) )*var.aggroB",
			"right_leg.ry": "torad( clamp(-3*sin(var.ls), 0, 3) )*var.walk",
			"left_leg.ry": " torad( clamp(-3*sin(var.ls),-3, 0) )*var.walk",
			"right_leg.ty": "-3",
			"left_leg.ty": " -3",
			"right_foot.rx": "torad(   -cos( var.b/1.5)*1.3*(1-var.aggroB/3) -clamp(var.hy/60, -1.5, 1.5) -head_pitch/50*var.ylook +(-8*(1-var.carry) )*var.aggroB )*var.idle*(1-var.carry/1.5)  +( (torad(7 +7*var.aggroB*(1-var.carry/2)) -cos(var.ls +cos(var.ls)/3*(1-var.aggroB) )/2.5*(1-0.3*var.aggroB)  -sin(pi/6+ var.ls +cos(pi/6+ var.ls)/2 )/15 )*var.walk )",
			"left_foot.rx": " torad(    cos( var.b/1.5)*1.3*(1-var.aggroB/3) +clamp(var.hy/60, -1.5, 1.5) -head_pitch/50*var.ylook +( 6*(1-var.carry) )*var.aggroB )*var.idle*(1-var.carry/1.5)  +( (torad(7 +7*var.aggroB*(1-var.carry/2)) +cos(var.ls -cos(var.ls)/3*(1-var.aggroB) )/2.5*(1-0.3*var.aggroB)  +sin(pi/6+ var.ls -cos(pi/6+ var.ls)/2 )/15 )*var.walk )",
			"right_foot.ry": "torad( 6 +cos( var.b/1.5)*5*(1-var.aggroB/3)                                 )*var.idle +torad( 2 )",
			"left_foot.ry": " torad(-6 +cos( var.b/1.5)*5*(1-var.aggroB/3) +(-8*(1-var.carry) )*var.aggroB )*var.idle +torad(-2 )",
			"right_foot.rz": "torad( sin(var.b +sin(var.b*2)/40*(1-var.carry/1.5) )*3*var.idle*(1-var.aggroB/3) ) +torad( -(2+2*var.aggroB*(1-var.carry))*sin(var.ls+sin(pi/3+var.ls*2)/6) +(1+1*var.aggroB*(1-var.carry))*cos(var.ls)*(body.rx*pi/2) )*var.walk",
			"left_foot.rz": " torad( sin(var.b +sin(var.b*2)/40*(1-var.carry/1.5) )*3*var.idle*(1-var.aggroB/3) ) +torad( -(2+2*var.aggroB*(1-var.carry))*sin(var.ls+sin(pi/3+var.ls*2)/6) +(1+1*var.aggroB*(1-var.carry))*cos(var.ls)*(body.rx*pi/2) )*var.walk",
			"right_foot.tx": "-2 +(-0.5*var.idle )*var.aggroB*(1-var.carry)",
			"left_foot.tx": "  2",
			"right_foot.tz": "( (-cos(var.ls +cos(var.ls)/2)*3 +0.2)*4*(1-0.2*var.aggroB) +2*var.aggroB +1 )*var.walk +(-6*(1-var.carry)*var.idle )*var.aggroB",
			"left_foot.tz": " ( ( cos(var.ls -cos(var.ls)/2)*3 +0.2)*4*(1-0.2*var.aggroB) +2*var.aggroB +1 )*var.walk +( 3*(1-var.carry)*var.idle )*var.aggroB",
			"right_foot.ty": "clamp(1 -cos(pi/2+ pi/18+var.ls)*2.5*var.walk, -4, 0)*2*var.walk",
			"left_foot.ty": " clamp(1 +cos(pi/2+ pi/18+var.ls)*2.5*var.walk, -4, 0)*2*var.walk"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/16)*12))*clamp(-32 +cos((var.r+age/16)/1.5)*40 +cos((var.r+age/16)/4)*40, 0, 1), 0, 1-var.aggroB ), 2 )",
			"var.eye_top": "   ( ( clamp(2*clamp(-0.2 -cos(var.r+age/70)*2, 0, 1), 0, 0.3) +clamp(sin(var.r+age/38) +sin(var.r+age/13), -0.2, 0.2)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)/2 +torad(head_pitch)/10 )*(1-var.aggroB) )*(1-var.blink) +var.blink",
			"var.pupil_y": "0.5 +clamp(head_pitch/120, -0.2, 0.5) +(-1.5 -cos(limb_swing/3)/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10",
			"var.pupil_x": "( -var.hy/(80 +80*var.ylook) +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.2, 0.2)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1) +(-sin(pi/4+var.r+age/10)*9 )*clamp(var.nov1*4, 0, 1) )*(1-var.aggroB) +clamp(cos(age/3)*10,-0.1, 0.1)*var.aggroB",
			"right_eye.tz": "-8 -var.distance/1000",
			"left_eye.tz": "right_eye.tz",
			"r_pupil.tz": "right_eye.tz+8",
			"l_pupil.tz": "right_eye.tz+8",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.pupil_x+1,  0, 2 )",
			"l_pupil.tx": "clamp( var.pupil_x-1, -2, 0 )",
			"r_pupil.ty": "clamp( var.pupil_y+0.5, -r_eye_white.sy+0.7, 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+0.5, -l_eye_white.sy+0.7, 1 )",
			"r_pupil.sy": "clamp(1 +var.pupil_y-0.5 +r_eye_white.sy-1, 0, clamp( r_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"l_pupil.sy": "clamp(1 +var.pupil_y-0.5 +l_eye_white.sy-1, 0, clamp( l_eye_white.sy, 0, clamp(-var.pupil_y+1.5, 0.5, 1) ) )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.frame_counter_prev": "frame_counter"
		}
	]
}