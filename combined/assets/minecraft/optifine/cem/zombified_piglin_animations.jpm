{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing/if(is_child, 3, 1)/1.3",
			"var.b": "var.r +age/if(is_child, 50, 80)*pi*2",
			"var.c": "var.r +age/if(is_child, 10, 16)",
			"var.sniff": "clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(-head_pitch +clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), -1, 1)",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,                        pos_y,                                       pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "torad(if(is_child, -5, 10)) +sin(torad( 45)+var.ls*2)/8*limb_speed +clamp(-torad(10)*(limb_speed*3), torad(-10), 0) +sin(torad(-90)+var.b)/40 +torad(head_pitch) +clamp(torad(var.hy)/2, 0, pi/2) +clamp(torad(var.hy)/4, -pi/2, 0) +sin(var.c +sin(var.c))/4*clamp(1-limb_speed*3, 0, 1) -sin(pi*2*swing_progress)/3",
			"head.ry": "torad(var.hy)/1.2",
			"head.rz": "   cos(          var.ls)/4*limb_speed +clamp(torad(40)-limb_speed, 0, torad(10))*if(is_child, -0.5, 1) +clamp(torad(5)-limb_speed/4, 0, torad(5)) +clamp(torad(var.hy)/2, 0, pi/2) -cos(var.c*2)/10*clamp(1-limb_speed*3, 0, 1) -sin(pi*swing_progress)/3",
			"head.tx": "( -cos(torad(45)+var.ls)*2*limb_speed +clamp(1-limb_speed*2, 0, 1) -torad(var.hy) +sin(pi*swing_progress)*2 ) * (1-0.5*var.child_scale)",
			"head.ty": "( 1 +if(is_child, -1, 0)*limb_speed*2 +(sin(var.b)/4 +sin(torad(135)+var.ls*2)*if(is_child, 3, 1.5)*limb_speed)/if(is_child, 1.5, 1) +cos(var.ls*2)*if(is_child, 0.5, 1.5)/4*limb_speed +cos(age/16+limb_swing/2 +sin(age/16+limb_swing/2))*if(is_child, 0, 0.5)*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress)*2 ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"head.tz": "( (if(is_child, if(is_riding, -3, -1), -4.2 +clamp(2-limb_speed*4, 0, 2)) -sin(var.b)/4 -sin(-pi*swing_progress))/if(is_child, 1.5, 1) +1*clamp(limb_speed*2, 0, 1) -cos(var.c +sin(var.c))*2*clamp(1-limb_speed*3, 0, 1) ) * (1-0.5*var.child_scale)",
			"body.rx": "torad(if(is_child, if(is_riding, 10, -5), 20)) +sin(var.b)/40*if(is_child, -0.8, 1) +(-torad(5) +cos(var.c +sin(var.c))/4)/2*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress)/3",
			"body.ry": " torad(var.hy)/6  -sin(          var.ls)/3*clamp(limb_speed*1.3, 0, 1) +sin(-pi*swing_progress)/1.2",
			"body.rz": "-torad(var.hy)/14 -cos(torad(45)+var.ls)/if(is_child, 4, 9)*limb_speed +clamp(torad(5)-limb_speed/4, 0, torad(5)) -sin(pi*swing_progress)/3",
			"body.tx": "head.tx",
			"body.ty": "head.ty +( -cos(var.ls*2)*if(is_child, 0.5, 1.5)/4*limb_speed ) * (1-0.5*var.child_scale)",
			"body.tz": "head.tz +0.5 * (1-0.5*var.child_scale)",
			"headwear.rx": "head.rx",
			"headwear.ry": "head.ry",
			"headwear.rz": "head.rz",
			"headwear.tx": "head.tx*if(is_child, 1.5, 1)",
			"headwear.ty": "head.ty*if(is_child, 1.5, 1)",
			"headwear.tz": "head.tz*if(is_child, 1.5, 1)",
			"headwear.sx": "if(is_child, 1.5, 1)",
			"headwear.sy": "headwear.sx",
			"headwear.sz": "headwear.sx"
		},
		{
			"right_arm.rx": "if(is_in_lava&&!is_child, torad(-60), 0) +if(is_child, torad(-70), 0) +torad(var.hy)/8 -sin(torad(30)+var.ls)/if(is_child, 3, 0.8)*limb_speed +sin(var.b-torad(60))/20 +sin(var.c +sin(var.c))/5*clamp(1-limb_speed*3, 0, 1)*if(is_child||is_in_lava, 1, -1) -sin(pi*2*swing_progress) -sin(swing_progress*pi)/2",
			"left_arm.rx": " if(is_in_lava&&!is_child, torad(-60), 0) +if(is_child, torad(-70), 0) -torad(var.hy)/8 +sin(torad(30)+var.ls)/if(is_child, 3, 0.8)*limb_speed +sin(var.b-torad(60))/20 +sin(var.c +sin(var.c))/5*clamp(1-limb_speed*3, 0, 1)*if(is_child||is_in_lava, 1, -1) +sin(pi*swing_progress)*2",
			"right_arm.ry": "clamp(-(var.hy/80)*right_arm.rx/2, torad(-30), torad(30)) +torad(-5)+torad( 25)*limb_speed +sin(torad( 90)+var.b)/20 +(-sin(var.ls)/3 +torad(-25))*clamp(limb_speed*1.3, 0, 1) +torad( 20)",
			"left_arm.ry": " clamp(-(var.hy/80)* left_arm.rx/2, torad(-30), torad(30)) +torad( 5)+torad(-25)*limb_speed +sin(torad(-90)+var.b)/20 +(-sin(var.ls)/3 +torad( 25))*clamp(limb_speed*1.3, 0, 1) +torad(-20) +sin(-pi/2*swing_progress*2)/4",
			"right_arm.rz": "if(is_in_water||is_in_lava, torad( 15), torad( 20)*limb_speed) +clamp(-torad(head_pitch)/8, 0, torad( 45)) -sin(pi*swing_progress*2)/2",
			"left_arm.rz": " if(is_in_water||is_in_lava, torad(-15), torad(-20)*limb_speed) +clamp( torad(head_pitch)/8, torad(-45), 0) -sin(pi*swing_progress)",
			"right_arm.tx": "body.tx*0.9 +(-5 +sin(pi*swing_progress)*3 ) * (1-0.5*var.child_scale)",
			"left_arm.tx": " body.tx*0.9 +( 5 -sin(pi*swing_progress)*3 ) * (1-0.5*var.child_scale)",
			"right_arm.ty": "body.ty +( 2.7 -limb_speed +sin(torad(-60)+var.b)/5 -sin(var.ls*2)*limb_speed  -sin(pi*swing_progress*2)*2 +sin(pi*swing_progress) ) * (1-0.5*var.child_scale)",
			"left_arm.ty": " body.ty +( 2.7 -limb_speed +sin(torad(-60)+var.b)/5 -sin(var.ls*2)*limb_speed +clamp(1-limb_speed*2, 0, 1) -sin(pi*swing_progress) ) * (1-0.5*var.child_scale)",
			"right_arm.tz": "( clamp(2-limb_speed*4, 0, 2) -sin(var.b)/4 -sin(var.ls)*4*limb_speed +if(is_child, -2 +if(is_riding, -2, 0), -4) +torad(var.hy) -sin(-pi*swing_progress)/if(is_child, 1.5, 1) +2*clamp(limb_speed*2, 0, 1) -cos(var.c +sin(var.c))*1.5*clamp(1-limb_speed*3, 0, 1) -sin(pi*swing_progress)*4 ) * (1-0.5*var.child_scale)",
			"left_arm.tz": " ( clamp(2-limb_speed*4, 0, 2) -sin(var.b)/4 +sin(var.ls)*4*limb_speed +if(is_child, -2 +if(is_riding, -2, 0), -4) -torad(var.hy) -sin(-pi*swing_progress)/if(is_child, 1.5, 1) +2*clamp(limb_speed*2, 0, 1) -cos(var.c +sin(var.c))*1.5*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress)*6 ) * (1-0.5*var.child_scale)"
		},
		{
			"right_leg.rx": "if(is_riding, -torad(85), clamp(torad( 5)-limb_speed, 0, torad( 5)) +sin(var.b)/40 +sin(var.ls)/6 +sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +clamp(-cos(torad(45)+var.ls)/2*clamp(limb_speed*1.5, 0, 1), 0, torad(30)) +torad(7)*limb_speed +if(is_child, torad(2), 0) -torad(var.hy)/30 +clamp((torad(5) +cos(torad(45)+var.c +sin(var.c))/12)*clamp(1-limb_speed*3, 0, 1),          0, torad(20))) +(sin(-pi*swing_progress)/5)",
			"left_leg.rx": " if(is_riding, -torad(85), clamp(torad(-5)+limb_speed, torad(-5), 0) +sin(var.b)/40 -sin(var.ls)/6 -sin(var.ls)/if(is_child, 1, 1.5)*limb_speed +clamp( cos(torad(45)+var.ls)/2*clamp(limb_speed*1.5, 0, 1), 0, torad(30)) +torad(7)*limb_speed +if(is_child, torad(2), 0) +torad(var.hy)/30 +clamp((torad(5) +cos(          var.c +sin(var.c))/12)*clamp(1-limb_speed*3, 0, 1), torad(-10), torad(20))) +(sin(-pi*swing_progress)/5)",
			"right_leg.ry": "if(is_riding,  torad(20), torad( 5) +clamp(torad(-15)+limb_speed, torad(-15), 0)) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), torad(-10), 0)",
			"left_leg.ry": " if(is_riding, -torad(20), torad(-5) +clamp(torad(- 5)+limb_speed, torad(- 5), 0)) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), 0, torad( 10))",
			"right_leg.rz": "if(is_riding,          0, torad( 6)) +if(is_child,  sin(var.b)/100, 0)",
			"left_leg.rz": " if(is_riding,          0, torad(-6)) +if(is_child, -sin(var.b)/100, 0)",
			"right_leg.tx": "(-2 -sin(var.ls +sin(var.ls)/2)*limb_speed ) * (1-0.5*var.child_scale)",
			"left_leg.tx": " ( 2 -sin(var.ls +sin(var.ls)/2)*limb_speed ) * (1-0.5*var.child_scale)",
			"right_leg.ty": "( 0.2 +clamp(12 +sin(torad(45)+var.ls)*4*limb_speed +(1*limb_speed) +if(is_child, (head.ty-12*var.child_scale)*limb_speed*2 +if(is_riding, 2, 0), 0), 0, 12.2) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"left_leg.ty": " ( 0.2 +clamp(12 -sin(torad(45)+var.ls)*4*limb_speed +(1*limb_speed) +if(is_child, (head.ty-12*var.child_scale)*limb_speed*2 +if(is_riding, 2, 0), 0), 0, 12.2) ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"right_leg.tz": "( if(is_child, 0, clamp(2-limb_speed*4, 0, 2)) +clamp((sin(torad( 90)+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1) +if(is_child, -1 +if(is_riding, 1, 0), -0.2                                                ) +if(is_riding, 0, -sin(var.b)/3 +torad(var.hy)/2 +clamp((-1 -cos(torad(45)+var.c +sin(var.c)) )*clamp(1-limb_speed*3, 0, 1), -2, 0)) +(sin(pi*swing_progress)*2) ) * (1-0.5*var.child_scale)",
			"left_leg.tz": " ( if(is_child, 0, clamp(2-limb_speed*4, 0, 2)) +clamp((sin(torad(-90)+var.ls)*6)*clamp(limb_speed*1.5, 0, 1) +(3*limb_speed), -6, 1) +if(is_child, -1 +if(is_riding, 1, 0), -0.2 +if(is_riding, 0, -clamp(2-limb_speed*4, 0, 2))) +if(is_riding, 0, -sin(var.b)/3 -torad(var.hy)/2 +clamp((-1 -cos(          var.c +sin(var.c)) )*clamp(1-limb_speed*3, 0, 1), -2, 1)) +(sin(pi*swing_progress)*2) ) * (1-0.5*var.child_scale)"
		},
		{
			"nose.ty": "     -2 +sin(     pi/2+(var.r+age)) /10*var.sniff",
			"tusks.ty": "    -2 -sin(pi/4+pi/2+(var.r+age)) /10*var.sniff",
			"nose.rx": "  (-0.5 +sin(     pi/3+(var.r+age)))/17*var.sniff",
			"tusks.rx": "-(-0.5 +sin(pi/4+pi/2+(var.r+age)))/17*var.sniff",
			"right_ear2.rx": "torad(if(is_child, 5, -5)) +torad(20)*clamp(limb_speed*3, 0, 1) -torad(head_pitch)/3 -sin(torad(-45)+var.c +sin(var.c)*2)/4*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress*2)/2 +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"left_ear2.rx": " torad(if(is_child, 5, -5)) +torad(20)*clamp(limb_speed*3, 0, 1) -torad(head_pitch)/3 -sin(torad(-45)+var.c +sin(var.c)*2)/4*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress*2)/2 +clamp( -(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"right_ear2.ry": "torad(8)",
			"left_ear2.ry": "-torad(8)",
			"right_ear2.rz": "clamp(torad( 15) +cos(var.b)/20 -sin(var.ls*2)/2*limb_speed +clamp(torad(var.hy)/4, 0, torad( 30))*clamp(1-limb_speed*2, 0, 1) +cos(age/8+limb_swing/2)/8*clamp(1-limb_speed*3, 0, 1) +sin(pi*swing_progress*2) +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 +(var.position-pos_y)*2, -torad(17), pi/2),   0, pi)",
			"left_ear2.rz": " clamp(torad(-15) -cos(var.b)/20 +sin(var.ls*2)/2*limb_speed +clamp(torad(var.hy)/4, torad(-30), 0)*clamp(1-limb_speed*2, 0, 1) +cos(age/8+limb_swing/2)/8*clamp(1-limb_speed*3, 0, 1) -sin(pi*swing_progress*2) +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 -(var.position-pos_y)*2, -pi/2, torad(17)), -pi,  0)"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/7)*3))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1), 2 )",
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.sy": "1-var.blink",
			"l_pupil.sy": "1-var.blink",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}