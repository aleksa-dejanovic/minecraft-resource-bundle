{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.right_arm_rx": "if( varb.fcc, var.right_arm_rx, right_arm.rx )",
			"var.left_arm_rx": " if( varb.fcc,  var.left_arm_rx,  left_arm.rx )",
			"var.right_leg_rx": "if( varb.fcc, var.right_leg_rx, right_leg.rx )",
			"var.left_leg_rx": " if( varb.fcc,  var.left_leg_rx,  left_leg.rx )",
			"var.right_leg_ry": "if( varb.fcc, var.right_leg_ry, right_leg.ry )",
			"var.left_leg_ry": " if( varb.fcc,  var.left_leg_ry,  left_leg.ry )",
			"var.right_leg_rz": "if( varb.fcc, var.right_leg_rz, right_leg.rz )",
			"var.left_leg_rz": " if( varb.fcc,  var.left_leg_rz,  left_leg.rz )",
			"var.charge_r": "if( (var.right_arm_rx-sin(swing_progress)*2)<torad(-90) && ( ( var.left_arm_rx-sin(swing_progress)*2)-(var.right_leg_rx/1.4))>torad(-90), 1, 0)",
			"var.charge_l": "if( ( var.left_arm_rx-sin(swing_progress)*2)<torad(-90) && ( (var.right_arm_rx-sin(swing_progress)*2)-( var.left_leg_rx/1.4))>torad(-90), 1, 0)",
			"var.look": "(0.5-0.5*cos( clamp(-4.5 +cos((age+limb_swing)/80)*6, 0, 1)*pi ))",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing/if(is_child, 2.4, 1.6)",
			"var.b": "var.r +age/10",
			"var.sniff": "clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(-head_pitch +clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), -1, 1)",
			"var.Lear": "clamp( cos(          var.r +age/1.2/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/1.2/(20*12) )*8 -5 , 0 , 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/1.2/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/1.2/(15*12) )*8 -5 , 0 , 1 ) )",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*16) +var.head_rot*max(0,1-frame_time*16) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,                        pos_y,                                       pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"head.rx": "torad(head_pitch) -sin(pi*2*swing_progress)/5 +if(var.charge_r==1||var.charge_l==1, torad(-5), 0) +clamp(torad(var.hy)/4, 0, torad(90)) +clamp(-torad(var.hy)/4, 0, torad(90)) +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"head.ry": "torad(var.hy)/1.2 +if(var.charge_l==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(           var.r+age/10 +sin(torad(45)+var.r*2+age/5)/2)/3 *var.look",
			"head.rz": "torad(var.hy)/4   +if(var.charge_l==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(torad(-45)+var.r+age/10 +sin(          var.r*2+age/5)/2)/10*var.look +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"head.tx": "if(var.charge_r==1, 1 +sin(pi*swing_progress), var.charge_l==1, -1 -sin(pi*swing_progress), sin(pi*swing_progress)) +if(is_riding, 0.5, clamp( 0.7-limb_speed*2,  0, 0.7)*if(var.charge_r==1||var.charge_l==1, 0, 1)) +sin(torad( 45)+limb_swing/1.6     )  *clamp(limb_speed*1.5, 0, 1)/1.2",
			"head.ty": " 0.8 +sin(var.b)/2 +sin(pi*swing_progress)*2 +if(is_riding, -1, 0) +sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
			"head.tz": "-1.5 -sin(var.b)/2 -sin(pi*swing_progress)   +if(var.charge_r==1||var.charge_l==1, 2, -1) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"body.rx": "torad(10) +sin(var.b)/20                                                                +if(var.charge_r==1||                                      var.charge_l==1, torad(-10) +sin(pi*swing_progress)/2,  sin(pi*swing_progress)/3) -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"body.ry": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-15)+limb_speed, torad(-15), 0)) +if(var.charge_r==1, torad( 25) -sin(pi*swing_progress)  , var.charge_l==1, torad(-25) +sin(pi*swing_progress)  , -sin(pi*swing_progress)/3) -sin(limb_swing/1.6)/3 *clamp(limb_speed*1.5, 0, 1)/1.2 +torad(var.hy)/6",
			"body.rz": "head.rz                                                                                               +if(var.charge_r==1, torad( 5 ) -sin(pi*swing_progress)/9, var.charge_l==1, torad(-5 ) +sin(pi*swing_progress)/9, -sin(pi*swing_progress)/6) +sin(limb_swing/1.6)/10*clamp(limb_speed*1.5, 0, 1)/1.2 -torad(var.hy)/4 -sin(torad(-45)+var.r+age/10 +sin(var.r*2+age/5)/2)/10*var.look -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"body.tx": "head.tx",
			"body.ty": "head.ty -(sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)) +sin(torad(160)+limb_swing/1.6*2 -cos(torad(160)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
			"body.tz": "head.tz +if(var.charge_r==1||var.charge_l==1, 0, 1)",
			"headwear.rx": "head.rx",
			"headwear.ry": "head.ry",
			"headwear.rz": "head.rz",
			"headwear.tx": "head.tx",
			"headwear.ty": "head.ty",
			"headwear.tz": "head.tz"
		},
		{
			"right_arm.rx": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-20)+limb_speed, torad(-20), 0)) +if(var.charge_r==1, torad(-120) +torad(-25)*limb_speed -torad(var.hy)/2 -sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(var.charge_l==1, torad(-45), 0),     -sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) +torad(var.hy)/8 +if(var.charge_r==1||var.charge_l==1, (sin(pi*swing_progress)*if(var.charge_r==1, 2, 1)), -sin(pi*swing_progress*2)) +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"left_arm.rx": " if(var.charge_r==1||var.charge_l==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( var.charge_l==1, torad(-120) +torad(-25)*limb_speed -torad(var.hy)/2 +sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(var.charge_l==1, 0, torad(-45)),      sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) -torad(var.hy)/8 +if(var.charge_r==1||var.charge_l==1, (sin(pi*swing_progress)*if(var.charge_r==1, 1, 2)),  sin(pi*swing_progress  )) +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"right_arm.ry": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-25)+limb_speed, torad(-25), 0)) +if(var.charge_r==1, torad( 10 ) +torad( 25)*limb_speed +torad(var.hy)/1.5, if( var.charge_l==1, torad(-30),             if(is_riding, if(var.charge_l==1, 0, torad( 30)), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(var.b+torad(90))/10 -(sin(pi/2*swing_progress*2)/2)*if(var.charge_r==1, clamp(limb_speed*2, 1, 2), 1)",
			"left_arm.ry": " if(var.charge_r==1||var.charge_l==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( var.charge_l==1, torad(-10 ) +torad(-25)*limb_speed +torad(var.hy)/1.5, if(var.charge_r==1, torad( 30),             if(is_riding, if(var.charge_l==1, torad( 30), 0), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(var.b-torad(90))/10 +(sin(pi/2*swing_progress*2)/2)*if(var.charge_r==1, 1, clamp(limb_speed*2, 1, 2))",
			"right_arm.rz": "torad( 10) +if(var.charge_r==1, torad(-30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) -torad(head_pitch)/14 +if(var.charge_l==1, -(sin(pi*swing_progress  )/2), -(sin(pi*swing_progress*2)/4)) -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"left_arm.rz": " torad(-10) +if( var.charge_l==1, torad( 30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) +torad(head_pitch)/14 +if(var.charge_l==1, -(sin(pi*swing_progress*2)/4), -(sin(pi*swing_progress  )/2)) +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"right_arm.tx": "-5 +body.tx +if(var.charge_r==1, -1,  var.charge_l==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 +limb_speed, 0) +sin(pi*swing_progress)*if(var.charge_r==1||var.charge_l==1, 2, 0)",
			"left_arm.tx": "  5 +body.tx +if( var.charge_l==1,  1, var.charge_r==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 -limb_speed, 0) -sin(pi*swing_progress)*if(var.charge_r==1||var.charge_l==1, 2, 0)",
			"right_arm.ty": "2 +body.ty +sin(var.b-torad(60))/3 +if(var.charge_r==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(var.charge_r==1||var.charge_l==1, sin(pi*swing_progress), 0)",
			"left_arm.ty": " 2 +body.ty +sin(var.b-torad(60))/3 +if( var.charge_l==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(var.charge_r==1||var.charge_l==1, sin(pi*swing_progress), 0)",
			"right_arm.tz": "-1 +clamp(-1+limb_speed*3, -1, 0) -sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(var.b)/2 +torad(var.hy) +if(var.charge_r==1,  2 -sin(pi*swing_progress)*6, var.charge_l==1, 1 -limb_speed*2 +sin(pi*swing_progress)*6, clamp(-1+limb_speed*3, -1, 0) -sin(pi*swing_progress)*2)                                                                 +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
			"left_arm.tz": " -1 +clamp( 1-limb_speed*3,  0, 1) +sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(var.b)/2 -torad(var.hy) +if(var.charge_r==1, -1 +sin(pi*swing_progress)*6, var.charge_l==1, 2               -sin(pi*swing_progress)*6, clamp( 1-limb_speed*3,  0, 1) +sin(pi*swing_progress)*2) +if(!(var.charge_r==1||var.charge_l==1)&&is_riding, -3, 0) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
		},
		{
			"right_leg.rx": "if(is_riding, var.right_leg_rx, clamp(torad(-10)+limb_speed  , torad(-10), 0) +(torad(2)+sin(torad( 20)+var.b)/20) +sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) -torad(var.hy)/30 +if(var.charge_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
			"left_leg.rx": " if(is_riding,  var.left_leg_rx, clamp(torad( 15)-limb_speed  , 0, torad( 15)) +(torad(2)+sin(torad(-20)+var.b)/20) -sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) +torad(var.hy)/30 +if(var.charge_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
			"right_leg.ry": "if(is_riding, var.right_leg_ry, clamp(torad(  5)-limb_speed  , 0, torad(  5))) +torad( 5)*clamp(limb_speed*1.5, 0, 1) +if(var.charge_r==1, torad( 20)*limb_speed, var.charge_l==1,         0            , 0)",
			"left_leg.ry": " if(is_riding,  var.left_leg_ry, clamp(torad(-40)+limb_speed*2, torad(-40), 0)) +torad(-5)*clamp(limb_speed*1.5, 0, 1) +if(var.charge_r==1,         0            , var.charge_l==1, torad(-20)*limb_speed, 0)",
			"right_leg.rz": "if(is_riding, var.right_leg_rz,                                             +torad( 3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(var.charge_r==1, -sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad( 5)*limb_speed, var.charge_l==1, sin(pi*swing_progress)/8 +torad(3)*clamp(limb_speed*1.5, 0, 1)                                   , -sin(pi*swing_progress)/8) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
			"left_leg.rz": " if(is_riding,  var.left_leg_rz, clamp(torad(-15)+limb_speed, torad(-15), 0) +torad(-3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(var.charge_r==1, -sin(pi*swing_progress)/8 +torad(-3)*clamp(limb_speed*1.5, 0, 1)                                  , var.charge_l==1, sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad(-5)*limb_speed, -sin(pi*swing_progress)/8) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
			"right_leg.tx": "-2                                  +if(is_riding, 0, if(var.charge_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)))                                        +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(var.charge_r==1, clamp( 2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)/4, var.charge_l==1, 0, 0)",
			"left_leg.tx": "  2 +clamp(0.5-limb_speed*2, 0, 0.5) +if(is_riding, 1, if(var.charge_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)) +sin(torad(-20)+var.b)/3) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(var.charge_r==1, 0, var.charge_l==1, clamp(-2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -1, 6)/4, 0)",
			"right_leg.ty": "0.3 +clamp(12 +clamp( cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) +cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
			"left_leg.ty": " 0.3 +clamp(12 +clamp(-cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) -cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
			"right_leg.tz": "clamp(1 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, +torad(var.hy)/2 -sin(torad( 20)+var.b)/2) +sin(pi*swing_progress)*2 +if(is_riding, 0, var.charge_r==1, clamp(-1+limb_speed*4, -1, 0), var.charge_l==1, clamp(-2+limb_speed*4, -2, 0), clamp(-2  +limb_speed*8, -2  , 0))",
			"left_leg.tz": " clamp(1 -cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, -torad(var.hy)/2 -sin(torad(-20)+var.b)/3) +sin(pi*swing_progress)*2 +if(is_riding, 0, var.charge_r==1, clamp(-1+limb_speed*4, -1, 0), var.charge_l==1,                            0 , clamp(-0.6+limb_speed*2, -0.6, 0))"
		},
		{
			"nose.ty": "     -2 +sin(     pi/2+(var.r+age)) /10*var.sniff",
			"tusks.ty": "    -2 -sin(pi/4+pi/2+(var.r+age)) /10*var.sniff",
			"nose.rx": "  (-0.5 +sin(     pi/3+(var.r+age)))/17*var.sniff",
			"tusks.rx": "-(-0.5 +sin(pi/4+pi/2+(var.r+age)))/17*var.sniff",
			"right_ear2.rx": "torad(-5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) ) ) -torad(head_pitch)/3 +sin(pi*swing_progress*2)/2*if(var.charge_r==1||var.charge_l==1, 1, 0.3) +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"left_ear2.rx": " torad(-5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) ) ) -torad(head_pitch)/3 +sin(pi*swing_progress*2)/2*if(var.charge_r==1||var.charge_l==1, 1, 0.3) +clamp( -(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/4, pi/4)",
			"right_ear2.ry": "torad(8)",
			"left_ear2.ry": "-torad(8)",
			"right_ear2.rz": "clamp(torad( 20 +45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) )  ) +cos(var.b)/16 -sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) +sin(pi*swing_progress*2)*if(var.charge_r==1||var.charge_l==1, 1, 0.5) +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 +(var.position-pos_y)*2, -torad(17), pi/2), 0,  pi)",
			"left_ear2.rz": " clamp(torad(-20 -45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) )  ) -cos(var.b)/16 +sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) -sin(pi*swing_progress*2)*if(var.charge_r==1||var.charge_l==1, 1, 0.5) +clamp(  (var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2 -(var.position-pos_y)*2, -pi/2, torad(17)), -pi, 0)"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0.7*var.look, 1), 2 )",
			"eyes.tz": "-4 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.sy": "1-var.blink",
			"l_pupil.sy": "1-var.blink",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}