{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "if( varb.fcc, var.hy, clamp(head_yaw,-90,90)*min(1,frame_time*4) +var.hy*max(0,1-frame_time*4) )",
			"var.hp": "if( varb.fcc, var.hp,       head_pitch      *min(1,frame_time*6) +var.hp*max(0,1-frame_time*6) )",
			"var.r": "random(id)*pi*4",
			"var.up": "var.up +abs( var.pre_posy-pos_y )",
			"var.bls": "var.r +age/10 +limb_swing/1.3 +var.up*3",
			"var.wiggle": "age/4 +limb_swing/2",
			"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
			"var.look": "clamp(-24 +sin(var.r+age/60)*32, 0, 1)",
			"var.eyeY": "clamp(if(eye.ty==1, min(20, var.eyeY +0.4 *frame_time*20), max(0, var.eyeY -0.4 *frame_time*20)), 0, 1)",
			"var.m": "clamp( limb_speed*2 +abs( var.position-pos_y ), 0, 1 )",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.rotation": "if( varb.fcc, var.rotation, age<9 || is_riding, var.roty, var.roty*min(1,frame_time*4) +var.rotation*max(0,1-frame_time*4) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,    pos_y,    pos_y*min(1,frame_time*6) +var.position*max(0,1-frame_time*6) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.ty": "16",
			"body.rx": "0",
			"body.rz": "0",
			"body.ry": "var.rotation-rot_y",
			"body2.rx": "if(is_in_water, torad(var.hp)*clamp(1-var.m*3, 0, 1)                      , sin(var.wiggle  +torad(-90))/4) +clamp( ( var.position-pos_y )*2, -1.5, 1.5 )*min(1,limb_speed*6)/if(is_in_water,1,2) +torad( 30*cos(limb_swing/2) )*var.hurt",
			"body2.ry": "if(is_in_water, torad(var.hy)*clamp(1-var.m*3, 0, 1) -sin(var.bls)/5*var.m, sin(var.wiggle*2+torad(-45))/6) +torad( 30*sin(limb_swing/3) )*var.hurt",
			"body2.rz": "if(is_in_water, cos(var.bls           )/14*var.m +clamp( var.rotation-var.roty, -1, 1 )*min(1,limb_speed*3)*clamp( 1-abs( var.position-pos_y )*2, 0, 1 ), if(is_on_ground, 0, -torad(var.hy)/4*clamp(1-var.m*3, 0, 1)) )",
			"body2.tx": "if(is_in_water, sin(var.bls+torad(-90))   *var.m, 0)",
			"body2.ty": "if(is_in_water&&!is_on_ground, cos((pos_x*1.5+pos_y*2+pos_z*1.5)+age/17)/2, 0) -7",
			"tail1_1.rx": "if(is_in_water,                               -torad(var.hp)/2                     *clamp(1-var.m*3, 0, 1), sin(var.wiggle  +torad(135))/4) -torad( 20*cos(limb_swing/2) )*var.hurt",
			"tail1_2.rx": "if(is_in_water,                               -torad(var.hp)/if(is_on_ground, 2, 4)*clamp(1-var.m*3, 0, 1), sin(var.wiggle  +torad( 90))/4) -torad( 20*cos(limb_swing/2) )*var.hurt",
			"tail1_3.rx": "if(is_in_water,                               -torad(var.hp)/6                     *clamp(1-var.m*3, 0, 1), sin(var.wiggle             )/4)",
			"tail1_1.ry": "if(is_in_water, sin(var.bls+torad( 90))/6*clamp(1+var.m/2, 1, 1.5) -torad(var.hy)/2*clamp(1-var.m*3, 0, 1), sin(var.wiggle*2+torad(135))/2) -torad( 20*sin(limb_swing/3) )*var.hurt",
			"tail1_2.ry": "if(is_in_water, sin(var.bls+torad( 45))/4*clamp(1+var.m/2, 1, 1.5) -torad(var.hy)/4*clamp(1-var.m*3, 0, 1), sin(var.wiggle*2+torad( 90))/2) -torad( 20*cos(limb_swing/3) )*var.hurt",
			"tail1_3.ry": "if(is_in_water, sin(var.bls           )/4*clamp(1+var.m/2, 1, 1.5) -torad(var.hy)/6*clamp(1-var.m*3, 0, 1), sin(var.wiggle*2           )/2)",
			"tail1_4.ry": "if(is_in_water, sin(var.bls+torad(-30))/4*clamp(1+var.m/2, 1, 1.5)                                             , sin(var.wiggle*2+torad(-45))/2)",
			"tail1_1.rz": "if(is_in_water,-sin(var.bls           )/8*var.m, 0 )"
		},
		{
			"spine_1.tz": "  2 +spine1.tz",
			"spine_2.tz": " -2 +spine2.tz",
			"spine_3.tx": " -12+spine3.tx",
			"spine_4.tx": "  12+spine4.tx",
			"spine_5.tz": " -2 +spine5.tz",
			"spine_6.tz": " -2 +spine6.tz",
			"spine_7.tz": "  2 +spine7.tz",
			"spine_8.tz": "  2 +spine8.tz",
			"spine_9.tz": "  2 +spine9.tz",
			"spine_10.tz": "-2 +spine10.tz",
			"spine_11.tx": "-12+spine11.tx",
			"spine_12.tx": " 12+spine12.tx",
			"spine_1.ty": " -15.5+spine1.ty",
			"spine_2.ty": " -15.5+spine2.ty",
			"spine_3.ty": " -15.5+spine3.ty",
			"spine_4.ty": " -15.5+spine4.ty",
			"spine_5.tx": "  12  +spine5.tx",
			"spine_6.tx": " -12  +spine6.tx",
			"spine_7.tx": " -12  +spine7.tx",
			"spine_8.tx": "  12  +spine8.tx",
			"spine_9.ty": " -11.5+spine9.ty",
			"spine_10.ty": "-11.5+spine10.ty",
			"spine_11.ty": "-11.5+spine11.ty",
			"spine_12.ty": "-11.5+spine12.ty"
		},
		{
			"eye_white.tz": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/500",
			"eye_white.sx": "1 +(eye2.sz-1)/500",
			"eye_white.sy": "1 +(eye2.sz-1)/500",
			"pupil.tx": "      clamp( eye.tx  *(1-var.look)             +clamp( (sin(var.r+age/17) +sin(var.r+age/7 ))*4, -0.1, 0.1)/2 +( torad(-var.hy/2 ) )*var.look +4*(0.05 -0.1*hurt_time/7)*death_time, -2 , 2 )",
			"pupil.ty": "-0.5 +clamp( var.eyeY*(1-var.look) -(body2.rx) +clamp( (sin(var.r+age/27) +sin(var.r+age/16))*4, -0.1, 0.1)/2 +( torad( var.hp   ) +0.5 +sin(var.r+age/12)*2*clamp(sin(var.r+age/20)*12, 0, 1) )*var.look +1.5*(0.05 -0.1*hurt_time/7)*death_time,  0 , 1 )",
			"pupil.sx": "clamp( 1 +(-1 +sin(var.r+age/2) )/20*clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), 0, 1)*(1-var.look) +0.3 * ( hurt_time/7 ) +clamp((-0.05 +0.1*hurt_time/7)*death_time, -0.5, 0), 0.2, 1.5 )",
			"pupil.sy": "clamp( 1 +(-1 +sin(var.r+age/2) )/20*clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), 0, 1)*(1-var.look) -0.6 * ( hurt_time/7 ) +clamp((-0.05 +0.1*hurt_time/7)*death_time, -0.5, 0), 0.2, 1   )",
			"eye_white.tx": " pupil.tx/2",
			"eye_white.ty": "(pupil.ty+0.5)/2"
		},
		{
			"var.pre_posy": "pos_y",
			"var.pre_roty": "rot_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}