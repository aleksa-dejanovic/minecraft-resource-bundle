{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "clamp( 90*sin(torad(head_yaw)), -90, 90 )",
			"var.child_scale": "if(is_child, 0, 0)",
			"var.time": "time*pi*2  /6",
			"var.id": "random(id)*pi*4",
			"var.ls_offset": "if( varb.fcc, var.ls_offset, is_hurt || limb_speed>=if(is_child, 0.6, 0.7), var.ls_offset + frame_time*2*if(is_hurt, 2, 1) * limb_speed, var.ls_offset)",
			"var.ls": "0.8 +( limb_swing -var.ls_offset*3 ) * if(is_child, 0.55, 1.1)",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding, pos_y, pos_y*min(1,frame_time*16) +var.position*max(0,1-frame_time*16) )",
			"var.vs": "if( varb.fcc, var.vs, age<9, max(0,3-age), (var.position-pos_y) )",
			"var.Bt": "var.id +var.time/if(is_child, 3, 6)",
			"var.St": "var.id +var.time/if(is_child, 7, 10)*pi +limb_swing/if(is_in_water, 1.5, 4) +pos_y/4",
			"var.It": "var.id+var.time/14 *if(is_child,1.2,1)*(0.7+0.3*random(id)) +sin( (var.id+var.time/14 *if(is_child,1.2,1)*(0.7+0.3*random(id))/2 )*3 )/3",
			"var.idl2": "max( 0, 1-limb_speed * 1.5 )*(1-var.swim)",
			"var.idle": "max( 0, 1-limb_speed * if( is_in_water, 8, 4 ) )",
			"var.move": "min( 1,   limb_speed * if( is_in_water, 8, 4 ) )",
			"var.run": "clamp(if( varb.fcc, var.run, limb_speed>=if(is_child, 0.6, 0.7), var.run +6 *frame_time, var.run -3 *frame_time ), 0, if(is_child, 1.2, 1)*max(0,1-var.swim-var.air) )",
			"var.walk": "clamp(1-var.run-var.air, 0, (1-var.swim) )",
			"var.swiA": "clamp(if(varb.fcc, var.swiA, !is_riding&&!is_on_ground&&is_in_water, var.swiA +0.8 *frame_time, var.swiA -2 *frame_time ), 0, 1 )",
			"var.swim": "clamp(-0.5 +var.swiA*2, 0, 1)",
			"var.air": "clamp( if( varb.fcc, var.air, !is_riding && !is_on_ground && !is_in_water, var.air +if(var.vs<0, 0.4, 6)*frame_time, var.air -6 *frame_time ), 0, if(age<9, 0, 1) )",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*max(0, (1-hurt_time/10)*8 )",
			"var.scared": "clamp( if( varb.fcc, var.scared, is_hurt && hurt_time<3, var.scared +2 *frame_time, var.scared -frame_time *if(limb_speed>0.1, 0.07, 0.5 ) ), 0, 1 )",
			"varb.jumping": "!is_on_ground && !is_in_water && pos_y > var.pre_posy && age>9 || var.t_jump!=0",
			"varb.falling": "!is_on_ground && !is_in_water && age>9",
			"var.t_land": "clamp( if( varb.fcc, var.t_land, (var.t_land==0 || var.t_land==1) && varb.falling, 0, var.t_land + frame_time * if(varb.falling,4,2) ), if(age<9, max(0,3-age)/9, 0), 1)",
			"var.t_jump": "clamp( if( varb.fcc, var.t_jump, (var.t_jump==1 && is_on_ground) || !varb.jumping, 0, var.t_jump + frame_time * 2                    ), 0, 1)",
			"var.t_fall": "clamp( if( varb.fcc, var.t_fall, var.air>0.2, var.t_fall +6 *frame_time, var.t_fall -6 *frame_time ), 0, 1-var.float )",
			"var.fall_amp": "if( varb.fcc, var.fall_amp, max(0, var.fall_amp - frame_time * var.fall_amp * if(var.t_land<0.7, 3, 6) +if(age<9 || !is_on_ground, var.vs/if(is_child, 2, 4), 0) ) )",
			"var.jump": "sin( ( var.t_jump -pow( var.t_jump, 2 )/2 )*2*pi )*if(is_child, 1.7, 1.5)",
			"var.land": "sin( ( clamp(-0.1 +var.t_land*1.1, 0, 1) -pow(clamp(-0.1 +var.t_land*1.1, 0, 1 ),2 )/2 )*2*pi )*sqrt( clamp(var.fall_amp*2, 0, if(is_alive, 3, 0)) )/1.3",
			"var.fall": "clamp( if(age>9, var.vs, 0 ), -1.5, 1.5 )",
			"var.float": "clamp(if( varb.fcc, var.float, var.air>0.4 && var.vs>=0, var.float +4 *frame_time, var.float -6 *frame_time ), 0, 1)",
			"var.tilt": "clamp( if( varb.fcc, var.tilt, head_pitch==0 && limb_speed>0.02 && !between(var.pre_roty, rot_y-0.01, rot_y+0.01), var.tilt +6 *frame_time, var.tilt -4 *frame_time ), 0, var.run )",
			"var.tr": "if(                   age>9 && var.tp> 0 && var.idle>0.98 || abs(rot_y-var.pre_roty)>0, var.tr, rot_y )",
			"var.tp": "if( varb.fcc, var.tp, age>9 && var.tp==0 && var.idle>0.98 && abs(rot_y-var.pre_roty)>0, 1, max(0, var.tp -1.5 *frame_time ) )",
			"var.tq": "todeg( clamp( rot_y -var.tr, -pi/2, pi/2 ) )",
			"var.turnR": "if( !is_riding && var.tq>0, 1, 0 )*var.idle*(1-var.swim)*(1-var.air)*0",
			"var.turnL": "if( !is_riding && var.tq<0, 1, 0 )*var.idle*(1-var.swim)*(1-var.air)*0",
			"var.rr": "if( age>9 && !is_riding && var.idle>0.98 && var.tp>0, var.rr, rot_y )",
			"var.NAeat": "clamp( if( varb.fcc, var.NAeat, !is_riding && limb_speed<0.3 && rule_index==2 && between(cos(var.id+var.time/180)*10, if(head_pitch!=0,-1.6,-4), 0), var.NAeat +1.5 *frame_time, var.NAeat -1.5 *frame_time ), 0, (1-var.Nshake/4) )",
			"var.NApeck": "if( varb.fcc, var.NApeck, var.NApeck==0 && between( sin( (var.id +var.time/if(is_child, 1.2, 1.8))/1.5 ) +cos( var.id +var.time/if(is_child, 1.2, 1.8) ), -0.3, 0.5 ), 1, max( 0, var.NApeck -frame_time*3 ) )",
			"var.Nidle": "(0.5-0.5*cos( clamp( 2 +sin(var.id +(var.time+limb_swing)/73 )*9 +cos(var.id +(var.time+limb_swing)/57 )*9, var.Neat, max(0, 1-var.run) )*pi ))",
			"var.NAlook": " clamp( if( varb.fcc, var.NAlook ,                               is_on_ground && (    -1 +sin(var.id +(var.time+limb_swing)/44 )*3  )>0  , var.NAlook  +4   *frame_time, var.NAlook  -4   *frame_time ), var.Neat, max(0, 1 -var.run) )",
			"var.NAshake": "clamp( if( varb.fcc, var.NAshake,  (!is_hurt && between(var.scared,0.1,0.5)) || (-398.7 +sin(var.id +(var.time+limb_swing)/250)*400)>0  , var.NAshake +0.6 *frame_time, var.NAshake -0.4 *frame_time ), 0, max(0, 1 -var.air) )",
			"var.NAlleg": " clamp( if( varb.fcc, var.NAlleg , !is_ridden && !is_in_water && is_on_ground && (-198.8 +cos(var.id +(var.time+limb_swing)/170)*200)>0.9, var.NAlleg  +2   *frame_time, var.NAlleg  -2   *frame_time ), 0, var.idle )",
			"var.NArleg": " clamp( if( varb.fcc, var.NArleg , !is_ridden && !is_in_water && is_on_ground && (-198.8 -sin(var.id +(var.time+limb_swing)/170)*200)>0.9, var.NArleg  +2   *frame_time, var.NArleg  -2   *frame_time ), 0, var.idle )",
			"var.Neat": "0.5-0.5*cos( pow( var.NAeat, 2)*pi )",
			"var.Npeck": "pow( var.NApeck, 2 )*pi",
			"var.Nlook": "0.5-0.5*cos( var.NAlook*pi )",
			"var.Nshake": "0.5-0.5*cos( pow( var.NAshake, 3)*pi )",
			"var.Nlleg": "0.5-0.5*cos( var.NAlleg*pi )",
			"var.Nrleg": "0.5-0.5*cos( var.NArleg*pi )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad( if(is_riding,0,-5*var.idle) +head_pitch/4*(1-max(0,-1+var.Neat*2+var.float))  +(-sin(var.Bt+pi/4)   +2*sin(-pi/9 +var.ls*2    )*    var.move       )*var.walk                     +(-9 -5*sin(var.ls*2)*limb_speed )*var.run  +( 8 +5*sin(    var.St*2) )*var.move*var.swim  +( -30*var.jump*if(is_child,1.5,1) +45*var.fall +6*sin(var.St/2)*var.float -25*cos(var.t_land*4)*var.land )  +((-1+cos( var.tp*pi*4 +cos( var.tp*pi*4 )/4 ))/60*var.tq)*(var.turnL+var.turnR)  +( -9 -20*sin(var.ls    ) )*var.hurt  +7*var.Nlook*(1-max(0,-1+var.Neat*2))  +( if(is_child, 10, 15) +5*sin(var.Neat*pi) )*var.Neat  +( -20 +3*cos(var.id+var.time/1.8) +40*sin(var.Nshake*pi) )*var.Nshake +10*(var.Nlleg+var.Nrleg)  )",
			"body.ry": "torad(                               var.hy/10*var.idl2                              +(-cos(var.Bt/3   )                                                  )*var.walk*if(is_child,0.7,1)  +(   -7*sin(var.ls  )*limb_speed )*var.run  +(   -3*sin(-pi/4+var.St) )         *var.swim                    -4*sin(var.St*1.5)*var.t_fall                                                              +(-var.tq*(1-var.tp)  +var.tq/2*(1+cos(var.tp*pi  ))     )*(var.turnL+var.turnR)  +(     30*cos(var.ls/1.5) )*var.hurt                                      +5*cos(clamp(0.5+sin(-pi/18+var.It),0,1)*pi)*var.Nlook*(1-var.swim)      -1.5*cos(var.id+var.time/3)  *(var.Nlleg+var.Nrleg)  )",
			"body.rz": "torad(                                                                               +(  -5*sin(pi/18 +var.ls -sin(pi/9 +var.ls*2 )/3)*max(var.move, 0.2) )*var.walk*if(is_child,0.7,1)  +(   -9*cos(var.ls  )*limb_speed )*var.run  +(    3*cos(-pi/4+var.St) )         *var.swim  +(                +2*cos(var.St*1.5)*var.t_fall +6*cos(var.St/3)*var.float                                )  +( var.tq/15*sin( var.tp*pi*2 )*(1-cos(var.tp*pi*2))     )*(var.turnL-var.turnR)  +(     -8*sin(var.ls    ) )*var.hurt  +2*cos(clamp(0.5-sin(-pi/12+var.It)*0.7,0,1)*pi)*(0.8-cos(var.It/4+sin(var.It/4)))*var.Nidle*(1-var.Neat) +(-9 +3*sin(var.id+var.time/3) )*(var.Nlleg-var.Nrleg)  )",
			"body.tx": "(  if(is_riding||is_ridden, 0, cos(var.Bt/3)/6*var.walk  +sin(var.St/3)*var.float )  -0.7*(var.Nlleg-var.Nrleg)  ) * if( is_child, 0.25, 1 )",
			"body.ty": "( if(is_child,52/2-4,17)+0.3 +if(!is_ridden&&is_riding, 5, 0) +( if(is_riding, 0,-sin(var.Bt)/9) +( 0.3+0.45*cos(      var.ls*2 +sin( pi/9 +var.ls*2 )/2 )     )*max(var.move, 0.2) )*var.walk  +( 0.25 +sin(pi/4+var.ls*2) )*limb_speed*var.run  +( var.jump +2*var.land )     +abs(var.tq)/70*( 1-cos(var.tp*pi*2) )/4*(var.turnL+var.turnR)  +( 2 +cos(var.ls) )*var.hurt  +( if(is_child,0,0.8) +0.5*sin(var.Neat*pi) )*var.Neat  +0.3*(var.Nlleg+var.Nrleg)  +if(is_ridden, 0, if(is_child, 2, 3) )*var.swiA ) * if( is_child, 0.8, 1 ) * (1-0.5*var.child_scale)",
			"body.tz": "(                         if(is_riding||is_ridden, 0, 1 ) +(                                  (-0.3+0.3 *cos( pi/4 +var.ls*2 +sin(-pi/6 +var.ls*2  )/3 )*3.3 )*    var.move       )*var.walk              +if(is_ridden, 0, cos(var.St/2))*var.float          -(2-2*cos(torad(var.tq*var.tp)) )*( 1+cos(var.tp*pi) )/2*(var.turnL+var.turnR)  +( -2*cos(var.ls) )*var.hurt  -var.Neat  ) * if( is_child, 0.8, 1 ) * (1-0.5*var.child_scale)",
			"head2.rx": "      -body.rx  +torad( head_pitch/1.2*(1-max(0,-1+var.Neat*2))   +( -0.5+sin(pi/4+var.ls) )*3*limb_speed*var.run/if(is_child,2,1)  +10*var.float  +(-7 +20*sin(var.ls/1.2) )*var.hurt  +7*cos(clamp(-2+sin(var.It/2 +sin(var.It/5)/2 )*6,0,1)*pi)*var.Nidle +(10 +15*cos(clamp(-3+sin(pi/32+var.It/3)*13,0,1)*pi) )*var.Nlook*(1-max(0,-1+var.Neat*2)) +(75 +20*sin(var.Npeck*1.7)*sin(var.Npeck) )*max(0,-1+var.Neat*2) +( 7 +10*cos(var.Nshake*pi*1.5) -5*(-1+cos(clamp(-3+var.Nshake*4,0,1)*pi)) )*var.Nshake  )",
			"head2.ry": "clamp(-body.ry  +torad(     var.hy/1.1*(1-max(0,-1+var.Neat*2)/2)*(1-var.tilt*1.5) ), -pi/2.5, pi/2.5 )  +torad(                                        -30*cos(var.ls*1.3)  *var.hurt                                                  +( 10*cos(clamp(0.5+sin(var.It/1.3)*6,0,1)*pi)+20*cos(clamp(0.5+sin(      var.It)*5,0,1)*pi) )*var.Nlook  )",
			"head2.rz": "      -body.rz  +torad(                                                            -var.tq/18*( 1-cos(var.tp*pi*2) )*(var.turnL+var.turnR)              +30*cos(var.ls*0.8)  *var.hurt  +8*cos(clamp(0.5-sin(var.It)*4,0,1)*pi)*var.Nidle +10*cos(clamp(0.5+sin(var.It/2  )*5,0,1)*pi)   *cos(clamp(0.5+sin(pi/40+var.It)*5,0,1)*pi)  *var.Nlook  )",
			"head2.tx": "-var.hy/60",
			"head2.ty": "-body.ty +if(is_child,4/2 +0.5*var.Neat*0, 0) +if(is_riding&&!is_ridden, 14, 8.5 ) +torad( head_pitch*(1-max(0,-1+var.Neat*2)) )  +( sin(var.ls*2) )/1.5*limb_speed*var.run  +( 2*sin( var.t_jump*pi )*var.jump +( 1 +4*sin(-pi/3+var.t_land*pi) )*var.land -1.5*var.fall )  +( sin(limb_swing)/2 +1 )*var.hurt  +( (if(is_child,-1, 2.5) +sin(var.Npeck) )*max(0,-1+var.Neat*2)  +0.5*cos(clamp(0.5-sin(var.It/2)*8,0,1)*pi)*(cos(clamp(0.5-sin(var.It/5)*16,0,1)*pi))*var.Nidle*(1-sin(var.Npeck)*var.Neat)  +( 1.5*(1-sin(var.Nshake*pi)) +1.5*(-1+cos(clamp(-3+var.Nshake*4,0,1)*pi)) )*var.Nshake  +(-0.7*(var.Nlleg+var.Nrleg) +clamp(-1+(var.Nlleg+var.Nrleg)*3,0,1) )*(1-max(0,-1+var.Neat*2)) ) +if(is_ridden, 0, if(is_child, 2, 3) )*var.swiA",
			"head2.tz": "-body.tz*(1-var.float) +if(is_child,-1 +0.5*var.Neat, 0) -if(is_ridden,4,3)  -var.fall/1.5 -var.float  +( 1-2*cos(var.ls) )*var.hurt  +( -sin(-pi/12 +var.ls*2 +sin(-pi/12 +var.ls*2)/2.5 )*2 +0.1 )*clamp(var.move*4,0,1)*var.walk   -max(0,-1+var.Neat*2)/2 +(1-cos(clamp(-3+var.Nshake*4,0,1)*pi))/2*var.Nshake",
			"head2.sx": "if(is_child,1.75,1)",
			"head2.sy": "head2.sx",
			"head2.sz": "head2.sx",
			"body.sx": "if(is_child, 0.8, 1)",
			"body.sy": "body.sx",
			"body.sz": "body.sx"
		},
		{
			"var.wings_rx": "-5 +if( is_child, (  10 +30*sin(var.ls*2) )*limb_speed, (-20 -30*sin(var.ls*2) )*var.run )  +( 13*var.idle -5*sin(-pi/4+var.St*2) )*var.move*var.swim  +( (10 +20*sin(var.t_jump*pi*2.5))*var.jump      +20*cos(var.St*4) *var.float )  +( 50*sin(var.Nshake*pi*3) +(-10 -15*sin(var.id+var.time/1.8*2+var.Nshake*7) )*clamp(-0.3+var.Nshake*1.3,0,1) )*var.walk*var.Nshake",
			"var.wings_rz": "    if( is_child, ( 100 -30*cos(var.ls*2) )*limb_speed, ( 90 +70*cos(var.ls*2) )*var.run )                                                             +( (80 -60*cos(var.t_jump*pi*2.5))*var.jump +(90 +70*sin(var.St*4))*var.float )  +(                          ( 70 -70*cos(var.id+var.time/1.8*2+var.Nshake*7) )*clamp(-0.3+var.Nshake*1.3,0,1) )*var.walk*var.Nshake",
			"right_wing2.rx": "torad( var.wings_rx  +( 10 -20*sin(var.ls    ) )*var.hurt )",
			"left_wing2.rx": " torad( var.wings_rx  +( 10 -20*sin(var.ls/1.2) )*var.hurt )",
			"right_wing2.rz": "torad( var.wings_rz  +( 40 +5*sin(-pi/4+var.St) )*var.swim  +( 40 -40*cos(var.ls    ) )*var.hurt  )",
			"left_wing2.rz": "torad( -var.wings_rz  +(-40 +5*sin(-pi/4+var.St) )*var.swim  -( 40 -40*cos(var.ls/1.2) )*var.hurt  )",
			"right_wing2.ry": "torad( 5 +sin( pi/4+var.Bt )  +( 3*sin(var.St) )*var.swim  )",
			"left_wing2.ry": " torad(-5 -sin( pi/4+var.Bt )  +( 3*sin(var.St) )*var.swim  )",
			"right_wing2.ty": "-11 +1.5*var.swim  +( -var.fall +(0.7-cos(var.St*4) )*var.float )",
			"left_wing2.ty": " -11 +1.5*var.swim  +( -var.fall +(0.7-cos(var.St*4) )*var.float )",
			"right_wing2.tz": "-2 -var.fall",
			"left_wing2.tz": " -2 -var.fall"
		},
		{
			"right_leg.rx": "torad( ( ( sin(var.Bt)*1.5  +( (10 -50*cos(var.ls +cos(var.ls)/3 ))*max(var.move, 0.2) +25*min(0, sin(var.ls))*var.move ) )*var.walk  +50*sin(var.ls)*limb_speed*var.run )  +( 15 +10*var.move +(20+15*var.move)*sin(var.St) )*var.swim  +( (2+limb_speed)*7.2*cos(var.t_jump*pi/2)*var.jump +cos(var.St*1.5)*13*var.t_fall +( 10+60*limb_speed +18*sin(var.St/1.8) )*var.float -20*cos(var.t_land)*var.land )  +( 30*cos(var.ls) )*var.hurt  +((-( var.tq/9 )*1.2*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnR +( ( var.tq/9 )*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) -var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnL)  -10*(1-cos(var.Nshake*pi*2))*var.Nshake +(-6*cos(var.id+var.time/3 ) +min(0, sin(var.id+var.time/3)-0.4 )*20 )*var.Nrleg  )",
			"left_leg.rx": " torad( ( ( sin(var.Bt)*1.5  +( (10 +50*cos(var.ls -cos(var.ls)/3 ))*max(var.move, 0.2) +25*min(0,-sin(var.ls))*var.move ) )*var.walk  -50*sin(var.ls)*limb_speed*var.run )  +( 15 +10*var.move -(20+15*var.move)*sin(var.St) )*var.swim  +( (2+limb_speed)*7.2*cos(var.t_jump*pi/2)*var.jump -cos(var.St*1.5)*13*var.t_fall +( 10+60*limb_speed +18*cos(var.St/2.2) )*var.float -20*cos(var.t_land)*var.land )  +( 30*cos(var.ls) )*var.hurt  +(( ( var.tq/9 )*1.2*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.3) ) )*var.turnL +(-( var.tq/9 )*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) -var.tq/9*max(0, sin(var.tp*pi*2)) )*var.turnR)  -10*(1-cos(var.Nshake*pi*2))*var.Nshake +(-6*cos(var.id+var.time/3 ) +min(0, sin(var.id+var.time/3)-0.4 )*20 )*var.Nlleg  )",
			"right_leg.ry": "torad( -5*(1-2*random(id))*max(0,var.idle -var.swim -var.Neat -var.Nrleg )  -20*var.idle*var.swim  +10*var.idl2*var.float  +((-abs( var.tq*(1-var.tp)-var.tq/2)-var.tq/2)*var.turnL +(-abs(-var.tq*(1-var.tp)+var.tq/2)+var.tq/2)*var.turnR)  +15*var.Nrleg  )",
			"left_leg.ry": " torad(  5*(1-2*random(id))*max(0,var.idle -var.swim -var.Neat -var.Nlleg )  +20*var.idle*var.swim  -10*var.idl2*var.float  +(( abs( var.tq*(1-var.tp)-var.tq/2)+var.tq/2)*var.turnL +( abs( var.tq*(1-var.tp)-var.tq/2)-var.tq/2)*var.turnR)  -15*var.Nlleg  )",
			"right_leg.rz": "torad( ( -1+2*cos(var.Bt/3) -5*sin(var.ls +cos(var.ls))*max(var.move, 0.2) )*var.walk  +( 6-16*cos(var.ls) )*limb_speed*var.run  +( 1.6 +limb_speed +1*sin(var.St/1.8) )*var.float  +((-var.tq/9*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.8) ) )*var.turnR +( var.tq/5*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) )*var.turnL)  +(  5*cos(var.id+var.time/3 -sin(var.id+var.time/3) ) )*var.Nrleg  +if(is_child, 2*(1-var.float), 0)  )",
			"left_leg.rz": " torad( (  1+2*cos(var.Bt/3) -5*sin(var.ls -cos(var.ls))*max(var.move, 0.2) )*var.walk  +(-6-16*cos(var.ls) )*limb_speed*var.run  +(-1.6 -limb_speed -1*cos(var.St/2.2) )*var.float  +((-var.tq/9*sin(var.tp*pi)*( 1-cos(var.tp*pi*1.8) ) )*var.turnL +( var.tq/5*sin(0.35+var.tp*pi +sin(0.7+var.tp*pi)*0.87 )*( 1-cos(var.tp*pi*2) ) )*var.turnR)  +( -5*cos(var.id+var.time/3 -sin(var.id+var.time/3) ) )*var.Nlleg  +if(is_child,-2*(1-var.float), 0)  )",
			"right_leg.tx": "(-1              +0.5*sin(var.ls +cos(var.ls)  )    *max(var.move, 0.2)*var.walk            +(-0.5+cos(var.ls) )*limb_speed*var.run     +if(is_child, 0.1+0.2*var.float, 0)      -max(0,var.fall)                      +(-0.2 +body.tx -body.rz*2 +right_leg.rz*6 )*var.float    +( (-0.5 -0.4*sin(var.St) )*var.idle )*var.swim  +(( 1 -1*cos(torad(var.tq*var.tp)) +1*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +( 1 -1*cos(torad(-var.tq*(1-var.tp))) +1*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)  +(  0.3 -cos(var.id+var.time/3 -sin(var.id+var.time/3)   )/2 )*var.Nrleg  ) * (1-0.5*var.child_scale)",
			"left_leg.tx": " ( 1              +0.5*sin(var.ls -cos(var.ls)  )    *max(var.move, 0.2)*var.walk            +( 0.5+cos(var.ls) )*limb_speed*var.run     +if(is_child,-0.1-0.2*var.float, 0)      +max(0,var.fall)                      +( 0.2 +body.tx -body.rz*2 + left_leg.rz*6 )*var.float    +( ( 0.5 -0.4*sin(var.St) )*var.idle )*var.swim  +((-1 +1*cos(torad(var.tq*var.tp)) +1*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +(-1 +1*cos(torad(-var.tq*(1-var.tp))) +1*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  +( -0.3 +cos(var.id+var.time/3 -sin(var.id+var.time/3)   )/2 )*var.Nlleg  ) * (1-0.5*var.child_scale)",
			"right_leg.tz": "( 1                  -cos(var.ls +cos(var.ls)/3)*5.4*max(var.move, 0.2)*var.walk                  +sin(var.ls)*7*limb_speed*var.run  +( (0.5+limb_speed)*cos(var.t_jump*pi/2)*var.jump +var.fall +cos(var.St*1.5)*var.t_fall +(  -1 +body.tz +6*sin(right_leg.rx) )*var.float )  +( 2 +(  1 +2*var.move )*sin(var.St) )*var.swim  +((-1 +1*cos(torad(var.tq*var.tp)) +1*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnR +(-1 +1*cos(torad(-var.tq*(1-var.tp))) +1*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnL)  +(      -cos(var.id+var.time/3 -sin(var.id+var.time/3)/2 )/2 )*var.Nrleg  ) * (1-0.5*var.child_scale)",
			"left_leg.tz": " ( 1                  +cos(var.ls -cos(var.ls)/3)*5.4*max(var.move, 0.2)*var.walk                  -sin(var.ls)*7*limb_speed*var.run  +( (0.5+limb_speed)*cos(var.t_jump*pi/2)*var.jump +var.fall -cos(var.St*1.5)*var.t_fall +(  -1 +body.tz +6*sin( left_leg.rx) )*var.float )  +( 2 +( -1 -2*var.move )*sin(var.St) )*var.swim  +((-1 +1*cos(torad(var.tq*var.tp)) -1*sin(torad(var.tq*var.tp)) )*( 1-cos(clamp(2.3-var.tp*2.7,0,1)*pi) )/2*var.turnL +(-1 +1*cos(torad(-var.tq*(1-var.tp))) -1*sin(torad(-var.tq*(1-var.tp))) )*( 1-cos(clamp(-0.2+var.tp*3,0,1)*pi) )/2*var.turnR)  +(      -cos(var.id+var.time/3 -sin(var.id+var.time/3)/2 )/2 )*var.Nlleg  ) * (1-0.5*var.child_scale)",
			"right_leg.ty": "( 23.9 +min(0, 1.6*( sin( pi/4 +var.ls +sin(var.ls*2)/3 )-0.7)*var.move*var.walk  +(-2.1 +cos(-pi/8+var.ls)*1.5)*limb_speed*var.run  +min(0,-abs(var.tq)/45*sin(var.tp*pi*2)*(var.turnL-var.turnR)) -var.tq*var.tp/180*(var.turnR-var.turnL)  +( sin(var.id+var.time/3)-0.4 )*2*var.Nrleg  )  +(-2 +( -0.5 +cos(var.St) )*var.move )*var.swim  +( sin(pi/4+var.ls +sin(var.ls*2)/3 )*2*var.jump -(0.5+sin(var.St*1.5))/2*var.t_fall +(-5+5*cos(right_leg.rx) )*var.float )  +if(is_ridden, 0, if(is_child, 2, 3) )*var.swiA ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*0",
			"left_leg.ty": " ( 23.9 +min(0, 1.6*(-sin( pi/4 +var.ls +sin(var.ls*2)/3 )-0.7)*var.move*var.walk  +(-2.1 -cos(-pi/8+var.ls)*1.5)*limb_speed*var.run  +min(0, abs(var.tq)/45*sin(var.tp*pi*2)*(var.turnL-var.turnR)) -var.tq*var.tp/180*(var.turnR-var.turnL)  +( sin(var.id+var.time/3)-0.4 )*2*var.Nlleg  )  +(-2 +( -0.5 -cos(var.St) )*var.move )*var.swim  +(-sin(pi/4+var.ls +sin(var.ls*2)/3 )*2*var.jump -(0.5-sin(var.St*1.5))/2*var.t_fall +(-5+5*cos( left_leg.rx) )*var.float )  +if(is_ridden, 0, if(is_child, 2, 3) )*var.swiA ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*0",
			"right_foot.rx": "clamp( -right_leg.rx*clamp(1  -( max(0,-sin( pi/9+var.ls -cos(pi/9+var.ls*2)/6 )+0.9)/1.1*var.move )*var.walk, 0, max(0,1-var.air-var.swim) )  +torad( (  (10 +30*sin(var.ls -sin(var.ls) )*limb_speed )*var.run  )  +( 20 +30*cos(var.St) )*var.swim  +40*var.jump -60*min(0.2,var.fall) +( 20 +30*limb_speed -20*cos(var.St/1.8) )*var.float  +( 25 -30*cos(var.id+var.time/3) )*var.Nrleg  ), -pi/2.1, ( -right_leg.rx*clamp( 1+right_leg.ty-23.9, 0, 1) +pi/2*clamp( (1-cos(-right_leg.ty+23.9))/3, 0, if(!is_on_ground,0,1) ) +pi/12*var.run +pi/2*if(!is_on_ground,1,0) )  ) +torad( 8*sin(torad(var.tp*var.tq)*2)*(var.turnL-var.turnR) )",
			"left_foot.rx": " clamp( - left_leg.rx*clamp(1  -( max(0, sin( pi/9+var.ls -cos(pi/9+var.ls*2)/6 )+0.9)/1.1*var.move )*var.walk, 0, max(0,1-var.air-var.swim) )  +torad( (  (10 -30*sin(var.ls +sin(var.ls) )*limb_speed )*var.run  )  +( 20 -30*cos(var.St) )*var.swim  +40*var.jump -60*min(0.2,var.fall) +( 20 +30*limb_speed +20*sin(var.St/2.2) )*var.float  +( 25 -30*cos(var.id+var.time/3) )*var.Nlleg  ), -pi/2.1, ( - left_leg.rx*clamp( 1+ left_leg.ty-23.9, 0, 1) +pi/2*clamp( (1-cos(- left_leg.ty+23.9))/3, 0, if(!is_on_ground,0,1) ) +pi/12*var.run +pi/2*if(!is_on_ground,1,0) )  ) +torad( 8*sin(torad(var.tp*var.tq)*2)*(var.turnL-var.turnR) )",
			"right_foot.rz": "clamp( -right_leg.rz*clamp(1  -( max(0,-sin(-pi/16+var.ls                  )*2.5+1  )    *var.move )*var.walk, 0, max(0,1-var.air-var.swim) ),  0, 1 ) +torad(  4*sin(torad(var.tp*var.tq)*2)*(var.turnL-var.turnR) )",
			"left_foot.rz": " clamp( - left_leg.rz*clamp(1  -( max(0, sin(-pi/16+var.ls                  )*2.5+1  )    *var.move )*var.walk, 0, max(0,1-var.air-var.swim) ), -1, 0 ) +torad( -4*sin(torad(var.tp*var.tq)*2)*(var.turnL-var.turnR) )",
			"right_leg.visible": "!( is_riding && !is_ridden )",
			"left_leg.visible": "!( is_riding && !is_ridden )"
		},
		{
			"var.crestx": "(-7 -25*cos(-pi/4 +var.ls*2 +sin(var.ls*2)/2.5 ) )*clamp(var.move*4,0,1)*var.walk  +20*sin(pi/4+var.Npeck*2)*sin(var.Npeck)*var.Neat",
			"wattle.rx": "clamp( -(head2.rx+body.rx)/3  +torad(  -40*sin(pi/4+var.Npeck*2)*sin(var.Npeck)*var.Neat  ), -pi/2.5, 0 )*if(is_child,0.5,1)",
			"wattle.rz": "     ( -(head2.rz+body.rz)/2  +torad(  (-6*sin(var.ls*1.5)*limb_speed*var.run )  +( 6*cos(-pi/16+var.It*11 )*(1+cos( pi/12+var.It*2 +sin( var.It*2 ) ))*( 1 +cos(clamp(3.5-cos(-pi/5+var.It*2 )*4,0,1)*pi) )*min(1, var.Nidle/2+var.Nlook )  +3*cos(-pi/16+var.It/1.3*11 )*(1+cos( pi/12+var.It/1.3*2 +sin( var.It/1.3*2 ) ))*( 1 -cos(clamp(3.5+sin(-pi/6+var.It/1.3*2 )*6,0,1)*pi) )*min(1, var.Nlook ) )  )  )*if(is_child,0.3,1)",
			"wattle.ty": "if(is_child,-3,-2)",
			"tail.rx": "torad( (-5-sin(var.Bt) -10*sin(var.ls*2)*limb_speed )*var.walk  +( 13*cos(var.ls*2)*limb_speed )*var.run  -20*limb_speed  )  -body.rx*( 1 +sin( body.rx*2 )/2 )",
			"tail.ry": "torad( (                20*cos(var.ls  )*limb_speed )*var.walk  +( 20*cos(var.ls  )*limb_speed )*var.run  +5*sin(var.St)*var.swim  -5*cos(clamp(0.5+sin(pi/9+var.It),0,1)*pi)*var.Nlook*(1-var.swim) -10*sin(var.id+var.time/3)*(var.Nlleg-var.Nrleg)  )",
			"tail.rz": "torad( 3*sin(var.Bt/3)*var.walk  )",
			"crest.sz": "clamp(1 -clamp( torad( var.crestx ),-1, 0.3)/1.7 +0.3*pow(limb_speed,2), 0.7, 1.4 )",
			"crest.sx": "1 -(crest.sz-1)/2",
			"crest.sy": "crest.sx",
			"crest.rz": "-wattle.rz/3",
			"crest.tz": "-2.015 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/500"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.id+var.time/5)*6))*clamp(-32 +cos((var.id+var.time/5)/1.5)*40 +cos((var.id+var.time/5)/4)*40, 0, 1), 0, 1 ), 2 )",
			"var.eye_top": "1 +(-1+sin(hurt_time/1.5)/3*var.hurt +max(0,-3 +death_time/2) -0.3*(0.5-0.5*cos( min(1,var.scared*4)*pi )) )*(1-var.blink)",
			"eyes.tz": "-2 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 0, 128 )/1000",
			"r_pupil.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_pupil.sy": "r_pupil.sy",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_posy": "pos_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}