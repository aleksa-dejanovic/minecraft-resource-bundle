{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "if( varb.fcc, var.hy, clamp(head_yaw,-90,90)*min(1,frame_time*if(abs(head_yaw)>80,4,8+limb_speed*8)) +var.hy*max(0,1-frame_time*if(abs(head_yaw)>80,4,8+limb_speed*8)) )",
			"var.r": "random(id)*pi*4",
			"var.b": "var.r +age/30*pi*2",
			"var.ls": "limb_swing*1.9",
			"var.als": "var.r+ age/17*pi*2 +limb_swing/2",
			"var.die": "if(!is_alive, if(is_hurt, (cos(hurt_time/4)/1.8 +0.4), 1), 0)",
			"var.air": "   clamp(if( varb.fcc, var.air   , !is_riding && !is_on_ground       , min(20, var.air    +0.3  *frame_time*20), max(0, var.air    -1   *frame_time*20)), 0, 1)",
			"var.aggroA": "clamp(if( varb.fcc, var.aggroA, is_aggressive || swing_progress!=0, min(20, var.aggroA +0.08 *frame_time*20), max(0, var.aggroA -0.1 *frame_time*20)), 0, 1)",
			"var.aggro": "(0.5-0.5*cos( var.aggroA*pi ))",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.rotation": "if( varb.fcc, var.rotation, age<9 || is_riding, var.roty, var.roty*min(1,frame_time*if(abs(head_yaw)>80,4,8+limb_speed*8)) +var.rotation*max(0,1-frame_time*if(abs(head_yaw)>80,4,8+limb_speed*8)) )",
			"var.position": "if( varb.fcc, var.position, age<9 || is_riding,    pos_y,    pos_y*min(1,frame_time*6                                    ) +var.position*max(0,1-frame_time*6                                    ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"root.ry": "var.rotation-rot_y",
			"right_jaw.tx": "if(is_alive, -2 +(0.2 -sin(var.r +age/4*pi*2)/4)*clamp(-1.5 +sin(age/13*1.3+var.r)*4 -cos(age/37*1.3+var.r)*4, 0, 1), -1.5) -sin(pi*2*swing_progress)",
			"left_jaw.tx": "-right_jaw.tx",
			"head2.rx": "sin(var.b-torad(45))/40 +torad(head_pitch)/4 +if(is_hurt, sin(hurt_time/10*pi), 0) +(torad( 20))*var.die",
			"head2.ry": "clamp(torad(var.hy)/4, torad(-17), torad( 17))",
			"head2.rz": "sin(torad(45)+var.ls)/15*limb_speed",
			"neck.rx": "torad(head_pitch)/3 +sin(-pi*swing_progress)/4 +if(is_hurt, -sin(hurt_time/10*pi)/2, 0) +limb_speed/3*var.air",
			"neck.ry": "if(is_ridden, 0, clamp(torad(var.hy)/3, torad(-45), torad(45)) )",
			"neck.ty": "15 +if(is_ridden, 0, sin(var.b)/8 +3*limb_speed*(1-var.air) ) +if(is_hurt, -sin(hurt_time/10*pi)*2, 0) +11.5*var.die",
			"neck.tz": "1 +sin(-pi*swing_progress)*4",
			"body2.rx": "torad(10 +30*var.aggro +10*limb_speed) +cos(var.b)/40 -torad(head_pitch)/4 +sin(pi*2*swing_progress)/4 +if(is_hurt, -sin(hurt_time/10*pi)/2, 0) +(torad(-40))*var.die +clamp( var.position-pos_y, -1, 1 )/1.5",
			"body2.ry": "if(is_ridden, clamp(-torad(var.hy)/6, torad(-10), torad( 10)), clamp(-torad(var.hy)/6, torad(-45), torad(45)))",
			"body2.rz": "sin(torad(135)+var.ls)/10*limb_speed",
			"body2.tz": "1.5 +0.5*var.aggro"
		},
		{
			"leg8.rx": "torad(30) -(torad(10)*limb_speed)",
			"leg7.rx": "torad(30) -(torad(10)*limb_speed)",
			"leg8.ry": "torad( 40) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, 0, torad( 10)) +clamp(-torad(var.hy)/14, torad(-10), 0)) +sin(-pi*swing_progress)/4",
			"leg7.ry": "torad(-40) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, torad(-10), 0) +clamp(-torad(var.hy)/14, 0, torad( 10))) -sin(-pi*swing_progress)/4",
			"leg8.rz": "torad( 40) +if(is_ridden, 0, -(torad(12)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 -torad(head_pitch)/14 +(torad( 70))*var.die",
			"leg7.rz": "torad(-40) +if(is_ridden, 0,  (torad(12)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 +torad(head_pitch)/14 -(torad( 70))*var.die",
			"leg8.tx": "12.5 -3.5*var.air -(10)*var.die",
			"leg7.tx": "-leg8.tx",
			"leg8.ty": "23.5 +1.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
			"leg7.ty": "23.5 +1.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
			"leg8.tz": "-12 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg7.tz": "-12 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg8_2.rz": " clamp(cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, -1, 1 )/1.5*var.air +( sin(var.als)/5)*(1+limb_speed)*var.air",
			"leg7_2.rz": "-clamp(cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, -1, 1 )/1.5*var.air +(-sin(var.als)/5)*(1+limb_speed)*var.air",
			"leg8_2.ry": " -asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, 0, 1 )/3*limb_speed*var.air",
			"leg7_2.ry": " -asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, 0, 1 )/3*limb_speed*var.air"
		},
		{
			"leg6.rx": "torad(10) -(torad(3)*limb_speed)",
			"leg5.rx": "torad(10) -(torad(3)*limb_speed)",
			"leg6.ry": "torad( 14) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, 0, torad( 10)) +clamp(-torad(var.hy)/16, torad(-10), 0)) +sin(-pi*swing_progress)/5",
			"leg5.ry": "torad(-14) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, torad(-10), 0) +clamp(-torad(var.hy)/16, 0, torad( 10))) -sin(-pi*swing_progress)/5",
			"leg6.rz": "torad( 33) +if(is_ridden, 0, -(torad(10)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 -torad(head_pitch)/30 +(torad( 70))*var.die",
			"leg5.rz": "torad(-33) +if(is_ridden, 0,  (torad(10)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 +torad(head_pitch)/30 -(torad( 70))*var.die",
			"leg6.tx": "16 -3.5*var.air -(12)*var.die",
			"leg5.tx": "-leg6.tx",
			"leg6.ty": "23.5 +3.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
			"leg5.ty": "23.5 +3.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
			"leg6.tz": "-4.7 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg5.tz": "-4.7 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg6_2.rz": " clamp(-cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, -1, 1 )/1.5*var.air +(-cos(var.als)/5)*(1+limb_speed)*var.air",
			"leg5_2.rz": "-clamp(-cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, -1, 1 )/1.5*var.air +( cos(var.als)/5)*(1+limb_speed)*var.air",
			"leg6_2.ry": "   asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, 0, 1 )/1.5*limb_speed*var.air",
			"leg5_2.ry": "   asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, 0, 1 )/1.5*limb_speed*var.air"
		},
		{
			"leg4.rx": "torad(-10) +(torad(3)*limb_speed)",
			"leg3.rx": "torad(-10) +(torad(3)*limb_speed)",
			"leg4.ry": "torad(-12) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, 0, torad( 10)) +clamp(-torad(var.hy)/18, torad(-10), 0)) +sin(-pi*swing_progress)/6",
			"leg3.ry": "torad( 12) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, torad(-10), 0) +clamp(-torad(var.hy)/18, 0, torad( 10))) -sin(-pi*swing_progress)/6",
			"leg4.rz": "torad( 32) +if(is_ridden, 0, -(torad(10)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 +torad(head_pitch)/30 +(torad( 70))*var.die",
			"leg3.rz": "torad(-32) +if(is_ridden, 0,  (torad(10)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 -torad(head_pitch)/30 -(torad( 70))*var.die",
			"leg4.tx": "16 -3.5*var.air -(12)*var.die",
			"leg3.tx": "-leg4.tx",
			"leg4.ty": "23.5 +3.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
			"leg3.ty": "23.5 +3.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
			"leg4.tz": "3.7 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg3.tz": "3.7 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg4_2.rz": " clamp(cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, -1, 1 )/1.5*var.air +(-sin(var.als)/5)*(1+limb_speed)*var.air",
			"leg3_2.rz": "-clamp(cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, -1, 1 )/1.5*var.air +( sin(var.als)/5)*(1+limb_speed)*var.air",
			"leg4_2.ry": " -asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, 0, 1 )/1.5*limb_speed*var.air",
			"leg3_2.ry": " -asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, 0, 1 )/1.5*limb_speed*var.air"
		},
		{
			"leg2.rx": "torad(-30) +(torad(10)*limb_speed)",
			"leg1.rx": "torad(-30) +(torad(10)*limb_speed)",
			"leg2.ry": "torad(-38) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, 0, torad( 10)) +clamp(-torad(var.hy)/19, torad(-10), 0)) +sin(-pi*swing_progress)/8",
			"leg1.ry": "torad( 38) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(var.hy)/10, torad(-10), 0) +clamp(-torad(var.hy)/19, 0, torad( 10))) -sin(-pi*swing_progress)/8",
			"leg2.rz": "torad( 40) +if(is_ridden, 0, -(torad(12)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 +torad(head_pitch)/14 +(torad( 70))*var.die",
			"leg1.rz": "torad(-40) +if(is_ridden, 0,  (torad(12)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 -torad(head_pitch)/14 -(torad( 70))*var.die",
			"leg2.tx": "12.5 -3.5*var.air -(10)*var.die",
			"leg1.tx": "-leg2.tx",
			"leg2.ty": "23.5 +1.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
			"leg1.ty": "23.5 +1.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
			"leg2.tz": "11 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg1.tz": "11 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
			"leg2_2.rz": " clamp(-cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, -1, 1 )/1.5*var.air +( cos(var.als)/5)*(1+limb_speed)*var.air",
			"leg1_2.rz": "-clamp(-cos(var.r+ var.rotation*9)*clamp( abs( var.rotation-var.roty ), 0, 1 ), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, -1, 1 )/1.5*var.air +(-cos(var.als)/5)*(1+limb_speed)*var.air",
			"leg2_2.ry": "   asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) +clamp( var.position-pos_y, 0, 1 )/2*limb_speed*var.air",
			"leg1_2.ry": "   asin(sin(var.r+ var.rotation*9))/9                                                   *clamp(1-limb_speed*4, 0, 1-var.air) -clamp( var.position-pos_y, 0, 1 )/2*limb_speed*var.air"
		},
		{
			"var.pre_roty": "rot_y",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}