{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"var.hy": "clamp(head_yaw,-90,90)",
			"var.child_scale": "if(is_child, 1, 0)",
			"var.r": "random(id)*pi*4",
			"var.ls": "  limb_swing/if(is_child, 1.8, 1.2)",
			"var.ls_2": "limb_swing/if(is_child, 2.2, 1.2)",
			"var.b": "var.r +age/if(is_child, 6, 10)",
			"var.attack": "(head.rx-torad(50))",
			"var.hurt": "(hurt_time/10)*(hurt_time/10)*max(0, (1-hurt_time/10)*8 )",
			"var.sniff": "(0.5-0.5*cos( clamp(-2 +sin(var.r +age/60)*3, 0, 1)*pi ))",
			"var.run": "clamp(if(limb_speed>=if(is_child, 0.7, 0.87), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.2, 1))",
			"var.walk": "clamp(1-var.run, 0, 1)",
			"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -19, 0, clamp( sin( var.r +age/(20*12) )*8 -5, 0, 1 ) )",
			"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -14, 0, clamp( sin( var.r +age/(15*12) )*8 -5, 0, 1 ) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"body.rx": "torad(-3)                       +(-sin(torad(20)+var.ls_2)/10*limb_speed)*var.run +(sin(var.ls*2)/30*clamp(limb_speed*6, 0, 1))*var.walk +cos(var.r+age*if(is_child, 1.5, 1)/12)/60 +var.attack/5",
			"body.ry": "clamp(torad(var.hy)/5, torad(-15), torad(15))*clamp(1-limb_speed*2, 0, 1) +sin(torad(-45)+var.r+age/16)/8*var.sniff*clamp(1-limb_speed*2, 0, 1)",
			"body.rz": "                                 (cos(torad(-60)+var.ls_2)/20)*var.run +(sin(torad(-60)+var.ls  )/14*clamp(limb_speed*6, 0, 1) )*var.walk",
			"body.tx": "( -sin(torad(-45)+var.r+age/16)*var.sniff*clamp(1-limb_speed*2, 0, 1) ) * (1-0.5*var.child_scale)",
			"body.ty": "( 7 -limb_speed +sin(var.r+age*if(is_child, 1.5, 1)/12 +cos(var.r+age*if(is_child, 1.5, 1)/12)/2)/4 +var.attack*2 ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"body.tz": "-var.attack * (1-0.5*var.child_scale)",
			"head2.rx": "torad(50) +torad(head_pitch)/3 +(-cos(var.ls_2)/8)*var.run +(-cos(var.ls*2)/30*clamp(limb_speed*6, 0, 1) )*var.walk -body.rx*clamp(var.run, 0.5, 1) +sin(var.r+age*if(is_child, 1.5, 1)/12)/40 +(-torad(10))*var.sniff*clamp(1-limb_speed*2, 0, 1) +var.attack",
			"head2.ry": "          clamp( torad(var.hy)/1.5*(1-var.sniff) +sin(var.r+age/16 +sin(torad(45)+var.r+age/8)/3)/3*var.sniff*clamp(1-limb_speed*2, 0, 1), torad(-60), torad(60))",
			"head2.rz": "-body.rz +clamp(-torad(var.hy)/6  *(1-var.sniff) +sin(var.r+age/16 +sin(torad(45)+var.r+age/8)/3)/4*var.sniff*clamp(1-limb_speed*2, 0, 1), torad(-10), torad(10)) -var.attack/6*torad(var.hy)",
			"head2.tx": "          clamp(-torad(var.hy)*3, -3, 3)*(1-var.sniff) -var.attack*3*torad(var.hy)",
			"head2.ty": "-21  +if(is_child, -11, 0)     +(-limb_speed -sin(var.ls_2)*limb_speed)*var.run -var.attack*if(is_child, 6, 3)",
			"head2.tz": "-8.5 +if(is_child, 3.5, 0)",
			"head2.sx": "if(is_child, 1.6, 1)",
			"head2.sy": "if(is_child, 1.6, 1)",
			"head2.sz": "if(is_child, 1.6, 1)"
		},
		{
			"front_left_leg.rx": " ( sin(           var.ls_2)/2  *if(is_child, 1.2, 1)*limb_speed +clamp(-cos(           var.ls_2)/2, 0, torad( 30))*limb_speed)*var.run +(-sin(          var.ls)/4   +clamp( cos(          var.ls)/2, 0, torad( 40))*clamp(limb_speed*6, 0, 1) )*var.walk +torad(2) +sin(var.r+age*if(is_child, 1.5, 1)/12 +cos(var.r+age*if(is_child, 1.5, 1)/12)/2)/40 -var.attack/2",
			"front_right_leg.rx": "( sin(torad( 45)+var.ls_2)/2  *if(is_child, 1.2, 1)*limb_speed +clamp(-cos(torad( 45)+var.ls_2)/2, 0, torad( 30))*limb_speed)*var.run +( sin(          var.ls)/4   +clamp(-cos(          var.ls)/2, 0, torad( 40))*clamp(limb_speed*6, 0, 1) )*var.walk +torad(2) +sin(var.r+age*if(is_child, 1.5, 1)/12 +cos(var.r+age*if(is_child, 1.5, 1)/12)/2)/40 -var.attack/2",
			"back_left_leg.rx": "  (-cos(           var.ls_2)/1.3*if(is_child, 1.2, 1)*limb_speed +clamp( sin(           var.ls_2)/2, torad(-30), 0)*limb_speed)*var.run +(-cos(torad(23)+var.ls)/2.3 +clamp( sin(torad(23)+var.ls)/3, torad(-30), 0)*clamp(limb_speed*6, 0, 1) )*var.walk -torad(2) -sin(var.r+age*if(is_child, 1.5, 1)/12 +cos(var.r+age*if(is_child, 1.5, 1)/12)/2)/40",
			"back_right_leg.rx": " (-cos(torad( 45)+var.ls_2)/1.3*if(is_child, 1.2, 1)*limb_speed +clamp( sin(torad( 45)+var.ls_2)/2, torad(-30), 0)*limb_speed)*var.run +( cos(torad(23)+var.ls)/2.3 +clamp(-sin(torad(23)+var.ls)/3, torad(-30), 0)*clamp(limb_speed*6, 0, 1) )*var.walk -torad(2) -sin(var.r+age*if(is_child, 1.5, 1)/12 +cos(var.r+age*if(is_child, 1.5, 1)/12)/2)/40",
			"front_left_leg.ry": " clamp(torad(-10)+limb_speed-0.4, torad(-10), torad(-5))",
			"front_right_leg.ry": "clamp(torad( 10)-limb_speed+0.4, torad( 5), torad( 10))",
			"back_left_leg.ry": "  torad( 5)",
			"back_right_leg.ry": " torad(-5)",
			"front_left_leg.rz": " clamp(-torad(var.hy)/5, torad(-15), torad(15))*clamp(1-limb_speed*2, 0, 1) -sin(torad(-45)+var.r+age/16)/5*var.sniff*clamp(1-limb_speed*2, 0, 1)",
			"front_right_leg.rz": "clamp(-torad(var.hy)/5, torad(-15), torad(15))*clamp(1-limb_speed*2, 0, 1) -sin(torad(-45)+var.r+age/16)/5*var.sniff*clamp(1-limb_speed*2, 0, 1)",
			"back_left_leg.rz": "  clamp( torad(var.hy)/5, torad(-15), torad(15))*clamp(1-limb_speed*2, 0, 1)",
			"back_right_leg.rz": " clamp( torad(var.hy)/5, torad(-15), torad(15))*clamp(1-limb_speed*2, 0, 1)",
			"front_left_leg.tx": "  4   * (1-0.5*var.child_scale)",
			"front_right_leg.tx": "-4   * (1-0.5*var.child_scale)",
			"back_left_leg.tx": "   4.5 * (1-0.5*var.child_scale)",
			"back_right_leg.tx": " -4.5 * (1-0.5*var.child_scale)",
			"front_left_leg.ty": " ( 22 +clamp((-2*limb_speed +cos(           var.ls_2)*2*if(is_child, 1.2, 1)*limb_speed)*var.run +(-2*limb_speed -cos(          var.ls)*2*clamp(limb_speed*6, 0, 1) )*var.walk, -4, 0) +var.attack*4 ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"front_right_leg.ty": "( 22 +clamp((-2*limb_speed +cos(torad( 45)+var.ls_2)*2*if(is_child, 1.2, 1)*limb_speed)*var.run +(-2*limb_speed +cos(          var.ls)*2*clamp(limb_speed*6, 0, 1) )*var.walk, -4, 0) +var.attack*4 ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"back_left_leg.ty": "  ( 22 +clamp((-2*limb_speed +sin(           var.ls_2)*2*if(is_child, 1.2, 1)*limb_speed)*var.run +(-2*limb_speed +sin(torad(23)+var.ls)*2*clamp(limb_speed*6, 0, 1) )*var.walk, -4, 0)               ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"back_right_leg.ty": " ( 22 +clamp((-2*limb_speed +sin(torad( 45)+var.ls_2)*2*if(is_child, 1.2, 1)*limb_speed)*var.run +(-2*limb_speed -sin(torad(23)+var.ls)*2*clamp(limb_speed*6, 0, 1) )*var.walk, -4, 0)               ) * (1-0.5*var.child_scale) +if(is_child, 12, 0)*var.child_scale",
			"front_left_leg.tz": " (-8.5 +( sin(           var.ls_2)*6*if(is_child, 1.2, 1)*limb_speed)*var.run +(-sin(          var.ls)*4)*var.walk -var.attack*4 ) * (1-0.5*var.child_scale)",
			"front_right_leg.tz": "(-8.5 +( sin(torad( 45)+var.ls_2)*6*if(is_child, 1.2, 1)*limb_speed)*var.run +( sin(          var.ls)*4)*var.walk -var.attack*4 ) * (1-0.5*var.child_scale)",
			"back_left_leg.tz": "  ( 10  +(-cos(           var.ls_2)*6*if(is_child, 1.2, 1)*limb_speed)*var.run +(-cos(torad(23)+var.ls)*4)*var.walk               ) * (1-0.5*var.child_scale)",
			"back_right_leg.tz": " ( 10  +(-cos(torad( 45)+var.ls_2)*6*if(is_child, 1.2, 1)*limb_speed)*var.run +( cos(torad(23)+var.ls)*4)*var.walk               ) * (1-0.5*var.child_scale)"
		},
		{
			"left_ear2.rx": "       torad(-10) +( cos(var.ls*2)/20*clamp(limb_speed*6, 0, 1) )*var.walk +clamp( torad(var.hy)/3, torad(-30), 0)",
			"right_ear2.rx": "      torad(-10) +( cos(var.ls*2)/20*clamp(limb_speed*6, 0, 1) )*var.walk +clamp(-torad(var.hy)/3, torad(-30), 0)",
			"left_ear2.rz": " clamp(torad( 45 -45*clamp( ( sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) ) )*var.Rear -1, 0, 1) ) +(-sin(var.ls*2)/8 *clamp(limb_speed*6, 0, 1) )*var.walk +torad(var.hy)/3*(1-limb_speed), torad(-20), torad( 60)) -cos(var.r+age*if(is_child, 1.5, 1)/12 +sin(var.r+age*if(is_child, 1.5, 1)/12))/12",
			"right_ear2.rz": "clamp(torad(-45 +45*clamp( ( sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) ) )*var.Lear -1, 0, 1) ) +( sin(var.ls*2)/8 *clamp(limb_speed*6, 0, 1) )*var.walk +torad(var.hy)/3*(1-limb_speed), torad(-60), torad( 20)) +cos(var.r+age*if(is_child, 1.5, 1)/12 +sin(var.r+age*if(is_child, 1.5, 1)/12))/12",
			"left_ear2.ry": "       torad( 15 -45*clamp( ( sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) ) )*var.Rear -1, 0, 1)) +clamp( torad(var.hy)/3, torad(-30), 0) +sin(torad(-45)+var.r+age/16 +sin(var.r+age/8)/3)/5*var.sniff*clamp(1-limb_speed*2, 0, 1)",
			"right_ear2.ry": "      torad(-15 +45*clamp( ( sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) ) )*var.Lear -1, 0, 1)) +clamp( torad(var.hy)/3, 0, torad( 30)) +sin(torad(-45)+var.r+age/16 +sin(var.r+age/8)/3)/5*var.sniff*clamp(1-limb_speed*2, 0, 1)",
			"mane2.ry": "( cos(var.ls_2)/20)*var.run +( sin(var.ls)/20)*var.walk +torad(var.hy)/20",
			"mane2.rz": "(-cos(var.ls_2)/4 )*var.run +(-sin(var.ls)/4 )*var.walk -torad(var.hy)/4 -sin(var.r+age*if(is_child, 1.5, 1)/12)/30 +sin(torad(-90)+var.r+age/16 +sin(torad(45)+var.r+age/8)/3)/4*var.sniff*clamp(1-limb_speed*2, 0, 1) -var.attack/2",
			"mane2.tz": "-2.5 +if(is_child, 4, 0)"
		},
		{
			"var.blink": "pow( clamp((1.5 -abs(sin(var.r+age/11)*6))*clamp(-32 +cos((var.r+age/11)/1.5)*40 +cos((var.r+age/11)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "( sin(hurt_time/1.5)/2*var.hurt +max(0,-3 +death_time/2) )*(1-var.blink) +var.blink",
			"eyes.ty": "-3 -clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) ), 1, 128 )/1000",
			"eyes.tz": "-7 -sin(hurt_time/1.5)/3*var.hurt",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_eyelid.ty": "1 -r_eye_white.sy",
			"l_eyelid.ty": "1 -l_eye_white.sy"
		}
	]
}