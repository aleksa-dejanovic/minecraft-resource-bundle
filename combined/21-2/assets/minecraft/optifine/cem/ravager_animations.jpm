{
	"credit": "Created by FreshLX for Fresh Animations",
	"animations": [
		{
			"varb.fcc": "frame_counter == var.frame_counter_prev",
			"var.hy": "if( varb.fcc, var.hy, clamp(head_yaw,-90,90)*min(1,frame_time*9) +var.hy*max(0,1-frame_time*9) )",
			"varb.swim": "! is_riding && ! is_on_ground && is_in_water",
			"var.r": "random(id)*pi*4",
			"var.ls": "limb_swing/1.5",
			"var.lsw": "limb_swing",
			"var.sp": "clamp(limb_speed*8, 0, 1)",
			"var.b": "var.r +age/14",
			"var.swim": "var.r +limb_swing/6+age/3.5",
			"var.ap": "clamp(if( (var.ap==0 || var.ap==1) && swing_progress==0, 0, min(20, var.ap +frame_time*1.5 ) ), 0, 1)",
			"var.att": "sin( ( 1 -( 1 -var.ap ) *( 1 -var.ap ) )*pi )",
			"var.growl": "clamp(if( swing_progress==0 && limb_speed < 0.2 && jaw.rx > torad(5), min(20, var.growl +0.2 *frame_time*20), max(0, var.growl -0.2 *frame_time*20)), 0, 1)",
			"var.run": "   clamp(if( limb_speed>=if(is_aggressive, 0.2, 0.6)                  , min(20, var.run   +0.2 *frame_time*20), max(0, var.run   -0.2 *frame_time*20)), 0, 1)",
			"var.walk": "clamp(1-var.run, 0, 1)",
			"var.nov1": "if(is_aggressive, 0, (0.5-0.5*cos( clamp(-4 +cos(-pi/6 +var.r +age/80)*6, 0, 1)*pi )) )*clamp(2-limb_speed*4, 0, 1)",
			"var.mouth": "(0.5-0.5*cos( clamp(cos(-pi/4 +var.r +limb_swing/20 +age/88 )*6, 0, 1-clamp(sin(var.ap*pi)*2,0,1))*pi ))",
			"var.yrot_offset": "if( varb.fcc, var.yrot_offset, var.yrot_offset +if( between( var.pre_roty-rot_y, -pi*2, -pi*2+0.2 ), -pi*2, between( var.pre_roty-rot_y, pi*2-0.2, pi*2 ), pi*2, 0 ) )",
			"var.roty": "rot_y +var.yrot_offset",
			"var.rotation": "if( varb.fcc, var.rotation, age<9 || is_riding, var.roty,                                                        var.roty*min(1,frame_time*9) +var.rotation*max(0,1-frame_time*9) )",
			"var.head_rot": "if( varb.fcc, var.head_rot, age<9, var.pre_headroty+if(is_riding,0,var.roty), (var.pre_headroty+if(is_riding,0,var.roty))*min(1,frame_time*9) +var.head_rot*max(0,1-frame_time*9) )",
			"var.Created_by_FreshLX_for_Fresh_Animations": "0"
		},
		{
			"root.ry": "var.rotation-rot_y",
			"body.rx": "if(varb.swim, torad(-5 +sin(pi/3+var.swim +cos(pi/3+var.swim)/2)*3 ), (-cos(var.lsw*2 -cos(var.lsw*2)/2 )/18 *var.sp)*var.walk +(sin(pi/4+limb_swing/2)/6*limb_speed)*var.run ) +sin(var.b)/60*(1-var.sp) +cos(limb_swing/2+age/2)/16*var.growl",
			"body.ry": "if(varb.swim, 0, torad(var.hy)/4 )",
			"body.rz": "     if(varb.swim, cos(var.swim)/40, (-cos(var.lsw   +sin(var.lsw*2)/3 )/12*var.sp      )*var.walk +( sin(limb_swing/2 -sin(limb_swing/2)/2 )/12*limb_speed )*var.run ) +sin(limb_swing/2+age/2)/14*var.growl",
			"body.tx": "     if(varb.swim, 0               , ( cos(var.lsw   +sin(var.lsw*2)/3 )/2 *var.sp      )*var.walk +(-sin(limb_swing/2 -sin(limb_swing/2)/2 )/2 *limb_speed )*var.run -torad(var.hy) )",
			"body.ty": "0.5 +if(varb.swim, 6               , ( cos(var.lsw*2 -sin(var.lsw*2)/2 )/3 *var.sp -0.5 )*var.walk +(-sin(limb_swing/2) -1 )*2*limb_speed *var.run ) +(1 -cos(var.b)/2 )*(1-var.sp)",
			"body.tz": "8   +if(varb.swim, 0               , (-cos(var.lsw*2 -cos(var.lsw*2)/2 )/2 *var.sp      )*var.walk +( sin(limb_swing/2)       *limb_speed)*var.run ) -sin(var.ap*pi)*10*var.att",
			"back.rx": "clamp( if(varb.swim, 0, -body.rx/1.5*(1-var.run)                                                        +(-sin(limb_swing/2)*limb_speed -0.8)/5*var.run ) +(2 -sin(var.b) )/40*(1-var.sp), -pi/4, 0)",
			"back.ry": "       if(varb.swim, 0, -body.rz*(1+0.5*var.run) +( sin(var.lsw -cos(var.lsw*2)/5 )/8 *var.sp)*var.walk +torad(var.hy)/8                                                )",
			"back.tx": "       if(varb.swim, 0,                           ( sin(var.lsw -cos(var.lsw*2)/5 )   *var.sp)*var.walk +(-sin(limb_swing/2 -sin(limb_swing/2)/2 )*limb_speed )*var.run )",
			"back.tz": "11.3 -cos(var.b)/4*(1-var.sp)",
			"neck2.rx": "-body.rx/2",
			"neck2.rz": "-body.rz/2",
			"neck2.ty": "-26",
			"neck2.tz": "if(varb.swim, 0                          ,                                                                             (         -sin(limb_swing/2                     )*2*limb_speed)*var.run )                                                  -sin(var.ap*pi)*7  *var.att -(2/6*var.sp)",
			"head2.rx": "if(varb.swim, torad( 3 -sin(var.swim)*7 ), (-sin(-pi/4.5 +var.lsw*2 +sin(-pi/4.5 +var.lsw*2)/3 )/23 -body.rx )*var.sp*var.walk +(-body.rx -sin(limb_swing/2 +cos(limb_swing/2)/3)/8*limb_speed)*var.run ) +torad(head_pitch)/1.5 +cos(var.b)/40*(1-var.sp) -cos(var.ap*pi)*1.2*var.att -jaw.rx/2*var.growl",
			"head2.ry": "clamp(torad(var.hy)/1.5, -pi/4, pi/4)                                                                              +sin(      var.r+age/16 +sin(var.r*2+age/8)/2)/3*var.nov1",
			"head2.rz": "      torad(var.hy)/5      -body.rz/2 +( sin(limb_swing/2+age/2)/10 +sin(limb_swing/2+age*3)/10*jaw.rx )*var.growl +sin(pi/4 +var.r+age/16 +sin(var.r*2+age/8)/2)/5*var.nov1 +sin(age/4)/2*var.att",
			"head2.ty": "-26 -0.7     +( -sin(limb_swing/2)  *limb_speed  -sin(limb_swing/2 +cos(limb_swing/2)/3)/4*limb_speed )*var.run -sin(var.ap*pi)*4*var.att",
			"head2.tz": "-13 -limb_speed -sin(limb_swing/2)*2*limb_speed                                                        *var.run -sin(var.ap*pi)*7*var.att"
		},
		{
			"leg4.rx": "0",
			"leg4.ry": "0",
			"leg4.rz": "0",
			"leg4.tx": "0",
			"leg4.ty": "0",
			"leg4.tz": "0",
			"legs.rx": "0",
			"legs.ry": "0",
			"legs.rz": "0",
			"legs.tx": "0",
			"legs.ty": "0",
			"legs.tz": "0",
			"back_left_leg.rx": "  torad( 4) -cos(var.b)/90 +if(varb.swim, torad( 5 +sin(var.swim+pi/9 +cos(var.swim+pi/9)/3)*19 ), ((-cos(pi/9+var.lsw +cos(pi/9+var.lsw)/2.5 ) )/4.3*clamp(var.sp, 0.5, 1))*var.walk +( cos(pi/8     +limb_swing/2 )/2.5*limb_speed)*var.run +torad(var.hy)/20 ) +sin(var.ap*pi)/4*var.att",
			"back_right_leg.rx": " torad( 4) -cos(var.b)/90 +if(varb.swim, torad( 5 +sin(var.swim-pi/9 +cos(var.swim-pi/9)/3)*19 ), (( cos(pi/9+var.lsw -cos(pi/9+var.lsw)/2.5 ) )/4.3*clamp(var.sp, 0.5, 1))*var.walk +( cos(pi/8+pi/4+limb_swing/2 )/2.5*limb_speed)*var.run -torad(var.hy)/20 ) +sin(var.ap*pi)/4*var.att",
			"front_left_leg.rx": " torad(-4) +cos(var.b)/60 +if(varb.swim, torad(-3 +cos(var.swim+pi/6 -sin(var.swim+pi/6)/3)*19 ), ((-sin(     var.lsw +sin(     var.lsw)/2.5 ) )/4.5*clamp(var.sp, 0.5, 1))*var.walk +( sin(          limb_swing/2 )/2.5*limb_speed)*var.run +torad(var.hy)/20 ) +sin(var.ap*pi)/4*var.att +sin(limb_swing/2+age/2)/3*var.growl",
			"front_right_leg.rx": "torad(-4) +cos(var.b)/60 +if(varb.swim, torad(-3 +cos(var.swim-pi/6 -sin(var.swim-pi/6)/3)*19 ), (( sin(     var.lsw -sin(     var.lsw)/2.5 ) )/4.5*clamp(var.sp, 0.5, 1))*var.walk +( sin(     pi/4+limb_swing/2 )/2.5*limb_speed)*var.run -torad(var.hy)/20 ) +sin(var.ap*pi)/4*var.att",
			"back_left_leg.ry": "  torad(-5)",
			"back_right_leg.ry": " torad( 5)",
			"front_left_leg.ry": " torad(-15)*if(varb.swim, 1, clamp(1-limb_speed*6.6, 0.3, 1) )",
			"front_right_leg.ry": "torad( 15)*if(varb.swim, 1, clamp(1-limb_speed*6.6, 0.3, 1) )",
			"back_left_leg.rz": "  if(varb.swim, torad( 4 -cos(var.swim     )*5 ),  torad(var.hy)/12 ) +back_left_leg.rx  *back_left_leg.ry   +torad(-2)",
			"back_right_leg.rz": " if(varb.swim, torad(-4 +cos(var.swim     )*5 ),  torad(var.hy)/12 ) +back_right_leg.rx *back_right_leg.ry  +torad( 2)",
			"front_left_leg.rz": " if(varb.swim, torad(   -sin(var.swim+pi/6)*5 ), -torad(var.hy)/12 ) +front_left_leg.rx *front_left_leg.ry  +torad(-7)*clamp(1-limb_speed*6.6/2, 0.5, 1)",
			"front_right_leg.rz": "if(varb.swim, torad(    sin(var.swim-pi/6)*5 ), -torad(var.hy)/12 ) +front_right_leg.rx*front_right_leg.ry +torad( 7)*clamp(1-limb_speed*6.6/2, 0.5, 1)",
			"back_left_leg.tx": "    9 +if(varb.swim,-2 +cos(var.swim     )*3,  0                                 )",
			"back_right_leg.tx": "  -9 +if(varb.swim, 2 -cos(var.swim     )*3,  0                                 )",
			"front_left_leg.tx": "  10 +if(varb.swim, 2 +sin(var.swim+pi/6)*3,  2.7*clamp(1-limb_speed*6.6, 0, 1) )",
			"front_right_leg.tx": "-10 +if(varb.swim,-2 -sin(var.swim-pi/6)*3, -2.7*clamp(1-limb_speed*6.6, 0, 1) )",
			"back_left_leg.ty": "  24 +if(varb.swim, 6 +cos(var.swim+pi/9 +cos(var.swim+pi/9)/3)  , clamp(( sin(pi/9+var.lsw +sin(pi/9+var.lsw)/2 )*var.sp*2)*var.walk +( -2*limb_speed -sin(pi/8     +limb_swing/2 +cos(pi/8     +limb_swing/2)/3 )*3*limb_speed)*var.run                                          , -20, 0))",
			"back_right_leg.ty": " 24 +if(varb.swim, 6 +cos(var.swim-pi/9 +cos(var.swim-pi/9)/3)  , clamp((-sin(pi/9+var.lsw -sin(pi/9+var.lsw)/2 )*var.sp*2)*var.walk +( -2*limb_speed -sin(pi/8+pi/4+limb_swing/2 +cos(pi/8+pi/4+limb_swing/2)/3 )*3*limb_speed)*var.run                                          , -20, 0))",
			"front_left_leg.ty": " 24 +if(varb.swim, 4 -sin(var.swim+pi/6 -sin(var.swim+pi/6)/3)*4, clamp((-cos(     var.lsw -cos(     var.lsw)/2 )*var.sp*2)*var.walk +( -2*limb_speed +cos(          limb_swing/2 +sin(          limb_swing/2)/3 )*3*limb_speed)*var.run +sin(pi/2+limb_swing/2+age/2)*4*var.growl, -20, 0))",
			"front_right_leg.ty": "24 +if(varb.swim, 4 -sin(var.swim-pi/6 -sin(var.swim-pi/6)/3)*4, clamp(( cos(     var.lsw +cos(     var.lsw)/2 )*var.sp*2)*var.walk +( -2*limb_speed +cos(     pi/4+limb_swing/2 +sin(     pi/4+limb_swing/2)/3 )*3*limb_speed)*var.run                                          , -20, 0))",
			"back_left_leg.tz": "  21.8 +if(varb.swim,  2 +sin(var.swim+pi/9 +cos(var.swim+pi/9)/3)*10, ( (-cos(pi/9+var.lsw +cos(pi/9+var.lsw)/2.5 ) )*7.5*clamp(var.sp, 0.5, 1))*var.walk +( cos(pi/8     +limb_swing/2 )*11*limb_speed)*var.run)",
			"back_right_leg.tz": " 21.8 +if(varb.swim,  2 +sin(var.swim-pi/9 +cos(var.swim-pi/9)/3)*10, ( ( cos(pi/9+var.lsw -cos(pi/9+var.lsw)/2.5 ) )*7.5*clamp(var.sp, 0.5, 1))*var.walk +( cos(pi/8+pi/4+limb_swing/2 )*11*limb_speed)*var.run)",
			"front_left_leg.tz": " -5.8 +if(varb.swim, -3 +cos(var.swim+pi/6 -sin(var.swim+pi/6)/3)*12, ( (-sin(     var.lsw +sin(     var.lsw)/2.5 ) )*7.5*clamp(var.sp, 0.5, 1))*var.walk +( sin(          limb_swing/2 )*11*limb_speed)*var.run) +1*(1-var.sp) +sin(limb_swing/2+age/2)*8*var.growl",
			"front_right_leg.tz": "-5.8 +if(varb.swim, -3 +cos(var.swim-pi/6 -sin(var.swim-pi/6)/3)*12, ( ( sin(     var.lsw -sin(     var.lsw)/2.5 ) )*7.5*clamp(var.sp, 0.5, 1))*var.walk +( sin(     pi/4+limb_swing/2 )*11*limb_speed)*var.run) +1*(1-var.sp)"
		},
		{
			"jaw2.rx": "clamp( jaw.rx/1.5*var.growl +if(varb.swim, torad(-3), (sin(limb_swing/2)/10 +torad(5))*limb_speed +sin(var.b)/40)*var.mouth +cos( var.ap*pi )*2*var.att , 0, pi/1.5 )",
			"jaw2.rz": "sin(limb_swing/2+age*2)/20*var.growl",
			"jaw2.ty": "10.5 +if(varb.swim, 0, sin(var.b)/2)*var.mouth -0.8+var.mouth",
			"nose.rx": "torad(-0.3) +sin(limb_swing/2)/6*limb_speed +clamp(-torad(head_pitch)/3, -pi/4, pi/40)",
			"nose.rz": "clamp(-torad(var.hy)/8 -head2.rz*2*var.growl +(var.head_rot-var.pre_headroty-if(is_riding,0,var.roty))*2, -pi/6, pi/6)/1.5",
			"brow.rz": "clamp(-var.hy/200, torad(-2.5), torad(2.5))*(1-var.growl)",
			"brow.ty": "-1 +clamp(head_pitch/40 +var.growl, -1, 0.5) +clamp(sin(limb_swing/2+age/70), 0, 0.2)"
		},
		{
			"var.distance": "clamp( sqrt( pow(pos_x-player_pos_x, 2) +pow(pos_y-player_pos_y, 2) +pow(pos_z-player_pos_z, 2) )-3, 0, 128 )",
			"face.tz": "-12 -var.distance/500",
			"r_pupil.tz": "-var.distance/500",
			"l_pupil.tz": "-var.distance/500",
			"brow.tz": "-var.distance/400",
			"var.blink": "pow( clamp(( 1.5 -abs(sin(var.r+age/8)*6))*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1), 0, 1), 2 )",
			"var.eye_top": "( brow.ty+1 )*(1-var.blink) +var.blink",
			"var.pupil_y": "-head2.rx +(var.eye_top+0.5)/2 +torad(head_pitch) +clamp(2*var.nov1, 0, 0.3)",
			"var.pupil_x": "-var.hy/80 +(-sin(pi/4+var.r+age/16)*3 )*2*clamp(var.nov1*4, 0, 1)",
			"var.r_pupil_x": "var.pupil_x -0.6*clamp(var.nov1*4, 0, 1)",
			"var.l_pupil_x": "var.pupil_x +0.6*clamp(var.nov1*4, 0, 1)",
			"r_eye_white.sy": "clamp(1 -var.eye_top, 0, 3 )",
			"l_eye_white.sy": "r_eye_white.sy",
			"r_eye_white.visible": "r_eye_white.sy!=0",
			"l_eye_white.visible": "l_eye_white.sy!=0",
			"r_pupil.tx": "clamp( var.r_pupil_x+2,  0, 2 )-4",
			"l_pupil.tx": "clamp( var.l_pupil_x-2, -2, 0 )+4",
			"r_pupil.ty": "clamp( var.pupil_y+1, -r_eye_white.sy+1 +min( 0.5, r_eye_white.sy ), 1 )",
			"l_pupil.ty": "clamp( var.pupil_y+1, -l_eye_white.sy+1 +min( 0.5, l_eye_white.sy ), 1 )",
			"r_pupil.sy": "min( clamp(2 +var.pupil_y +r_eye_white.sy-2, 0.5, clamp( -var.pupil_y+2, 0.5, 2 ) ), r_eye_white.sy )",
			"l_pupil.sy": "min( clamp(2 +var.pupil_y +l_eye_white.sy-2, 0.5, clamp( -var.pupil_y+2, 0.5, 2 ) ), l_eye_white.sy )",
			"r_pupil.sx": "clamp(1 +clamp(-var.r_pupil_x/2, -0.3, 0 ), 0.5, 1 )",
			"l_pupil.sx": "clamp(1 +clamp( var.l_pupil_x/2, -0.3, 0 ), 0.5, 1 )",
			"r_pupil.visible": "r_pupil.sy!=0",
			"l_pupil.visible": "l_pupil.sy!=0"
		},
		{
			"var.pre_roty": "rot_y",
			"var.pre_headroty": "head2.ry",
			"var.frame_counter_prev": "frame_counter"
		}
	]
}